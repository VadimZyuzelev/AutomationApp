//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace AutomationApp {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("AutomationAppDBDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class AutomationAppDBDataSet : global::System.Data.DataSet {
        
        private ИзделияDataTable tableИзделия;
        
        private Модели_изделияDataTable tableМодели_изделия;
        
        private Модели_тканиDataTable tableМодели_ткани;
        
        private ПоставщикиDataTable tableПоставщики;
        
        private Приходные_ордера_на_тканьDataTable tableПриходные_ордера_на_ткань;
        
        private Приходные_ордера_на_фурнитуруDataTable tableПриходные_ордера_на_фурнитуру;
        
        private ТканиDataTable tableТкани;
        
        private ФурнитураDataTable tableФурнитура;
        
        private ЦехаDataTable tableЦеха;
        
        private Модели_фурнитурыDataTable tableМодели_фурнитуры;
        
        private АвтомобилиDataTable tableАвтомобили;
        
        private Материальные_ценности_по_ордеру_на_фурнитуруDataTable tableМатериальные_ценности_по_ордеру_на_фурнитуру;
        
        private Склад_фурнитурыDataTable tableСклад_фурнитуры;
        
        private Фурнитура_по_лимитно_заборной_картеDataTable tableФурнитура_по_лимитно_заборной_карте;
        
        private Склад_тканиDataTable tableСклад_ткани;
        
        private Ткань_для_расчётной_картыDataTable tableТкань_для_расчётной_карты;
        
        private Лимитно_заборные_картыDataTable tableЛимитно_заборные_карты;
        
        private ВодителиDataTable tableВодители;
        
        private Товарные_накладныеDataTable tableТоварные_накладные;
        
        private Расчётные_картыDataTable tableРасчётные_карты;
        
        private КонтрагентыDataTable tableКонтрагенты;
        
        private Контрагенты_товарно_транспортной_накладнойDataTable tableКонтрагенты_товарно_транспортной_накладной;
        
        private Контрагенты_товарной_накладнойDataTable tableКонтрагенты_товарной_накладной;
        
        private Товарно_транспортные_накладныеDataTable tableТоварно_транспортные_накладные;
        
        private Товарный_раздел_товарно_транспортной_накладнойDataTable tableТоварный_раздел_товарно_транспортной_накладной;
        
        private БригадыDataTable tableБригады;
        
        private Маршрутные_листыDataTable tableМаршрутные_листы;
        
        private Материальные_ценности_по_ордеру_на_тканьDataTable tableМатериальные_ценности_по_ордеру_на_ткань;
        
        private Склад_готовой_продукцииDataTable tableСклад_готовой_продукции;
        
        private Товарный_раздел_товарной_накладнойDataTable tableТоварный_раздел_товарной_накладной;
        
        private Изделия_принятые_на_складDataTable tableИзделия_принятые_на_склад;
        
        private global::System.Data.DataRelation relationFK__Модели_из__Модел__38996AB5;
        
        private global::System.Data.DataRelation relationFK__Модели_тк__ID_Тк__6C190EBB;
        
        private global::System.Data.DataRelation relationFK__Приходные__ID_По__71D1E811;
        
        private global::System.Data.DataRelation relationFK__Приходные__ID_По__571DF1D5;
        
        private global::System.Data.DataRelation relationFK__Модели_фу__ID_Фу__756D6ECB;
        
        private global::System.Data.DataRelation relationFK__Материаль__ID_Мо__1E6F845E;
        
        private global::System.Data.DataRelation relationFK__Материаль__ID_Пр__1F63A897;
        
        private global::System.Data.DataRelation relationFK__Склад_фур__ID_Мо__7720AD13;
        
        private global::System.Data.DataRelation relationFK__Фурнитура__ID_Фу__7AF13DF7;
        
        private global::System.Data.DataRelation relationFK__Склад_тка__ID_Мо__084B3915;
        
        private global::System.Data.DataRelation relationFK__Ткань_для__ID_Тк__0D0FEE32;
        
        private global::System.Data.DataRelation relationFK__Фурнитура__ID_Ли__13BCEBC1;
        
        private global::System.Data.DataRelation relationFK__Лимитно_з__ID_Мо__10E07F16;
        
        private global::System.Data.DataRelation relationFK__Ткань_для__ID_Ра__0C1BC9F9;
        
        private global::System.Data.DataRelation relationFK__Расчётные__ID_Мо__5B78929E;
        
        private global::System.Data.DataRelation relationFK__Контраген__ID_Ко__51BA1E3A;
        
        private global::System.Data.DataRelation relationFK__Контраген__ID_Ко__4DE98D56;
        
        private global::System.Data.DataRelation relationFK__Контраген__ID_То__4CF5691D;
        
        private global::System.Data.DataRelation relationFK__Контраген__ID_То__50C5FA01;
        
        private global::System.Data.DataRelation relationFK__Товарно_т__ID_Ав__3F9B6DFF;
        
        private global::System.Data.DataRelation relationFK__Товарный___Масса__473C8FC7;
        
        private global::System.Data.DataRelation relationFK__Товарно_т__ID_Во__408F9238;
        
        private global::System.Data.DataRelation relationFK__Бригады__ID_Цеха__5FB337D6;
        
        private global::System.Data.DataRelation relationРасчётные_карты_Бригады;
        
        private global::System.Data.DataRelation relationЛимитно_заборные_карты_Бригады;
        
        private global::System.Data.DataRelation relationМодели_изделия_Маршрутные_листы;
        
        private global::System.Data.DataRelation relationFK__Материаль__ID_Пр__0CDAE408;
        
        private global::System.Data.DataRelation relationМатериальные_ценности_по_ордеру_на_ткань_Модели_ткани;
        
        private global::System.Data.DataRelation relationFK__Товарный___ID_Го__1C1D2798;
        
        private global::System.Data.DataRelation relationFK__Товарный___ID_То__1B29035F;
        
        private global::System.Data.DataRelation relationСклад_готовой_продукции_Товарный_раздел_товарно_транспортной_накладной;
        
        private global::System.Data.DataRelation relationМодели_изделия_Склад_готовой_продукции;
        
        private global::System.Data.DataRelation relationМаршрутные_листы_Изделия_принятые_на_склад;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public AutomationAppDBDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected AutomationAppDBDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Изделия"] != null)) {
                    base.Tables.Add(new ИзделияDataTable(ds.Tables["Изделия"]));
                }
                if ((ds.Tables["Модели_изделия"] != null)) {
                    base.Tables.Add(new Модели_изделияDataTable(ds.Tables["Модели_изделия"]));
                }
                if ((ds.Tables["Модели_ткани"] != null)) {
                    base.Tables.Add(new Модели_тканиDataTable(ds.Tables["Модели_ткани"]));
                }
                if ((ds.Tables["Поставщики"] != null)) {
                    base.Tables.Add(new ПоставщикиDataTable(ds.Tables["Поставщики"]));
                }
                if ((ds.Tables["Приходные_ордера_на_ткань"] != null)) {
                    base.Tables.Add(new Приходные_ордера_на_тканьDataTable(ds.Tables["Приходные_ордера_на_ткань"]));
                }
                if ((ds.Tables["Приходные_ордера_на_фурнитуру"] != null)) {
                    base.Tables.Add(new Приходные_ордера_на_фурнитуруDataTable(ds.Tables["Приходные_ордера_на_фурнитуру"]));
                }
                if ((ds.Tables["Ткани"] != null)) {
                    base.Tables.Add(new ТканиDataTable(ds.Tables["Ткани"]));
                }
                if ((ds.Tables["Фурнитура"] != null)) {
                    base.Tables.Add(new ФурнитураDataTable(ds.Tables["Фурнитура"]));
                }
                if ((ds.Tables["Цеха"] != null)) {
                    base.Tables.Add(new ЦехаDataTable(ds.Tables["Цеха"]));
                }
                if ((ds.Tables["Модели_фурнитуры"] != null)) {
                    base.Tables.Add(new Модели_фурнитурыDataTable(ds.Tables["Модели_фурнитуры"]));
                }
                if ((ds.Tables["Автомобили"] != null)) {
                    base.Tables.Add(new АвтомобилиDataTable(ds.Tables["Автомобили"]));
                }
                if ((ds.Tables["Материальные_ценности_по_ордеру_на_фурнитуру"] != null)) {
                    base.Tables.Add(new Материальные_ценности_по_ордеру_на_фурнитуруDataTable(ds.Tables["Материальные_ценности_по_ордеру_на_фурнитуру"]));
                }
                if ((ds.Tables["Склад_фурнитуры"] != null)) {
                    base.Tables.Add(new Склад_фурнитурыDataTable(ds.Tables["Склад_фурнитуры"]));
                }
                if ((ds.Tables["Фурнитура_по_лимитно_заборной_карте"] != null)) {
                    base.Tables.Add(new Фурнитура_по_лимитно_заборной_картеDataTable(ds.Tables["Фурнитура_по_лимитно_заборной_карте"]));
                }
                if ((ds.Tables["Склад_ткани"] != null)) {
                    base.Tables.Add(new Склад_тканиDataTable(ds.Tables["Склад_ткани"]));
                }
                if ((ds.Tables["Ткань_для_расчётной_карты"] != null)) {
                    base.Tables.Add(new Ткань_для_расчётной_картыDataTable(ds.Tables["Ткань_для_расчётной_карты"]));
                }
                if ((ds.Tables["Лимитно_заборные_карты"] != null)) {
                    base.Tables.Add(new Лимитно_заборные_картыDataTable(ds.Tables["Лимитно_заборные_карты"]));
                }
                if ((ds.Tables["Водители"] != null)) {
                    base.Tables.Add(new ВодителиDataTable(ds.Tables["Водители"]));
                }
                if ((ds.Tables["Товарные_накладные"] != null)) {
                    base.Tables.Add(new Товарные_накладныеDataTable(ds.Tables["Товарные_накладные"]));
                }
                if ((ds.Tables["Расчётные_карты"] != null)) {
                    base.Tables.Add(new Расчётные_картыDataTable(ds.Tables["Расчётные_карты"]));
                }
                if ((ds.Tables["Контрагенты"] != null)) {
                    base.Tables.Add(new КонтрагентыDataTable(ds.Tables["Контрагенты"]));
                }
                if ((ds.Tables["Контрагенты_товарно_транспортной_накладной"] != null)) {
                    base.Tables.Add(new Контрагенты_товарно_транспортной_накладнойDataTable(ds.Tables["Контрагенты_товарно_транспортной_накладной"]));
                }
                if ((ds.Tables["Контрагенты_товарной_накладной"] != null)) {
                    base.Tables.Add(new Контрагенты_товарной_накладнойDataTable(ds.Tables["Контрагенты_товарной_накладной"]));
                }
                if ((ds.Tables["Товарно_транспортные_накладные"] != null)) {
                    base.Tables.Add(new Товарно_транспортные_накладныеDataTable(ds.Tables["Товарно_транспортные_накладные"]));
                }
                if ((ds.Tables["Товарный_раздел_товарно_транспортной_накладной"] != null)) {
                    base.Tables.Add(new Товарный_раздел_товарно_транспортной_накладнойDataTable(ds.Tables["Товарный_раздел_товарно_транспортной_накладной"]));
                }
                if ((ds.Tables["Бригады"] != null)) {
                    base.Tables.Add(new БригадыDataTable(ds.Tables["Бригады"]));
                }
                if ((ds.Tables["Маршрутные_листы"] != null)) {
                    base.Tables.Add(new Маршрутные_листыDataTable(ds.Tables["Маршрутные_листы"]));
                }
                if ((ds.Tables["Материальные_ценности_по_ордеру_на_ткань"] != null)) {
                    base.Tables.Add(new Материальные_ценности_по_ордеру_на_тканьDataTable(ds.Tables["Материальные_ценности_по_ордеру_на_ткань"]));
                }
                if ((ds.Tables["Склад_готовой_продукции"] != null)) {
                    base.Tables.Add(new Склад_готовой_продукцииDataTable(ds.Tables["Склад_готовой_продукции"]));
                }
                if ((ds.Tables["Товарный_раздел_товарной_накладной"] != null)) {
                    base.Tables.Add(new Товарный_раздел_товарной_накладнойDataTable(ds.Tables["Товарный_раздел_товарной_накладной"]));
                }
                if ((ds.Tables["Изделия_принятые_на_склад"] != null)) {
                    base.Tables.Add(new Изделия_принятые_на_складDataTable(ds.Tables["Изделия_принятые_на_склад"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ИзделияDataTable Изделия {
            get {
                return this.tableИзделия;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Модели_изделияDataTable Модели_изделия {
            get {
                return this.tableМодели_изделия;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Модели_тканиDataTable Модели_ткани {
            get {
                return this.tableМодели_ткани;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ПоставщикиDataTable Поставщики {
            get {
                return this.tableПоставщики;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Приходные_ордера_на_тканьDataTable Приходные_ордера_на_ткань {
            get {
                return this.tableПриходные_ордера_на_ткань;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Приходные_ордера_на_фурнитуруDataTable Приходные_ордера_на_фурнитуру {
            get {
                return this.tableПриходные_ордера_на_фурнитуру;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ТканиDataTable Ткани {
            get {
                return this.tableТкани;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ФурнитураDataTable Фурнитура {
            get {
                return this.tableФурнитура;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ЦехаDataTable Цеха {
            get {
                return this.tableЦеха;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Модели_фурнитурыDataTable Модели_фурнитуры {
            get {
                return this.tableМодели_фурнитуры;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public АвтомобилиDataTable Автомобили {
            get {
                return this.tableАвтомобили;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Материальные_ценности_по_ордеру_на_фурнитуруDataTable Материальные_ценности_по_ордеру_на_фурнитуру {
            get {
                return this.tableМатериальные_ценности_по_ордеру_на_фурнитуру;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Склад_фурнитурыDataTable Склад_фурнитуры {
            get {
                return this.tableСклад_фурнитуры;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Фурнитура_по_лимитно_заборной_картеDataTable Фурнитура_по_лимитно_заборной_карте {
            get {
                return this.tableФурнитура_по_лимитно_заборной_карте;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Склад_тканиDataTable Склад_ткани {
            get {
                return this.tableСклад_ткани;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Ткань_для_расчётной_картыDataTable Ткань_для_расчётной_карты {
            get {
                return this.tableТкань_для_расчётной_карты;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Лимитно_заборные_картыDataTable Лимитно_заборные_карты {
            get {
                return this.tableЛимитно_заборные_карты;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ВодителиDataTable Водители {
            get {
                return this.tableВодители;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Товарные_накладныеDataTable Товарные_накладные {
            get {
                return this.tableТоварные_накладные;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Расчётные_картыDataTable Расчётные_карты {
            get {
                return this.tableРасчётные_карты;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public КонтрагентыDataTable Контрагенты {
            get {
                return this.tableКонтрагенты;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Контрагенты_товарно_транспортной_накладнойDataTable Контрагенты_товарно_транспортной_накладной {
            get {
                return this.tableКонтрагенты_товарно_транспортной_накладной;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Контрагенты_товарной_накладнойDataTable Контрагенты_товарной_накладной {
            get {
                return this.tableКонтрагенты_товарной_накладной;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Товарно_транспортные_накладныеDataTable Товарно_транспортные_накладные {
            get {
                return this.tableТоварно_транспортные_накладные;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Товарный_раздел_товарно_транспортной_накладнойDataTable Товарный_раздел_товарно_транспортной_накладной {
            get {
                return this.tableТоварный_раздел_товарно_транспортной_накладной;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public БригадыDataTable Бригады {
            get {
                return this.tableБригады;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Маршрутные_листыDataTable Маршрутные_листы {
            get {
                return this.tableМаршрутные_листы;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Материальные_ценности_по_ордеру_на_тканьDataTable Материальные_ценности_по_ордеру_на_ткань {
            get {
                return this.tableМатериальные_ценности_по_ордеру_на_ткань;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Склад_готовой_продукцииDataTable Склад_готовой_продукции {
            get {
                return this.tableСклад_готовой_продукции;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Товарный_раздел_товарной_накладнойDataTable Товарный_раздел_товарной_накладной {
            get {
                return this.tableТоварный_раздел_товарной_накладной;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Изделия_принятые_на_складDataTable Изделия_принятые_на_склад {
            get {
                return this.tableИзделия_принятые_на_склад;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            AutomationAppDBDataSet cln = ((AutomationAppDBDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Изделия"] != null)) {
                    base.Tables.Add(new ИзделияDataTable(ds.Tables["Изделия"]));
                }
                if ((ds.Tables["Модели_изделия"] != null)) {
                    base.Tables.Add(new Модели_изделияDataTable(ds.Tables["Модели_изделия"]));
                }
                if ((ds.Tables["Модели_ткани"] != null)) {
                    base.Tables.Add(new Модели_тканиDataTable(ds.Tables["Модели_ткани"]));
                }
                if ((ds.Tables["Поставщики"] != null)) {
                    base.Tables.Add(new ПоставщикиDataTable(ds.Tables["Поставщики"]));
                }
                if ((ds.Tables["Приходные_ордера_на_ткань"] != null)) {
                    base.Tables.Add(new Приходные_ордера_на_тканьDataTable(ds.Tables["Приходные_ордера_на_ткань"]));
                }
                if ((ds.Tables["Приходные_ордера_на_фурнитуру"] != null)) {
                    base.Tables.Add(new Приходные_ордера_на_фурнитуруDataTable(ds.Tables["Приходные_ордера_на_фурнитуру"]));
                }
                if ((ds.Tables["Ткани"] != null)) {
                    base.Tables.Add(new ТканиDataTable(ds.Tables["Ткани"]));
                }
                if ((ds.Tables["Фурнитура"] != null)) {
                    base.Tables.Add(new ФурнитураDataTable(ds.Tables["Фурнитура"]));
                }
                if ((ds.Tables["Цеха"] != null)) {
                    base.Tables.Add(new ЦехаDataTable(ds.Tables["Цеха"]));
                }
                if ((ds.Tables["Модели_фурнитуры"] != null)) {
                    base.Tables.Add(new Модели_фурнитурыDataTable(ds.Tables["Модели_фурнитуры"]));
                }
                if ((ds.Tables["Автомобили"] != null)) {
                    base.Tables.Add(new АвтомобилиDataTable(ds.Tables["Автомобили"]));
                }
                if ((ds.Tables["Материальные_ценности_по_ордеру_на_фурнитуру"] != null)) {
                    base.Tables.Add(new Материальные_ценности_по_ордеру_на_фурнитуруDataTable(ds.Tables["Материальные_ценности_по_ордеру_на_фурнитуру"]));
                }
                if ((ds.Tables["Склад_фурнитуры"] != null)) {
                    base.Tables.Add(new Склад_фурнитурыDataTable(ds.Tables["Склад_фурнитуры"]));
                }
                if ((ds.Tables["Фурнитура_по_лимитно_заборной_карте"] != null)) {
                    base.Tables.Add(new Фурнитура_по_лимитно_заборной_картеDataTable(ds.Tables["Фурнитура_по_лимитно_заборной_карте"]));
                }
                if ((ds.Tables["Склад_ткани"] != null)) {
                    base.Tables.Add(new Склад_тканиDataTable(ds.Tables["Склад_ткани"]));
                }
                if ((ds.Tables["Ткань_для_расчётной_карты"] != null)) {
                    base.Tables.Add(new Ткань_для_расчётной_картыDataTable(ds.Tables["Ткань_для_расчётной_карты"]));
                }
                if ((ds.Tables["Лимитно_заборные_карты"] != null)) {
                    base.Tables.Add(new Лимитно_заборные_картыDataTable(ds.Tables["Лимитно_заборные_карты"]));
                }
                if ((ds.Tables["Водители"] != null)) {
                    base.Tables.Add(new ВодителиDataTable(ds.Tables["Водители"]));
                }
                if ((ds.Tables["Товарные_накладные"] != null)) {
                    base.Tables.Add(new Товарные_накладныеDataTable(ds.Tables["Товарные_накладные"]));
                }
                if ((ds.Tables["Расчётные_карты"] != null)) {
                    base.Tables.Add(new Расчётные_картыDataTable(ds.Tables["Расчётные_карты"]));
                }
                if ((ds.Tables["Контрагенты"] != null)) {
                    base.Tables.Add(new КонтрагентыDataTable(ds.Tables["Контрагенты"]));
                }
                if ((ds.Tables["Контрагенты_товарно_транспортной_накладной"] != null)) {
                    base.Tables.Add(new Контрагенты_товарно_транспортной_накладнойDataTable(ds.Tables["Контрагенты_товарно_транспортной_накладной"]));
                }
                if ((ds.Tables["Контрагенты_товарной_накладной"] != null)) {
                    base.Tables.Add(new Контрагенты_товарной_накладнойDataTable(ds.Tables["Контрагенты_товарной_накладной"]));
                }
                if ((ds.Tables["Товарно_транспортные_накладные"] != null)) {
                    base.Tables.Add(new Товарно_транспортные_накладныеDataTable(ds.Tables["Товарно_транспортные_накладные"]));
                }
                if ((ds.Tables["Товарный_раздел_товарно_транспортной_накладной"] != null)) {
                    base.Tables.Add(new Товарный_раздел_товарно_транспортной_накладнойDataTable(ds.Tables["Товарный_раздел_товарно_транспортной_накладной"]));
                }
                if ((ds.Tables["Бригады"] != null)) {
                    base.Tables.Add(new БригадыDataTable(ds.Tables["Бригады"]));
                }
                if ((ds.Tables["Маршрутные_листы"] != null)) {
                    base.Tables.Add(new Маршрутные_листыDataTable(ds.Tables["Маршрутные_листы"]));
                }
                if ((ds.Tables["Материальные_ценности_по_ордеру_на_ткань"] != null)) {
                    base.Tables.Add(new Материальные_ценности_по_ордеру_на_тканьDataTable(ds.Tables["Материальные_ценности_по_ордеру_на_ткань"]));
                }
                if ((ds.Tables["Склад_готовой_продукции"] != null)) {
                    base.Tables.Add(new Склад_готовой_продукцииDataTable(ds.Tables["Склад_готовой_продукции"]));
                }
                if ((ds.Tables["Товарный_раздел_товарной_накладной"] != null)) {
                    base.Tables.Add(new Товарный_раздел_товарной_накладнойDataTable(ds.Tables["Товарный_раздел_товарной_накладной"]));
                }
                if ((ds.Tables["Изделия_принятые_на_склад"] != null)) {
                    base.Tables.Add(new Изделия_принятые_на_складDataTable(ds.Tables["Изделия_принятые_на_склад"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableИзделия = ((ИзделияDataTable)(base.Tables["Изделия"]));
            if ((initTable == true)) {
                if ((this.tableИзделия != null)) {
                    this.tableИзделия.InitVars();
                }
            }
            this.tableМодели_изделия = ((Модели_изделияDataTable)(base.Tables["Модели_изделия"]));
            if ((initTable == true)) {
                if ((this.tableМодели_изделия != null)) {
                    this.tableМодели_изделия.InitVars();
                }
            }
            this.tableМодели_ткани = ((Модели_тканиDataTable)(base.Tables["Модели_ткани"]));
            if ((initTable == true)) {
                if ((this.tableМодели_ткани != null)) {
                    this.tableМодели_ткани.InitVars();
                }
            }
            this.tableПоставщики = ((ПоставщикиDataTable)(base.Tables["Поставщики"]));
            if ((initTable == true)) {
                if ((this.tableПоставщики != null)) {
                    this.tableПоставщики.InitVars();
                }
            }
            this.tableПриходные_ордера_на_ткань = ((Приходные_ордера_на_тканьDataTable)(base.Tables["Приходные_ордера_на_ткань"]));
            if ((initTable == true)) {
                if ((this.tableПриходные_ордера_на_ткань != null)) {
                    this.tableПриходные_ордера_на_ткань.InitVars();
                }
            }
            this.tableПриходные_ордера_на_фурнитуру = ((Приходные_ордера_на_фурнитуруDataTable)(base.Tables["Приходные_ордера_на_фурнитуру"]));
            if ((initTable == true)) {
                if ((this.tableПриходные_ордера_на_фурнитуру != null)) {
                    this.tableПриходные_ордера_на_фурнитуру.InitVars();
                }
            }
            this.tableТкани = ((ТканиDataTable)(base.Tables["Ткани"]));
            if ((initTable == true)) {
                if ((this.tableТкани != null)) {
                    this.tableТкани.InitVars();
                }
            }
            this.tableФурнитура = ((ФурнитураDataTable)(base.Tables["Фурнитура"]));
            if ((initTable == true)) {
                if ((this.tableФурнитура != null)) {
                    this.tableФурнитура.InitVars();
                }
            }
            this.tableЦеха = ((ЦехаDataTable)(base.Tables["Цеха"]));
            if ((initTable == true)) {
                if ((this.tableЦеха != null)) {
                    this.tableЦеха.InitVars();
                }
            }
            this.tableМодели_фурнитуры = ((Модели_фурнитурыDataTable)(base.Tables["Модели_фурнитуры"]));
            if ((initTable == true)) {
                if ((this.tableМодели_фурнитуры != null)) {
                    this.tableМодели_фурнитуры.InitVars();
                }
            }
            this.tableАвтомобили = ((АвтомобилиDataTable)(base.Tables["Автомобили"]));
            if ((initTable == true)) {
                if ((this.tableАвтомобили != null)) {
                    this.tableАвтомобили.InitVars();
                }
            }
            this.tableМатериальные_ценности_по_ордеру_на_фурнитуру = ((Материальные_ценности_по_ордеру_на_фурнитуруDataTable)(base.Tables["Материальные_ценности_по_ордеру_на_фурнитуру"]));
            if ((initTable == true)) {
                if ((this.tableМатериальные_ценности_по_ордеру_на_фурнитуру != null)) {
                    this.tableМатериальные_ценности_по_ордеру_на_фурнитуру.InitVars();
                }
            }
            this.tableСклад_фурнитуры = ((Склад_фурнитурыDataTable)(base.Tables["Склад_фурнитуры"]));
            if ((initTable == true)) {
                if ((this.tableСклад_фурнитуры != null)) {
                    this.tableСклад_фурнитуры.InitVars();
                }
            }
            this.tableФурнитура_по_лимитно_заборной_карте = ((Фурнитура_по_лимитно_заборной_картеDataTable)(base.Tables["Фурнитура_по_лимитно_заборной_карте"]));
            if ((initTable == true)) {
                if ((this.tableФурнитура_по_лимитно_заборной_карте != null)) {
                    this.tableФурнитура_по_лимитно_заборной_карте.InitVars();
                }
            }
            this.tableСклад_ткани = ((Склад_тканиDataTable)(base.Tables["Склад_ткани"]));
            if ((initTable == true)) {
                if ((this.tableСклад_ткани != null)) {
                    this.tableСклад_ткани.InitVars();
                }
            }
            this.tableТкань_для_расчётной_карты = ((Ткань_для_расчётной_картыDataTable)(base.Tables["Ткань_для_расчётной_карты"]));
            if ((initTable == true)) {
                if ((this.tableТкань_для_расчётной_карты != null)) {
                    this.tableТкань_для_расчётной_карты.InitVars();
                }
            }
            this.tableЛимитно_заборные_карты = ((Лимитно_заборные_картыDataTable)(base.Tables["Лимитно_заборные_карты"]));
            if ((initTable == true)) {
                if ((this.tableЛимитно_заборные_карты != null)) {
                    this.tableЛимитно_заборные_карты.InitVars();
                }
            }
            this.tableВодители = ((ВодителиDataTable)(base.Tables["Водители"]));
            if ((initTable == true)) {
                if ((this.tableВодители != null)) {
                    this.tableВодители.InitVars();
                }
            }
            this.tableТоварные_накладные = ((Товарные_накладныеDataTable)(base.Tables["Товарные_накладные"]));
            if ((initTable == true)) {
                if ((this.tableТоварные_накладные != null)) {
                    this.tableТоварные_накладные.InitVars();
                }
            }
            this.tableРасчётные_карты = ((Расчётные_картыDataTable)(base.Tables["Расчётные_карты"]));
            if ((initTable == true)) {
                if ((this.tableРасчётные_карты != null)) {
                    this.tableРасчётные_карты.InitVars();
                }
            }
            this.tableКонтрагенты = ((КонтрагентыDataTable)(base.Tables["Контрагенты"]));
            if ((initTable == true)) {
                if ((this.tableКонтрагенты != null)) {
                    this.tableКонтрагенты.InitVars();
                }
            }
            this.tableКонтрагенты_товарно_транспортной_накладной = ((Контрагенты_товарно_транспортной_накладнойDataTable)(base.Tables["Контрагенты_товарно_транспортной_накладной"]));
            if ((initTable == true)) {
                if ((this.tableКонтрагенты_товарно_транспортной_накладной != null)) {
                    this.tableКонтрагенты_товарно_транспортной_накладной.InitVars();
                }
            }
            this.tableКонтрагенты_товарной_накладной = ((Контрагенты_товарной_накладнойDataTable)(base.Tables["Контрагенты_товарной_накладной"]));
            if ((initTable == true)) {
                if ((this.tableКонтрагенты_товарной_накладной != null)) {
                    this.tableКонтрагенты_товарной_накладной.InitVars();
                }
            }
            this.tableТоварно_транспортные_накладные = ((Товарно_транспортные_накладныеDataTable)(base.Tables["Товарно_транспортные_накладные"]));
            if ((initTable == true)) {
                if ((this.tableТоварно_транспортные_накладные != null)) {
                    this.tableТоварно_транспортные_накладные.InitVars();
                }
            }
            this.tableТоварный_раздел_товарно_транспортной_накладной = ((Товарный_раздел_товарно_транспортной_накладнойDataTable)(base.Tables["Товарный_раздел_товарно_транспортной_накладной"]));
            if ((initTable == true)) {
                if ((this.tableТоварный_раздел_товарно_транспортной_накладной != null)) {
                    this.tableТоварный_раздел_товарно_транспортной_накладной.InitVars();
                }
            }
            this.tableБригады = ((БригадыDataTable)(base.Tables["Бригады"]));
            if ((initTable == true)) {
                if ((this.tableБригады != null)) {
                    this.tableБригады.InitVars();
                }
            }
            this.tableМаршрутные_листы = ((Маршрутные_листыDataTable)(base.Tables["Маршрутные_листы"]));
            if ((initTable == true)) {
                if ((this.tableМаршрутные_листы != null)) {
                    this.tableМаршрутные_листы.InitVars();
                }
            }
            this.tableМатериальные_ценности_по_ордеру_на_ткань = ((Материальные_ценности_по_ордеру_на_тканьDataTable)(base.Tables["Материальные_ценности_по_ордеру_на_ткань"]));
            if ((initTable == true)) {
                if ((this.tableМатериальные_ценности_по_ордеру_на_ткань != null)) {
                    this.tableМатериальные_ценности_по_ордеру_на_ткань.InitVars();
                }
            }
            this.tableСклад_готовой_продукции = ((Склад_готовой_продукцииDataTable)(base.Tables["Склад_готовой_продукции"]));
            if ((initTable == true)) {
                if ((this.tableСклад_готовой_продукции != null)) {
                    this.tableСклад_готовой_продукции.InitVars();
                }
            }
            this.tableТоварный_раздел_товарной_накладной = ((Товарный_раздел_товарной_накладнойDataTable)(base.Tables["Товарный_раздел_товарной_накладной"]));
            if ((initTable == true)) {
                if ((this.tableТоварный_раздел_товарной_накладной != null)) {
                    this.tableТоварный_раздел_товарной_накладной.InitVars();
                }
            }
            this.tableИзделия_принятые_на_склад = ((Изделия_принятые_на_складDataTable)(base.Tables["Изделия_принятые_на_склад"]));
            if ((initTable == true)) {
                if ((this.tableИзделия_принятые_на_склад != null)) {
                    this.tableИзделия_принятые_на_склад.InitVars();
                }
            }
            this.relationFK__Модели_из__Модел__38996AB5 = this.Relations["FK__Модели_из__Модел__38996AB5"];
            this.relationFK__Модели_тк__ID_Тк__6C190EBB = this.Relations["FK__Модели_тк__ID_Тк__6C190EBB"];
            this.relationFK__Приходные__ID_По__71D1E811 = this.Relations["FK__Приходные__ID_По__71D1E811"];
            this.relationFK__Приходные__ID_По__571DF1D5 = this.Relations["FK__Приходные__ID_По__571DF1D5"];
            this.relationFK__Модели_фу__ID_Фу__756D6ECB = this.Relations["FK__Модели_фу__ID_Фу__756D6ECB"];
            this.relationFK__Материаль__ID_Мо__1E6F845E = this.Relations["FK__Материаль__ID_Мо__1E6F845E"];
            this.relationFK__Материаль__ID_Пр__1F63A897 = this.Relations["FK__Материаль__ID_Пр__1F63A897"];
            this.relationFK__Склад_фур__ID_Мо__7720AD13 = this.Relations["FK__Склад_фур__ID_Мо__7720AD13"];
            this.relationFK__Фурнитура__ID_Фу__7AF13DF7 = this.Relations["FK__Фурнитура__ID_Фу__7AF13DF7"];
            this.relationFK__Склад_тка__ID_Мо__084B3915 = this.Relations["FK__Склад_тка__ID_Мо__084B3915"];
            this.relationFK__Ткань_для__ID_Тк__0D0FEE32 = this.Relations["FK__Ткань_для__ID_Тк__0D0FEE32"];
            this.relationFK__Фурнитура__ID_Ли__13BCEBC1 = this.Relations["FK__Фурнитура__ID_Ли__13BCEBC1"];
            this.relationFK__Лимитно_з__ID_Мо__10E07F16 = this.Relations["FK__Лимитно_з__ID_Мо__10E07F16"];
            this.relationFK__Ткань_для__ID_Ра__0C1BC9F9 = this.Relations["FK__Ткань_для__ID_Ра__0C1BC9F9"];
            this.relationFK__Расчётные__ID_Мо__5B78929E = this.Relations["FK__Расчётные__ID_Мо__5B78929E"];
            this.relationFK__Контраген__ID_Ко__51BA1E3A = this.Relations["FK__Контраген__ID_Ко__51BA1E3A"];
            this.relationFK__Контраген__ID_Ко__4DE98D56 = this.Relations["FK__Контраген__ID_Ко__4DE98D56"];
            this.relationFK__Контраген__ID_То__4CF5691D = this.Relations["FK__Контраген__ID_То__4CF5691D"];
            this.relationFK__Контраген__ID_То__50C5FA01 = this.Relations["FK__Контраген__ID_То__50C5FA01"];
            this.relationFK__Товарно_т__ID_Ав__3F9B6DFF = this.Relations["FK__Товарно_т__ID_Ав__3F9B6DFF"];
            this.relationFK__Товарный___Масса__473C8FC7 = this.Relations["FK__Товарный___Масса__473C8FC7"];
            this.relationFK__Товарно_т__ID_Во__408F9238 = this.Relations["FK__Товарно_т__ID_Во__408F9238"];
            this.relationFK__Бригады__ID_Цеха__5FB337D6 = this.Relations["FK__Бригады__ID_Цеха__5FB337D6"];
            this.relationРасчётные_карты_Бригады = this.Relations["Расчётные_карты_Бригады"];
            this.relationЛимитно_заборные_карты_Бригады = this.Relations["Лимитно_заборные_карты_Бригады"];
            this.relationМодели_изделия_Маршрутные_листы = this.Relations["Модели_изделия_Маршрутные_листы"];
            this.relationFK__Материаль__ID_Пр__0CDAE408 = this.Relations["FK__Материаль__ID_Пр__0CDAE408"];
            this.relationМатериальные_ценности_по_ордеру_на_ткань_Модели_ткани = this.Relations["Материальные_ценности_по_ордеру_на_ткань_Модели_ткани"];
            this.relationFK__Товарный___ID_Го__1C1D2798 = this.Relations["FK__Товарный___ID_Го__1C1D2798"];
            this.relationFK__Товарный___ID_То__1B29035F = this.Relations["FK__Товарный___ID_То__1B29035F"];
            this.relationСклад_готовой_продукции_Товарный_раздел_товарно_транспортной_накладной = this.Relations["Склад_готовой_продукции_Товарный_раздел_товарно_транспортной_накладной"];
            this.relationМодели_изделия_Склад_готовой_продукции = this.Relations["Модели_изделия_Склад_готовой_продукции"];
            this.relationМаршрутные_листы_Изделия_принятые_на_склад = this.Relations["Маршрутные_листы_Изделия_принятые_на_склад"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "AutomationAppDBDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/AutomationAppDBDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableИзделия = new ИзделияDataTable();
            base.Tables.Add(this.tableИзделия);
            this.tableМодели_изделия = new Модели_изделияDataTable();
            base.Tables.Add(this.tableМодели_изделия);
            this.tableМодели_ткани = new Модели_тканиDataTable();
            base.Tables.Add(this.tableМодели_ткани);
            this.tableПоставщики = new ПоставщикиDataTable();
            base.Tables.Add(this.tableПоставщики);
            this.tableПриходные_ордера_на_ткань = new Приходные_ордера_на_тканьDataTable();
            base.Tables.Add(this.tableПриходные_ордера_на_ткань);
            this.tableПриходные_ордера_на_фурнитуру = new Приходные_ордера_на_фурнитуруDataTable();
            base.Tables.Add(this.tableПриходные_ордера_на_фурнитуру);
            this.tableТкани = new ТканиDataTable();
            base.Tables.Add(this.tableТкани);
            this.tableФурнитура = new ФурнитураDataTable();
            base.Tables.Add(this.tableФурнитура);
            this.tableЦеха = new ЦехаDataTable();
            base.Tables.Add(this.tableЦеха);
            this.tableМодели_фурнитуры = new Модели_фурнитурыDataTable();
            base.Tables.Add(this.tableМодели_фурнитуры);
            this.tableАвтомобили = new АвтомобилиDataTable();
            base.Tables.Add(this.tableАвтомобили);
            this.tableМатериальные_ценности_по_ордеру_на_фурнитуру = new Материальные_ценности_по_ордеру_на_фурнитуруDataTable();
            base.Tables.Add(this.tableМатериальные_ценности_по_ордеру_на_фурнитуру);
            this.tableСклад_фурнитуры = new Склад_фурнитурыDataTable();
            base.Tables.Add(this.tableСклад_фурнитуры);
            this.tableФурнитура_по_лимитно_заборной_карте = new Фурнитура_по_лимитно_заборной_картеDataTable();
            base.Tables.Add(this.tableФурнитура_по_лимитно_заборной_карте);
            this.tableСклад_ткани = new Склад_тканиDataTable();
            base.Tables.Add(this.tableСклад_ткани);
            this.tableТкань_для_расчётной_карты = new Ткань_для_расчётной_картыDataTable();
            base.Tables.Add(this.tableТкань_для_расчётной_карты);
            this.tableЛимитно_заборные_карты = new Лимитно_заборные_картыDataTable();
            base.Tables.Add(this.tableЛимитно_заборные_карты);
            this.tableВодители = new ВодителиDataTable();
            base.Tables.Add(this.tableВодители);
            this.tableТоварные_накладные = new Товарные_накладныеDataTable();
            base.Tables.Add(this.tableТоварные_накладные);
            this.tableРасчётные_карты = new Расчётные_картыDataTable();
            base.Tables.Add(this.tableРасчётные_карты);
            this.tableКонтрагенты = new КонтрагентыDataTable();
            base.Tables.Add(this.tableКонтрагенты);
            this.tableКонтрагенты_товарно_транспортной_накладной = new Контрагенты_товарно_транспортной_накладнойDataTable();
            base.Tables.Add(this.tableКонтрагенты_товарно_транспортной_накладной);
            this.tableКонтрагенты_товарной_накладной = new Контрагенты_товарной_накладнойDataTable();
            base.Tables.Add(this.tableКонтрагенты_товарной_накладной);
            this.tableТоварно_транспортные_накладные = new Товарно_транспортные_накладныеDataTable();
            base.Tables.Add(this.tableТоварно_транспортные_накладные);
            this.tableТоварный_раздел_товарно_транспортной_накладной = new Товарный_раздел_товарно_транспортной_накладнойDataTable();
            base.Tables.Add(this.tableТоварный_раздел_товарно_транспортной_накладной);
            this.tableБригады = new БригадыDataTable();
            base.Tables.Add(this.tableБригады);
            this.tableМаршрутные_листы = new Маршрутные_листыDataTable();
            base.Tables.Add(this.tableМаршрутные_листы);
            this.tableМатериальные_ценности_по_ордеру_на_ткань = new Материальные_ценности_по_ордеру_на_тканьDataTable();
            base.Tables.Add(this.tableМатериальные_ценности_по_ордеру_на_ткань);
            this.tableСклад_готовой_продукции = new Склад_готовой_продукцииDataTable();
            base.Tables.Add(this.tableСклад_готовой_продукции);
            this.tableТоварный_раздел_товарной_накладной = new Товарный_раздел_товарной_накладнойDataTable();
            base.Tables.Add(this.tableТоварный_раздел_товарной_накладной);
            this.tableИзделия_принятые_на_склад = new Изделия_принятые_на_складDataTable();
            base.Tables.Add(this.tableИзделия_принятые_на_склад);
            this.relationFK__Модели_из__Модел__38996AB5 = new global::System.Data.DataRelation("FK__Модели_из__Модел__38996AB5", new global::System.Data.DataColumn[] {
                        this.tableИзделия.ID_ИзделияColumn}, new global::System.Data.DataColumn[] {
                        this.tableМодели_изделия.ID_ИзделияColumn}, false);
            this.Relations.Add(this.relationFK__Модели_из__Модел__38996AB5);
            this.relationFK__Модели_тк__ID_Тк__6C190EBB = new global::System.Data.DataRelation("FK__Модели_тк__ID_Тк__6C190EBB", new global::System.Data.DataColumn[] {
                        this.tableТкани.ID_ТканиColumn}, new global::System.Data.DataColumn[] {
                        this.tableМодели_ткани.ID_ТканиColumn}, false);
            this.Relations.Add(this.relationFK__Модели_тк__ID_Тк__6C190EBB);
            this.relationFK__Приходные__ID_По__71D1E811 = new global::System.Data.DataRelation("FK__Приходные__ID_По__71D1E811", new global::System.Data.DataColumn[] {
                        this.tableПоставщики.ID_ПоставщикаColumn}, new global::System.Data.DataColumn[] {
                        this.tableПриходные_ордера_на_ткань.ID_ПоставщикаColumn}, false);
            this.Relations.Add(this.relationFK__Приходные__ID_По__71D1E811);
            this.relationFK__Приходные__ID_По__571DF1D5 = new global::System.Data.DataRelation("FK__Приходные__ID_По__571DF1D5", new global::System.Data.DataColumn[] {
                        this.tableПоставщики.ID_ПоставщикаColumn}, new global::System.Data.DataColumn[] {
                        this.tableПриходные_ордера_на_фурнитуру.ID_ПоставщикаColumn}, false);
            this.Relations.Add(this.relationFK__Приходные__ID_По__571DF1D5);
            this.relationFK__Модели_фу__ID_Фу__756D6ECB = new global::System.Data.DataRelation("FK__Модели_фу__ID_Фу__756D6ECB", new global::System.Data.DataColumn[] {
                        this.tableФурнитура.ID_ФурнитурыColumn}, new global::System.Data.DataColumn[] {
                        this.tableМодели_фурнитуры.ID_ФурнитурыColumn}, false);
            this.Relations.Add(this.relationFK__Модели_фу__ID_Фу__756D6ECB);
            this.relationFK__Материаль__ID_Мо__1E6F845E = new global::System.Data.DataRelation("FK__Материаль__ID_Мо__1E6F845E", new global::System.Data.DataColumn[] {
                        this.tableМодели_фурнитуры.ID_Модели_фурнитурыColumn}, new global::System.Data.DataColumn[] {
                        this.tableМатериальные_ценности_по_ордеру_на_фурнитуру.ID_Модели_фурнитурыColumn}, false);
            this.Relations.Add(this.relationFK__Материаль__ID_Мо__1E6F845E);
            this.relationFK__Материаль__ID_Пр__1F63A897 = new global::System.Data.DataRelation("FK__Материаль__ID_Пр__1F63A897", new global::System.Data.DataColumn[] {
                        this.tableПриходные_ордера_на_фурнитуру.ID_Приходного_ордераColumn}, new global::System.Data.DataColumn[] {
                        this.tableМатериальные_ценности_по_ордеру_на_фурнитуру.ID_Приходного_ордераColumn}, false);
            this.Relations.Add(this.relationFK__Материаль__ID_Пр__1F63A897);
            this.relationFK__Склад_фур__ID_Мо__7720AD13 = new global::System.Data.DataRelation("FK__Склад_фур__ID_Мо__7720AD13", new global::System.Data.DataColumn[] {
                        this.tableМодели_фурнитуры.ID_Модели_фурнитурыColumn}, new global::System.Data.DataColumn[] {
                        this.tableСклад_фурнитуры.ID_Модели_фурнитурыColumn}, false);
            this.Relations.Add(this.relationFK__Склад_фур__ID_Мо__7720AD13);
            this.relationFK__Фурнитура__ID_Фу__7AF13DF7 = new global::System.Data.DataRelation("FK__Фурнитура__ID_Фу__7AF13DF7", new global::System.Data.DataColumn[] {
                        this.tableСклад_фурнитуры.ID_Фурнитуры_на_складеColumn}, new global::System.Data.DataColumn[] {
                        this.tableФурнитура_по_лимитно_заборной_карте.ID_Фурнитуры_на_складеColumn}, false);
            this.Relations.Add(this.relationFK__Фурнитура__ID_Фу__7AF13DF7);
            this.relationFK__Склад_тка__ID_Мо__084B3915 = new global::System.Data.DataRelation("FK__Склад_тка__ID_Мо__084B3915", new global::System.Data.DataColumn[] {
                        this.tableМодели_ткани.ID_Модели_тканиColumn}, new global::System.Data.DataColumn[] {
                        this.tableСклад_ткани.ID_Модели_тканиColumn}, false);
            this.Relations.Add(this.relationFK__Склад_тка__ID_Мо__084B3915);
            this.relationFK__Ткань_для__ID_Тк__0D0FEE32 = new global::System.Data.DataRelation("FK__Ткань_для__ID_Тк__0D0FEE32", new global::System.Data.DataColumn[] {
                        this.tableСклад_ткани.ID_Ткани_на_складеColumn}, new global::System.Data.DataColumn[] {
                        this.tableТкань_для_расчётной_карты.ID_Ткани_на_складеColumn}, false);
            this.Relations.Add(this.relationFK__Ткань_для__ID_Тк__0D0FEE32);
            this.relationFK__Фурнитура__ID_Ли__13BCEBC1 = new global::System.Data.DataRelation("FK__Фурнитура__ID_Ли__13BCEBC1", new global::System.Data.DataColumn[] {
                        this.tableЛимитно_заборные_карты.ID_Лимитно_заборной_картыColumn}, new global::System.Data.DataColumn[] {
                        this.tableФурнитура_по_лимитно_заборной_карте.ID_Лимитно_заборной_картыColumn}, false);
            this.Relations.Add(this.relationFK__Фурнитура__ID_Ли__13BCEBC1);
            this.relationFK__Лимитно_з__ID_Мо__10E07F16 = new global::System.Data.DataRelation("FK__Лимитно_з__ID_Мо__10E07F16", new global::System.Data.DataColumn[] {
                        this.tableМодели_изделия.ID_Модели_изделияColumn}, new global::System.Data.DataColumn[] {
                        this.tableЛимитно_заборные_карты.ID_Модели_изделияColumn}, false);
            this.Relations.Add(this.relationFK__Лимитно_з__ID_Мо__10E07F16);
            this.relationFK__Ткань_для__ID_Ра__0C1BC9F9 = new global::System.Data.DataRelation("FK__Ткань_для__ID_Ра__0C1BC9F9", new global::System.Data.DataColumn[] {
                        this.tableРасчётные_карты.ID_Расчётной_картыColumn}, new global::System.Data.DataColumn[] {
                        this.tableТкань_для_расчётной_карты.ID_Расчётной_картыColumn}, false);
            this.Relations.Add(this.relationFK__Ткань_для__ID_Ра__0C1BC9F9);
            this.relationFK__Расчётные__ID_Мо__5B78929E = new global::System.Data.DataRelation("FK__Расчётные__ID_Мо__5B78929E", new global::System.Data.DataColumn[] {
                        this.tableМодели_изделия.ID_Модели_изделияColumn}, new global::System.Data.DataColumn[] {
                        this.tableРасчётные_карты.ID_Модели_изделияColumn}, false);
            this.Relations.Add(this.relationFK__Расчётные__ID_Мо__5B78929E);
            this.relationFK__Контраген__ID_Ко__51BA1E3A = new global::System.Data.DataRelation("FK__Контраген__ID_Ко__51BA1E3A", new global::System.Data.DataColumn[] {
                        this.tableКонтрагенты.ID_КонтрагентаColumn}, new global::System.Data.DataColumn[] {
                        this.tableКонтрагенты_товарно_транспортной_накладной.ID_КонтрагентаColumn}, false);
            this.Relations.Add(this.relationFK__Контраген__ID_Ко__51BA1E3A);
            this.relationFK__Контраген__ID_Ко__4DE98D56 = new global::System.Data.DataRelation("FK__Контраген__ID_Ко__4DE98D56", new global::System.Data.DataColumn[] {
                        this.tableКонтрагенты.ID_КонтрагентаColumn}, new global::System.Data.DataColumn[] {
                        this.tableКонтрагенты_товарной_накладной.ID_КонтрагентаColumn}, false);
            this.Relations.Add(this.relationFK__Контраген__ID_Ко__4DE98D56);
            this.relationFK__Контраген__ID_То__4CF5691D = new global::System.Data.DataRelation("FK__Контраген__ID_То__4CF5691D", new global::System.Data.DataColumn[] {
                        this.tableТоварные_накладные.ID_Товарной_накладнойColumn}, new global::System.Data.DataColumn[] {
                        this.tableКонтрагенты_товарной_накладной.ID_Товарной_накладнойColumn}, false);
            this.Relations.Add(this.relationFK__Контраген__ID_То__4CF5691D);
            this.relationFK__Контраген__ID_То__50C5FA01 = new global::System.Data.DataRelation("FK__Контраген__ID_То__50C5FA01", new global::System.Data.DataColumn[] {
                        this.tableТоварно_транспортные_накладные.ID_Товарно_транспортной_накладнойColumn}, new global::System.Data.DataColumn[] {
                        this.tableКонтрагенты_товарно_транспортной_накладной.ID_Товарно_транспортной_накладнойColumn}, false);
            this.Relations.Add(this.relationFK__Контраген__ID_То__50C5FA01);
            this.relationFK__Товарно_т__ID_Ав__3F9B6DFF = new global::System.Data.DataRelation("FK__Товарно_т__ID_Ав__3F9B6DFF", new global::System.Data.DataColumn[] {
                        this.tableАвтомобили.ID_АвтомобиляColumn}, new global::System.Data.DataColumn[] {
                        this.tableТоварно_транспортные_накладные.ID_АвтомобиляColumn}, false);
            this.Relations.Add(this.relationFK__Товарно_т__ID_Ав__3F9B6DFF);
            this.relationFK__Товарный___Масса__473C8FC7 = new global::System.Data.DataRelation("FK__Товарный___Масса__473C8FC7", new global::System.Data.DataColumn[] {
                        this.tableТоварно_транспортные_накладные.ID_Товарно_транспортной_накладнойColumn}, new global::System.Data.DataColumn[] {
                        this.tableТоварный_раздел_товарно_транспортной_накладной.ID_Товарно_транспортной_накладнойColumn}, false);
            this.Relations.Add(this.relationFK__Товарный___Масса__473C8FC7);
            this.relationFK__Товарно_т__ID_Во__408F9238 = new global::System.Data.DataRelation("FK__Товарно_т__ID_Во__408F9238", new global::System.Data.DataColumn[] {
                        this.tableВодители.ID_ВодителяColumn}, new global::System.Data.DataColumn[] {
                        this.tableТоварно_транспортные_накладные.ID_ВодителяColumn}, false);
            this.Relations.Add(this.relationFK__Товарно_т__ID_Во__408F9238);
            this.relationFK__Бригады__ID_Цеха__5FB337D6 = new global::System.Data.DataRelation("FK__Бригады__ID_Цеха__5FB337D6", new global::System.Data.DataColumn[] {
                        this.tableЦеха.ID_ЦехаColumn}, new global::System.Data.DataColumn[] {
                        this.tableБригады.ID_ЦехаColumn}, false);
            this.Relations.Add(this.relationFK__Бригады__ID_Цеха__5FB337D6);
            this.relationРасчётные_карты_Бригады = new global::System.Data.DataRelation("Расчётные_карты_Бригады", new global::System.Data.DataColumn[] {
                        this.tableРасчётные_карты.ID_БригадыColumn}, new global::System.Data.DataColumn[] {
                        this.tableБригады.ID_БригадыColumn}, false);
            this.Relations.Add(this.relationРасчётные_карты_Бригады);
            this.relationЛимитно_заборные_карты_Бригады = new global::System.Data.DataRelation("Лимитно_заборные_карты_Бригады", new global::System.Data.DataColumn[] {
                        this.tableЛимитно_заборные_карты.ID_БригадыColumn}, new global::System.Data.DataColumn[] {
                        this.tableБригады.ID_БригадыColumn}, false);
            this.Relations.Add(this.relationЛимитно_заборные_карты_Бригады);
            this.relationМодели_изделия_Маршрутные_листы = new global::System.Data.DataRelation("Модели_изделия_Маршрутные_листы", new global::System.Data.DataColumn[] {
                        this.tableМодели_изделия.ID_Модели_изделияColumn}, new global::System.Data.DataColumn[] {
                        this.tableМаршрутные_листы.ID_Модели_изделияColumn}, false);
            this.Relations.Add(this.relationМодели_изделия_Маршрутные_листы);
            this.relationFK__Материаль__ID_Пр__0CDAE408 = new global::System.Data.DataRelation("FK__Материаль__ID_Пр__0CDAE408", new global::System.Data.DataColumn[] {
                        this.tableПриходные_ордера_на_ткань.ID_Приходного_ордераColumn}, new global::System.Data.DataColumn[] {
                        this.tableМатериальные_ценности_по_ордеру_на_ткань.ID_Приходного_ордераColumn}, false);
            this.Relations.Add(this.relationFK__Материаль__ID_Пр__0CDAE408);
            this.relationМатериальные_ценности_по_ордеру_на_ткань_Модели_ткани = new global::System.Data.DataRelation("Материальные_ценности_по_ордеру_на_ткань_Модели_ткани", new global::System.Data.DataColumn[] {
                        this.tableМатериальные_ценности_по_ордеру_на_ткань.ID_Модели_тканиColumn}, new global::System.Data.DataColumn[] {
                        this.tableМодели_ткани.ID_Модели_тканиColumn}, false);
            this.Relations.Add(this.relationМатериальные_ценности_по_ордеру_на_ткань_Модели_ткани);
            this.relationFK__Товарный___ID_Го__1C1D2798 = new global::System.Data.DataRelation("FK__Товарный___ID_Го__1C1D2798", new global::System.Data.DataColumn[] {
                        this.tableСклад_готовой_продукции.ID_Готовой_продукции_на_складеColumn}, new global::System.Data.DataColumn[] {
                        this.tableТоварный_раздел_товарной_накладной.ID_Готовой_продукции_на_складеColumn}, false);
            this.Relations.Add(this.relationFK__Товарный___ID_Го__1C1D2798);
            this.relationFK__Товарный___ID_То__1B29035F = new global::System.Data.DataRelation("FK__Товарный___ID_То__1B29035F", new global::System.Data.DataColumn[] {
                        this.tableТоварные_накладные.ID_Товарной_накладнойColumn}, new global::System.Data.DataColumn[] {
                        this.tableТоварный_раздел_товарной_накладной.ID_Товарной_накладнойColumn}, false);
            this.Relations.Add(this.relationFK__Товарный___ID_То__1B29035F);
            this.relationСклад_готовой_продукции_Товарный_раздел_товарно_транспортной_накладной = new global::System.Data.DataRelation("Склад_готовой_продукции_Товарный_раздел_товарно_транспортной_накладной", new global::System.Data.DataColumn[] {
                        this.tableСклад_готовой_продукции.ID_Готовой_продукции_на_складеColumn}, new global::System.Data.DataColumn[] {
                        this.tableТоварный_раздел_товарно_транспортной_накладной.ID_Готовой_продукции_на_складеColumn}, false);
            this.Relations.Add(this.relationСклад_готовой_продукции_Товарный_раздел_товарно_транспортной_накладной);
            this.relationМодели_изделия_Склад_готовой_продукции = new global::System.Data.DataRelation("Модели_изделия_Склад_готовой_продукции", new global::System.Data.DataColumn[] {
                        this.tableМодели_изделия.ID_Модели_изделияColumn}, new global::System.Data.DataColumn[] {
                        this.tableСклад_готовой_продукции.ID_Модели_изделияColumn}, false);
            this.Relations.Add(this.relationМодели_изделия_Склад_готовой_продукции);
            this.relationМаршрутные_листы_Изделия_принятые_на_склад = new global::System.Data.DataRelation("Маршрутные_листы_Изделия_принятые_на_склад", new global::System.Data.DataColumn[] {
                        this.tableМаршрутные_листы.ID_Маршрутного_листаColumn}, new global::System.Data.DataColumn[] {
                        this.tableИзделия_принятые_на_склад.ID_Маршрутного_листаColumn}, false);
            this.Relations.Add(this.relationМаршрутные_листы_Изделия_принятые_на_склад);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeИзделия() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeМодели_изделия() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeМодели_ткани() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeПоставщики() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeПриходные_ордера_на_ткань() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeПриходные_ордера_на_фурнитуру() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeТкани() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeФурнитура() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeЦеха() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeМодели_фурнитуры() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeАвтомобили() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeМатериальные_ценности_по_ордеру_на_фурнитуру() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeСклад_фурнитуры() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeФурнитура_по_лимитно_заборной_карте() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeСклад_ткани() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeТкань_для_расчётной_карты() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeЛимитно_заборные_карты() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeВодители() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeТоварные_накладные() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeРасчётные_карты() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeКонтрагенты() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeКонтрагенты_товарно_транспортной_накладной() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeКонтрагенты_товарной_накладной() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeТоварно_транспортные_накладные() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeТоварный_раздел_товарно_транспортной_накладной() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeБригады() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeМаршрутные_листы() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeМатериальные_ценности_по_ордеру_на_ткань() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeСклад_готовой_продукции() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeТоварный_раздел_товарной_накладной() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeИзделия_принятые_на_склад() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ИзделияRowChangeEventHandler(object sender, ИзделияRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Модели_изделияRowChangeEventHandler(object sender, Модели_изделияRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Модели_тканиRowChangeEventHandler(object sender, Модели_тканиRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ПоставщикиRowChangeEventHandler(object sender, ПоставщикиRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Приходные_ордера_на_тканьRowChangeEventHandler(object sender, Приходные_ордера_на_тканьRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Приходные_ордера_на_фурнитуруRowChangeEventHandler(object sender, Приходные_ордера_на_фурнитуруRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ТканиRowChangeEventHandler(object sender, ТканиRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ФурнитураRowChangeEventHandler(object sender, ФурнитураRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ЦехаRowChangeEventHandler(object sender, ЦехаRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Модели_фурнитурыRowChangeEventHandler(object sender, Модели_фурнитурыRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void АвтомобилиRowChangeEventHandler(object sender, АвтомобилиRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Материальные_ценности_по_ордеру_на_фурнитуруRowChangeEventHandler(object sender, Материальные_ценности_по_ордеру_на_фурнитуруRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Склад_фурнитурыRowChangeEventHandler(object sender, Склад_фурнитурыRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Фурнитура_по_лимитно_заборной_картеRowChangeEventHandler(object sender, Фурнитура_по_лимитно_заборной_картеRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Склад_тканиRowChangeEventHandler(object sender, Склад_тканиRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Ткань_для_расчётной_картыRowChangeEventHandler(object sender, Ткань_для_расчётной_картыRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Лимитно_заборные_картыRowChangeEventHandler(object sender, Лимитно_заборные_картыRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ВодителиRowChangeEventHandler(object sender, ВодителиRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Товарные_накладныеRowChangeEventHandler(object sender, Товарные_накладныеRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Расчётные_картыRowChangeEventHandler(object sender, Расчётные_картыRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void КонтрагентыRowChangeEventHandler(object sender, КонтрагентыRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Контрагенты_товарно_транспортной_накладнойRowChangeEventHandler(object sender, Контрагенты_товарно_транспортной_накладнойRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Контрагенты_товарной_накладнойRowChangeEventHandler(object sender, Контрагенты_товарной_накладнойRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Товарно_транспортные_накладныеRowChangeEventHandler(object sender, Товарно_транспортные_накладныеRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Товарный_раздел_товарно_транспортной_накладнойRowChangeEventHandler(object sender, Товарный_раздел_товарно_транспортной_накладнойRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void БригадыRowChangeEventHandler(object sender, БригадыRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Маршрутные_листыRowChangeEventHandler(object sender, Маршрутные_листыRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Материальные_ценности_по_ордеру_на_тканьRowChangeEventHandler(object sender, Материальные_ценности_по_ордеру_на_тканьRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Склад_готовой_продукцииRowChangeEventHandler(object sender, Склад_готовой_продукцииRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Товарный_раздел_товарной_накладнойRowChangeEventHandler(object sender, Товарный_раздел_товарной_накладнойRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Изделия_принятые_на_складRowChangeEventHandler(object sender, Изделия_принятые_на_складRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ИзделияDataTable : global::System.Data.TypedTableBase<ИзделияRow> {
            
            private global::System.Data.DataColumn columnID_Изделия;
            
            private global::System.Data.DataColumn columnНаименование;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ИзделияDataTable() {
                this.TableName = "Изделия";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ИзделияDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ИзделияDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_ИзделияColumn {
                get {
                    return this.columnID_Изделия;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НаименованиеColumn {
                get {
                    return this.columnНаименование;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ИзделияRow this[int index] {
                get {
                    return ((ИзделияRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ИзделияRowChangeEventHandler ИзделияRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ИзделияRowChangeEventHandler ИзделияRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ИзделияRowChangeEventHandler ИзделияRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ИзделияRowChangeEventHandler ИзделияRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddИзделияRow(ИзделияRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ИзделияRow AddИзделияRow(string Наименование) {
                ИзделияRow rowИзделияRow = ((ИзделияRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Наименование};
                rowИзделияRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowИзделияRow);
                return rowИзделияRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ИзделияRow FindByID_Изделия(int ID_Изделия) {
                return ((ИзделияRow)(this.Rows.Find(new object[] {
                            ID_Изделия})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ИзделияDataTable cln = ((ИзделияDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ИзделияDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_Изделия = base.Columns["ID_Изделия"];
                this.columnНаименование = base.Columns["Наименование"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_Изделия = new global::System.Data.DataColumn("ID_Изделия", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Изделия);
                this.columnНаименование = new global::System.Data.DataColumn("Наименование", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Изделия}, true));
                this.columnID_Изделия.AutoIncrement = true;
                this.columnID_Изделия.AutoIncrementSeed = -1;
                this.columnID_Изделия.AutoIncrementStep = -1;
                this.columnID_Изделия.AllowDBNull = false;
                this.columnID_Изделия.ReadOnly = true;
                this.columnID_Изделия.Unique = true;
                this.columnНаименование.AllowDBNull = false;
                this.columnНаименование.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ИзделияRow NewИзделияRow() {
                return ((ИзделияRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ИзделияRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ИзделияRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ИзделияRowChanged != null)) {
                    this.ИзделияRowChanged(this, new ИзделияRowChangeEvent(((ИзделияRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ИзделияRowChanging != null)) {
                    this.ИзделияRowChanging(this, new ИзделияRowChangeEvent(((ИзделияRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ИзделияRowDeleted != null)) {
                    this.ИзделияRowDeleted(this, new ИзделияRowChangeEvent(((ИзделияRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ИзделияRowDeleting != null)) {
                    this.ИзделияRowDeleting(this, new ИзделияRowChangeEvent(((ИзделияRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveИзделияRow(ИзделияRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ИзделияDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Модели_изделияDataTable : global::System.Data.TypedTableBase<Модели_изделияRow> {
            
            private global::System.Data.DataColumn columnID_Модели_изделия;
            
            private global::System.Data.DataColumn columnID_Изделия;
            
            private global::System.Data.DataColumn columnМодель_изделия;
            
            private global::System.Data.DataColumn columnНаименование;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_изделияDataTable() {
                this.TableName = "Модели_изделия";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Модели_изделияDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Модели_изделияDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Модели_изделияColumn {
                get {
                    return this.columnID_Модели_изделия;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_ИзделияColumn {
                get {
                    return this.columnID_Изделия;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Модель_изделияColumn {
                get {
                    return this.columnМодель_изделия;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НаименованиеColumn {
                get {
                    return this.columnНаименование;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_изделияRow this[int index] {
                get {
                    return ((Модели_изделияRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Модели_изделияRowChangeEventHandler Модели_изделияRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Модели_изделияRowChangeEventHandler Модели_изделияRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Модели_изделияRowChangeEventHandler Модели_изделияRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Модели_изделияRowChangeEventHandler Модели_изделияRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddМодели_изделияRow(Модели_изделияRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_изделияRow AddМодели_изделияRow(ИзделияRow parentИзделияRowByFK__Модели_из__Модел__38996AB5, string Модель_изделия, string Наименование) {
                Модели_изделияRow rowМодели_изделияRow = ((Модели_изделияRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Модель_изделия,
                        Наименование};
                if ((parentИзделияRowByFK__Модели_из__Модел__38996AB5 != null)) {
                    columnValuesArray[1] = parentИзделияRowByFK__Модели_из__Модел__38996AB5[0];
                }
                rowМодели_изделияRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowМодели_изделияRow);
                return rowМодели_изделияRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_изделияRow FindByID_Модели_изделия(int ID_Модели_изделия) {
                return ((Модели_изделияRow)(this.Rows.Find(new object[] {
                            ID_Модели_изделия})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Модели_изделияDataTable cln = ((Модели_изделияDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Модели_изделияDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_Модели_изделия = base.Columns["ID_Модели_изделия"];
                this.columnID_Изделия = base.Columns["ID_Изделия"];
                this.columnМодель_изделия = base.Columns["Модель_изделия"];
                this.columnНаименование = base.Columns["Наименование"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_Модели_изделия = new global::System.Data.DataColumn("ID_Модели_изделия", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Модели_изделия);
                this.columnID_Изделия = new global::System.Data.DataColumn("ID_Изделия", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Изделия);
                this.columnМодель_изделия = new global::System.Data.DataColumn("Модель_изделия", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМодель_изделия);
                this.columnНаименование = new global::System.Data.DataColumn("Наименование", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Модели_изделия}, true));
                this.columnID_Модели_изделия.AutoIncrement = true;
                this.columnID_Модели_изделия.AutoIncrementSeed = -1;
                this.columnID_Модели_изделия.AutoIncrementStep = -1;
                this.columnID_Модели_изделия.AllowDBNull = false;
                this.columnID_Модели_изделия.ReadOnly = true;
                this.columnID_Модели_изделия.Unique = true;
                this.columnID_Изделия.AllowDBNull = false;
                this.columnМодель_изделия.AllowDBNull = false;
                this.columnМодель_изделия.MaxLength = 15;
                this.columnНаименование.AllowDBNull = false;
                this.columnНаименование.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_изделияRow NewМодели_изделияRow() {
                return ((Модели_изделияRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Модели_изделияRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Модели_изделияRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Модели_изделияRowChanged != null)) {
                    this.Модели_изделияRowChanged(this, new Модели_изделияRowChangeEvent(((Модели_изделияRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Модели_изделияRowChanging != null)) {
                    this.Модели_изделияRowChanging(this, new Модели_изделияRowChangeEvent(((Модели_изделияRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Модели_изделияRowDeleted != null)) {
                    this.Модели_изделияRowDeleted(this, new Модели_изделияRowChangeEvent(((Модели_изделияRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Модели_изделияRowDeleting != null)) {
                    this.Модели_изделияRowDeleting(this, new Модели_изделияRowChangeEvent(((Модели_изделияRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveМодели_изделияRow(Модели_изделияRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Модели_изделияDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Модели_тканиDataTable : global::System.Data.TypedTableBase<Модели_тканиRow> {
            
            private global::System.Data.DataColumn columnID_Модели_ткани;
            
            private global::System.Data.DataColumn columnID_Ткани;
            
            private global::System.Data.DataColumn columnМодель_ткани;
            
            private global::System.Data.DataColumn columnНаименование;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_тканиDataTable() {
                this.TableName = "Модели_ткани";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Модели_тканиDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Модели_тканиDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Модели_тканиColumn {
                get {
                    return this.columnID_Модели_ткани;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_ТканиColumn {
                get {
                    return this.columnID_Ткани;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Модель_тканиColumn {
                get {
                    return this.columnМодель_ткани;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НаименованиеColumn {
                get {
                    return this.columnНаименование;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_тканиRow this[int index] {
                get {
                    return ((Модели_тканиRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Модели_тканиRowChangeEventHandler Модели_тканиRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Модели_тканиRowChangeEventHandler Модели_тканиRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Модели_тканиRowChangeEventHandler Модели_тканиRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Модели_тканиRowChangeEventHandler Модели_тканиRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddМодели_тканиRow(Модели_тканиRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_тканиRow AddМодели_тканиRow(ТканиRow parentТканиRowByFK__Модели_тк__ID_Тк__6C190EBB, string Модель_ткани, string Наименование) {
                Модели_тканиRow rowМодели_тканиRow = ((Модели_тканиRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Модель_ткани,
                        Наименование};
                if ((parentТканиRowByFK__Модели_тк__ID_Тк__6C190EBB != null)) {
                    columnValuesArray[1] = parentТканиRowByFK__Модели_тк__ID_Тк__6C190EBB[0];
                }
                rowМодели_тканиRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowМодели_тканиRow);
                return rowМодели_тканиRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_тканиRow FindByID_Модели_ткани(int ID_Модели_ткани) {
                return ((Модели_тканиRow)(this.Rows.Find(new object[] {
                            ID_Модели_ткани})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Модели_тканиDataTable cln = ((Модели_тканиDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Модели_тканиDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_Модели_ткани = base.Columns["ID_Модели_ткани"];
                this.columnID_Ткани = base.Columns["ID_Ткани"];
                this.columnМодель_ткани = base.Columns["Модель_ткани"];
                this.columnНаименование = base.Columns["Наименование"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_Модели_ткани = new global::System.Data.DataColumn("ID_Модели_ткани", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Модели_ткани);
                this.columnID_Ткани = new global::System.Data.DataColumn("ID_Ткани", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Ткани);
                this.columnМодель_ткани = new global::System.Data.DataColumn("Модель_ткани", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМодель_ткани);
                this.columnНаименование = new global::System.Data.DataColumn("Наименование", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Модели_ткани}, true));
                this.columnID_Модели_ткани.AutoIncrement = true;
                this.columnID_Модели_ткани.AutoIncrementSeed = -1;
                this.columnID_Модели_ткани.AutoIncrementStep = -1;
                this.columnID_Модели_ткани.AllowDBNull = false;
                this.columnID_Модели_ткани.ReadOnly = true;
                this.columnID_Модели_ткани.Unique = true;
                this.columnID_Ткани.AllowDBNull = false;
                this.columnМодель_ткани.AllowDBNull = false;
                this.columnМодель_ткани.MaxLength = 50;
                this.columnНаименование.AllowDBNull = false;
                this.columnНаименование.MaxLength = 90;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_тканиRow NewМодели_тканиRow() {
                return ((Модели_тканиRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Модели_тканиRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Модели_тканиRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Модели_тканиRowChanged != null)) {
                    this.Модели_тканиRowChanged(this, new Модели_тканиRowChangeEvent(((Модели_тканиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Модели_тканиRowChanging != null)) {
                    this.Модели_тканиRowChanging(this, new Модели_тканиRowChangeEvent(((Модели_тканиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Модели_тканиRowDeleted != null)) {
                    this.Модели_тканиRowDeleted(this, new Модели_тканиRowChangeEvent(((Модели_тканиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Модели_тканиRowDeleting != null)) {
                    this.Модели_тканиRowDeleting(this, new Модели_тканиRowChangeEvent(((Модели_тканиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveМодели_тканиRow(Модели_тканиRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Модели_тканиDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ПоставщикиDataTable : global::System.Data.TypedTableBase<ПоставщикиRow> {
            
            private global::System.Data.DataColumn columnID_Поставщика;
            
            private global::System.Data.DataColumn columnПоставщик;
            
            private global::System.Data.DataColumn columnНаименование;
            
            private global::System.Data.DataColumn columnАдрес;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПоставщикиDataTable() {
                this.TableName = "Поставщики";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ПоставщикиDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ПоставщикиDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_ПоставщикаColumn {
                get {
                    return this.columnID_Поставщика;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ПоставщикColumn {
                get {
                    return this.columnПоставщик;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НаименованиеColumn {
                get {
                    return this.columnНаименование;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn АдресColumn {
                get {
                    return this.columnАдрес;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПоставщикиRow this[int index] {
                get {
                    return ((ПоставщикиRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ПоставщикиRowChangeEventHandler ПоставщикиRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ПоставщикиRowChangeEventHandler ПоставщикиRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ПоставщикиRowChangeEventHandler ПоставщикиRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ПоставщикиRowChangeEventHandler ПоставщикиRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddПоставщикиRow(ПоставщикиRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПоставщикиRow AddПоставщикиRow(string Поставщик, string Наименование, string Адрес) {
                ПоставщикиRow rowПоставщикиRow = ((ПоставщикиRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Поставщик,
                        Наименование,
                        Адрес};
                rowПоставщикиRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowПоставщикиRow);
                return rowПоставщикиRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПоставщикиRow FindByID_Поставщика(int ID_Поставщика) {
                return ((ПоставщикиRow)(this.Rows.Find(new object[] {
                            ID_Поставщика})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ПоставщикиDataTable cln = ((ПоставщикиDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ПоставщикиDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_Поставщика = base.Columns["ID_Поставщика"];
                this.columnПоставщик = base.Columns["Поставщик"];
                this.columnНаименование = base.Columns["Наименование"];
                this.columnАдрес = base.Columns["Адрес"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_Поставщика = new global::System.Data.DataColumn("ID_Поставщика", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Поставщика);
                this.columnПоставщик = new global::System.Data.DataColumn("Поставщик", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПоставщик);
                this.columnНаименование = new global::System.Data.DataColumn("Наименование", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование);
                this.columnАдрес = new global::System.Data.DataColumn("Адрес", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnАдрес);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Поставщика}, true));
                this.columnID_Поставщика.AutoIncrement = true;
                this.columnID_Поставщика.AutoIncrementSeed = -1;
                this.columnID_Поставщика.AutoIncrementStep = -1;
                this.columnID_Поставщика.AllowDBNull = false;
                this.columnID_Поставщика.ReadOnly = true;
                this.columnID_Поставщика.Unique = true;
                this.columnПоставщик.ReadOnly = true;
                this.columnПоставщик.MaxLength = 230;
                this.columnНаименование.AllowDBNull = false;
                this.columnНаименование.MaxLength = 80;
                this.columnАдрес.AllowDBNull = false;
                this.columnАдрес.MaxLength = 150;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПоставщикиRow NewПоставщикиRow() {
                return ((ПоставщикиRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ПоставщикиRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ПоставщикиRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ПоставщикиRowChanged != null)) {
                    this.ПоставщикиRowChanged(this, new ПоставщикиRowChangeEvent(((ПоставщикиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ПоставщикиRowChanging != null)) {
                    this.ПоставщикиRowChanging(this, new ПоставщикиRowChangeEvent(((ПоставщикиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ПоставщикиRowDeleted != null)) {
                    this.ПоставщикиRowDeleted(this, new ПоставщикиRowChangeEvent(((ПоставщикиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ПоставщикиRowDeleting != null)) {
                    this.ПоставщикиRowDeleting(this, new ПоставщикиRowChangeEvent(((ПоставщикиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveПоставщикиRow(ПоставщикиRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ПоставщикиDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Приходные_ордера_на_тканьDataTable : global::System.Data.TypedTableBase<Приходные_ордера_на_тканьRow> {
            
            private global::System.Data.DataColumn columnID_Приходного_ордера;
            
            private global::System.Data.DataColumn columnID_Поставщика;
            
            private global::System.Data.DataColumn columnДата_составления;
            
            private global::System.Data.DataColumn columnСклад;
            
            private global::System.Data.DataColumn columnКорреспондирующий_счет;
            
            private global::System.Data.DataColumn columnСопроводительный_документ;
            
            private global::System.Data.DataColumn columnСумма;
            
            private global::System.Data.DataColumn columnПоставщик;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Приходные_ордера_на_тканьDataTable() {
                this.TableName = "Приходные_ордера_на_ткань";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Приходные_ордера_на_тканьDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Приходные_ордера_на_тканьDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Приходного_ордераColumn {
                get {
                    return this.columnID_Приходного_ордера;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_ПоставщикаColumn {
                get {
                    return this.columnID_Поставщика;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Дата_составленияColumn {
                get {
                    return this.columnДата_составления;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn СкладColumn {
                get {
                    return this.columnСклад;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Корреспондирующий_счетColumn {
                get {
                    return this.columnКорреспондирующий_счет;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Сопроводительный_документColumn {
                get {
                    return this.columnСопроводительный_документ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn СуммаColumn {
                get {
                    return this.columnСумма;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ПоставщикColumn {
                get {
                    return this.columnПоставщик;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Приходные_ордера_на_тканьRow this[int index] {
                get {
                    return ((Приходные_ордера_на_тканьRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Приходные_ордера_на_тканьRowChangeEventHandler Приходные_ордера_на_тканьRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Приходные_ордера_на_тканьRowChangeEventHandler Приходные_ордера_на_тканьRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Приходные_ордера_на_тканьRowChangeEventHandler Приходные_ордера_на_тканьRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Приходные_ордера_на_тканьRowChangeEventHandler Приходные_ордера_на_тканьRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddПриходные_ордера_на_тканьRow(Приходные_ордера_на_тканьRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Приходные_ордера_на_тканьRow AddПриходные_ордера_на_тканьRow(ПоставщикиRow parentПоставщикиRowByFK__Приходные__ID_По__71D1E811, System.DateTime Дата_составления, string Склад, string Корреспондирующий_счет, string Сопроводительный_документ, decimal Сумма, string Поставщик) {
                Приходные_ордера_на_тканьRow rowПриходные_ордера_на_тканьRow = ((Приходные_ордера_на_тканьRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Дата_составления,
                        Склад,
                        Корреспондирующий_счет,
                        Сопроводительный_документ,
                        Сумма,
                        Поставщик};
                if ((parentПоставщикиRowByFK__Приходные__ID_По__71D1E811 != null)) {
                    columnValuesArray[1] = parentПоставщикиRowByFK__Приходные__ID_По__71D1E811[0];
                }
                rowПриходные_ордера_на_тканьRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowПриходные_ордера_на_тканьRow);
                return rowПриходные_ордера_на_тканьRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Приходные_ордера_на_тканьRow FindByID_Приходного_ордера(int ID_Приходного_ордера) {
                return ((Приходные_ордера_на_тканьRow)(this.Rows.Find(new object[] {
                            ID_Приходного_ордера})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Приходные_ордера_на_тканьDataTable cln = ((Приходные_ордера_на_тканьDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Приходные_ордера_на_тканьDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_Приходного_ордера = base.Columns["ID_Приходного_ордера"];
                this.columnID_Поставщика = base.Columns["ID_Поставщика"];
                this.columnДата_составления = base.Columns["Дата_составления"];
                this.columnСклад = base.Columns["Склад"];
                this.columnКорреспондирующий_счет = base.Columns["Корреспондирующий_счет"];
                this.columnСопроводительный_документ = base.Columns["Сопроводительный_документ"];
                this.columnСумма = base.Columns["Сумма"];
                this.columnПоставщик = base.Columns["Поставщик"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_Приходного_ордера = new global::System.Data.DataColumn("ID_Приходного_ордера", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Приходного_ордера);
                this.columnID_Поставщика = new global::System.Data.DataColumn("ID_Поставщика", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Поставщика);
                this.columnДата_составления = new global::System.Data.DataColumn("Дата_составления", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_составления);
                this.columnСклад = new global::System.Data.DataColumn("Склад", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСклад);
                this.columnКорреспондирующий_счет = new global::System.Data.DataColumn("Корреспондирующий_счет", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКорреспондирующий_счет);
                this.columnСопроводительный_документ = new global::System.Data.DataColumn("Сопроводительный_документ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСопроводительный_документ);
                this.columnСумма = new global::System.Data.DataColumn("Сумма", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСумма);
                this.columnПоставщик = new global::System.Data.DataColumn("Поставщик", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПоставщик);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Приходного_ордера}, true));
                this.columnID_Приходного_ордера.AutoIncrement = true;
                this.columnID_Приходного_ордера.AutoIncrementSeed = -1;
                this.columnID_Приходного_ордера.AutoIncrementStep = -1;
                this.columnID_Приходного_ордера.AllowDBNull = false;
                this.columnID_Приходного_ордера.ReadOnly = true;
                this.columnID_Приходного_ордера.Unique = true;
                this.columnID_Поставщика.AllowDBNull = false;
                this.columnДата_составления.AllowDBNull = false;
                this.columnСклад.AllowDBNull = false;
                this.columnСклад.MaxLength = 30;
                this.columnКорреспондирующий_счет.AllowDBNull = false;
                this.columnКорреспондирующий_счет.MaxLength = 20;
                this.columnСопроводительный_документ.AllowDBNull = false;
                this.columnСопроводительный_документ.MaxLength = 50;
                this.columnСумма.AllowDBNull = false;
                this.columnПоставщик.ReadOnly = true;
                this.columnПоставщик.MaxLength = 231;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Приходные_ордера_на_тканьRow NewПриходные_ордера_на_тканьRow() {
                return ((Приходные_ордера_на_тканьRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Приходные_ордера_на_тканьRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Приходные_ордера_на_тканьRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Приходные_ордера_на_тканьRowChanged != null)) {
                    this.Приходные_ордера_на_тканьRowChanged(this, new Приходные_ордера_на_тканьRowChangeEvent(((Приходные_ордера_на_тканьRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Приходные_ордера_на_тканьRowChanging != null)) {
                    this.Приходные_ордера_на_тканьRowChanging(this, new Приходные_ордера_на_тканьRowChangeEvent(((Приходные_ордера_на_тканьRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Приходные_ордера_на_тканьRowDeleted != null)) {
                    this.Приходные_ордера_на_тканьRowDeleted(this, new Приходные_ордера_на_тканьRowChangeEvent(((Приходные_ордера_на_тканьRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Приходные_ордера_на_тканьRowDeleting != null)) {
                    this.Приходные_ордера_на_тканьRowDeleting(this, new Приходные_ордера_на_тканьRowChangeEvent(((Приходные_ордера_на_тканьRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveПриходные_ордера_на_тканьRow(Приходные_ордера_на_тканьRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Приходные_ордера_на_тканьDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Приходные_ордера_на_фурнитуруDataTable : global::System.Data.TypedTableBase<Приходные_ордера_на_фурнитуруRow> {
            
            private global::System.Data.DataColumn columnID_Приходного_ордера;
            
            private global::System.Data.DataColumn columnID_Поставщика;
            
            private global::System.Data.DataColumn columnДата_составления;
            
            private global::System.Data.DataColumn columnСклад;
            
            private global::System.Data.DataColumn columnКорреспондирующий_счет;
            
            private global::System.Data.DataColumn columnСопроводительный_документ;
            
            private global::System.Data.DataColumn columnСумма;
            
            private global::System.Data.DataColumn columnПоставщик;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Приходные_ордера_на_фурнитуруDataTable() {
                this.TableName = "Приходные_ордера_на_фурнитуру";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Приходные_ордера_на_фурнитуруDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Приходные_ордера_на_фурнитуруDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Приходного_ордераColumn {
                get {
                    return this.columnID_Приходного_ордера;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_ПоставщикаColumn {
                get {
                    return this.columnID_Поставщика;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Дата_составленияColumn {
                get {
                    return this.columnДата_составления;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn СкладColumn {
                get {
                    return this.columnСклад;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Корреспондирующий_счетColumn {
                get {
                    return this.columnКорреспондирующий_счет;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Сопроводительный_документColumn {
                get {
                    return this.columnСопроводительный_документ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn СуммаColumn {
                get {
                    return this.columnСумма;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ПоставщикColumn {
                get {
                    return this.columnПоставщик;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Приходные_ордера_на_фурнитуруRow this[int index] {
                get {
                    return ((Приходные_ордера_на_фурнитуруRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Приходные_ордера_на_фурнитуруRowChangeEventHandler Приходные_ордера_на_фурнитуруRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Приходные_ордера_на_фурнитуруRowChangeEventHandler Приходные_ордера_на_фурнитуруRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Приходные_ордера_на_фурнитуруRowChangeEventHandler Приходные_ордера_на_фурнитуруRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Приходные_ордера_на_фурнитуруRowChangeEventHandler Приходные_ордера_на_фурнитуруRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddПриходные_ордера_на_фурнитуруRow(Приходные_ордера_на_фурнитуруRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Приходные_ордера_на_фурнитуруRow AddПриходные_ордера_на_фурнитуруRow(ПоставщикиRow parentПоставщикиRowByFK__Приходные__ID_По__571DF1D5, System.DateTime Дата_составления, string Склад, string Корреспондирующий_счет, string Сопроводительный_документ, decimal Сумма, string Поставщик) {
                Приходные_ордера_на_фурнитуруRow rowПриходные_ордера_на_фурнитуруRow = ((Приходные_ордера_на_фурнитуруRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Дата_составления,
                        Склад,
                        Корреспондирующий_счет,
                        Сопроводительный_документ,
                        Сумма,
                        Поставщик};
                if ((parentПоставщикиRowByFK__Приходные__ID_По__571DF1D5 != null)) {
                    columnValuesArray[1] = parentПоставщикиRowByFK__Приходные__ID_По__571DF1D5[0];
                }
                rowПриходные_ордера_на_фурнитуруRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowПриходные_ордера_на_фурнитуруRow);
                return rowПриходные_ордера_на_фурнитуруRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Приходные_ордера_на_фурнитуруRow FindByID_Приходного_ордера(int ID_Приходного_ордера) {
                return ((Приходные_ордера_на_фурнитуруRow)(this.Rows.Find(new object[] {
                            ID_Приходного_ордера})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Приходные_ордера_на_фурнитуруDataTable cln = ((Приходные_ордера_на_фурнитуруDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Приходные_ордера_на_фурнитуруDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_Приходного_ордера = base.Columns["ID_Приходного_ордера"];
                this.columnID_Поставщика = base.Columns["ID_Поставщика"];
                this.columnДата_составления = base.Columns["Дата_составления"];
                this.columnСклад = base.Columns["Склад"];
                this.columnКорреспондирующий_счет = base.Columns["Корреспондирующий_счет"];
                this.columnСопроводительный_документ = base.Columns["Сопроводительный_документ"];
                this.columnСумма = base.Columns["Сумма"];
                this.columnПоставщик = base.Columns["Поставщик"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_Приходного_ордера = new global::System.Data.DataColumn("ID_Приходного_ордера", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Приходного_ордера);
                this.columnID_Поставщика = new global::System.Data.DataColumn("ID_Поставщика", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Поставщика);
                this.columnДата_составления = new global::System.Data.DataColumn("Дата_составления", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_составления);
                this.columnСклад = new global::System.Data.DataColumn("Склад", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСклад);
                this.columnКорреспондирующий_счет = new global::System.Data.DataColumn("Корреспондирующий_счет", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКорреспондирующий_счет);
                this.columnСопроводительный_документ = new global::System.Data.DataColumn("Сопроводительный_документ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСопроводительный_документ);
                this.columnСумма = new global::System.Data.DataColumn("Сумма", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСумма);
                this.columnПоставщик = new global::System.Data.DataColumn("Поставщик", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПоставщик);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Приходного_ордера}, true));
                this.columnID_Приходного_ордера.AutoIncrement = true;
                this.columnID_Приходного_ордера.AutoIncrementSeed = -1;
                this.columnID_Приходного_ордера.AutoIncrementStep = -1;
                this.columnID_Приходного_ордера.AllowDBNull = false;
                this.columnID_Приходного_ордера.ReadOnly = true;
                this.columnID_Приходного_ордера.Unique = true;
                this.columnID_Поставщика.AllowDBNull = false;
                this.columnДата_составления.AllowDBNull = false;
                this.columnСклад.AllowDBNull = false;
                this.columnСклад.MaxLength = 30;
                this.columnКорреспондирующий_счет.AllowDBNull = false;
                this.columnКорреспондирующий_счет.MaxLength = 20;
                this.columnСопроводительный_документ.AllowDBNull = false;
                this.columnСопроводительный_документ.MaxLength = 50;
                this.columnСумма.AllowDBNull = false;
                this.columnПоставщик.ReadOnly = true;
                this.columnПоставщик.MaxLength = 230;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Приходные_ордера_на_фурнитуруRow NewПриходные_ордера_на_фурнитуруRow() {
                return ((Приходные_ордера_на_фурнитуруRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Приходные_ордера_на_фурнитуруRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Приходные_ордера_на_фурнитуруRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Приходные_ордера_на_фурнитуруRowChanged != null)) {
                    this.Приходные_ордера_на_фурнитуруRowChanged(this, new Приходные_ордера_на_фурнитуруRowChangeEvent(((Приходные_ордера_на_фурнитуруRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Приходные_ордера_на_фурнитуруRowChanging != null)) {
                    this.Приходные_ордера_на_фурнитуруRowChanging(this, new Приходные_ордера_на_фурнитуруRowChangeEvent(((Приходные_ордера_на_фурнитуруRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Приходные_ордера_на_фурнитуруRowDeleted != null)) {
                    this.Приходные_ордера_на_фурнитуруRowDeleted(this, new Приходные_ордера_на_фурнитуруRowChangeEvent(((Приходные_ордера_на_фурнитуруRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Приходные_ордера_на_фурнитуруRowDeleting != null)) {
                    this.Приходные_ордера_на_фурнитуруRowDeleting(this, new Приходные_ордера_на_фурнитуруRowChangeEvent(((Приходные_ордера_на_фурнитуруRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveПриходные_ордера_на_фурнитуруRow(Приходные_ордера_на_фурнитуруRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Приходные_ордера_на_фурнитуруDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ТканиDataTable : global::System.Data.TypedTableBase<ТканиRow> {
            
            private global::System.Data.DataColumn columnID_Ткани;
            
            private global::System.Data.DataColumn columnНаименование;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ТканиDataTable() {
                this.TableName = "Ткани";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ТканиDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ТканиDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_ТканиColumn {
                get {
                    return this.columnID_Ткани;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НаименованиеColumn {
                get {
                    return this.columnНаименование;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ТканиRow this[int index] {
                get {
                    return ((ТканиRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ТканиRowChangeEventHandler ТканиRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ТканиRowChangeEventHandler ТканиRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ТканиRowChangeEventHandler ТканиRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ТканиRowChangeEventHandler ТканиRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddТканиRow(ТканиRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ТканиRow AddТканиRow(string Наименование) {
                ТканиRow rowТканиRow = ((ТканиRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Наименование};
                rowТканиRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowТканиRow);
                return rowТканиRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ТканиRow FindByID_Ткани(int ID_Ткани) {
                return ((ТканиRow)(this.Rows.Find(new object[] {
                            ID_Ткани})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ТканиDataTable cln = ((ТканиDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ТканиDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_Ткани = base.Columns["ID_Ткани"];
                this.columnНаименование = base.Columns["Наименование"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_Ткани = new global::System.Data.DataColumn("ID_Ткани", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Ткани);
                this.columnНаименование = new global::System.Data.DataColumn("Наименование", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Ткани}, true));
                this.columnID_Ткани.AutoIncrement = true;
                this.columnID_Ткани.AutoIncrementSeed = -1;
                this.columnID_Ткани.AutoIncrementStep = -1;
                this.columnID_Ткани.AllowDBNull = false;
                this.columnID_Ткани.ReadOnly = true;
                this.columnID_Ткани.Unique = true;
                this.columnНаименование.AllowDBNull = false;
                this.columnНаименование.MaxLength = 90;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ТканиRow NewТканиRow() {
                return ((ТканиRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ТканиRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ТканиRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ТканиRowChanged != null)) {
                    this.ТканиRowChanged(this, new ТканиRowChangeEvent(((ТканиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ТканиRowChanging != null)) {
                    this.ТканиRowChanging(this, new ТканиRowChangeEvent(((ТканиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ТканиRowDeleted != null)) {
                    this.ТканиRowDeleted(this, new ТканиRowChangeEvent(((ТканиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ТканиRowDeleting != null)) {
                    this.ТканиRowDeleting(this, new ТканиRowChangeEvent(((ТканиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveТканиRow(ТканиRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ТканиDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ФурнитураDataTable : global::System.Data.TypedTableBase<ФурнитураRow> {
            
            private global::System.Data.DataColumn columnID_Фурнитуры;
            
            private global::System.Data.DataColumn columnНаименование;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ФурнитураDataTable() {
                this.TableName = "Фурнитура";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ФурнитураDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ФурнитураDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_ФурнитурыColumn {
                get {
                    return this.columnID_Фурнитуры;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НаименованиеColumn {
                get {
                    return this.columnНаименование;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ФурнитураRow this[int index] {
                get {
                    return ((ФурнитураRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ФурнитураRowChangeEventHandler ФурнитураRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ФурнитураRowChangeEventHandler ФурнитураRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ФурнитураRowChangeEventHandler ФурнитураRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ФурнитураRowChangeEventHandler ФурнитураRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddФурнитураRow(ФурнитураRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ФурнитураRow AddФурнитураRow(string Наименование) {
                ФурнитураRow rowФурнитураRow = ((ФурнитураRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Наименование};
                rowФурнитураRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowФурнитураRow);
                return rowФурнитураRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ФурнитураRow FindByID_Фурнитуры(int ID_Фурнитуры) {
                return ((ФурнитураRow)(this.Rows.Find(new object[] {
                            ID_Фурнитуры})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ФурнитураDataTable cln = ((ФурнитураDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ФурнитураDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_Фурнитуры = base.Columns["ID_Фурнитуры"];
                this.columnНаименование = base.Columns["Наименование"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_Фурнитуры = new global::System.Data.DataColumn("ID_Фурнитуры", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Фурнитуры);
                this.columnНаименование = new global::System.Data.DataColumn("Наименование", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Фурнитуры}, true));
                this.columnID_Фурнитуры.AutoIncrement = true;
                this.columnID_Фурнитуры.AutoIncrementSeed = -1;
                this.columnID_Фурнитуры.AutoIncrementStep = -1;
                this.columnID_Фурнитуры.AllowDBNull = false;
                this.columnID_Фурнитуры.ReadOnly = true;
                this.columnID_Фурнитуры.Unique = true;
                this.columnНаименование.AllowDBNull = false;
                this.columnНаименование.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ФурнитураRow NewФурнитураRow() {
                return ((ФурнитураRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ФурнитураRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ФурнитураRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ФурнитураRowChanged != null)) {
                    this.ФурнитураRowChanged(this, new ФурнитураRowChangeEvent(((ФурнитураRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ФурнитураRowChanging != null)) {
                    this.ФурнитураRowChanging(this, new ФурнитураRowChangeEvent(((ФурнитураRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ФурнитураRowDeleted != null)) {
                    this.ФурнитураRowDeleted(this, new ФурнитураRowChangeEvent(((ФурнитураRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ФурнитураRowDeleting != null)) {
                    this.ФурнитураRowDeleting(this, new ФурнитураRowChangeEvent(((ФурнитураRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveФурнитураRow(ФурнитураRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ФурнитураDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ЦехаDataTable : global::System.Data.TypedTableBase<ЦехаRow> {
            
            private global::System.Data.DataColumn columnID_Цеха;
            
            private global::System.Data.DataColumn columnНаименование;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ЦехаDataTable() {
                this.TableName = "Цеха";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ЦехаDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ЦехаDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_ЦехаColumn {
                get {
                    return this.columnID_Цеха;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НаименованиеColumn {
                get {
                    return this.columnНаименование;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ЦехаRow this[int index] {
                get {
                    return ((ЦехаRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ЦехаRowChangeEventHandler ЦехаRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ЦехаRowChangeEventHandler ЦехаRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ЦехаRowChangeEventHandler ЦехаRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ЦехаRowChangeEventHandler ЦехаRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddЦехаRow(ЦехаRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ЦехаRow AddЦехаRow(string Наименование) {
                ЦехаRow rowЦехаRow = ((ЦехаRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Наименование};
                rowЦехаRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowЦехаRow);
                return rowЦехаRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ЦехаRow FindByID_Цеха(int ID_Цеха) {
                return ((ЦехаRow)(this.Rows.Find(new object[] {
                            ID_Цеха})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ЦехаDataTable cln = ((ЦехаDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ЦехаDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_Цеха = base.Columns["ID_Цеха"];
                this.columnНаименование = base.Columns["Наименование"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_Цеха = new global::System.Data.DataColumn("ID_Цеха", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Цеха);
                this.columnНаименование = new global::System.Data.DataColumn("Наименование", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Цеха}, true));
                this.columnID_Цеха.AutoIncrement = true;
                this.columnID_Цеха.AutoIncrementSeed = -1;
                this.columnID_Цеха.AutoIncrementStep = -1;
                this.columnID_Цеха.AllowDBNull = false;
                this.columnID_Цеха.ReadOnly = true;
                this.columnID_Цеха.Unique = true;
                this.columnНаименование.AllowDBNull = false;
                this.columnНаименование.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ЦехаRow NewЦехаRow() {
                return ((ЦехаRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ЦехаRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ЦехаRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ЦехаRowChanged != null)) {
                    this.ЦехаRowChanged(this, new ЦехаRowChangeEvent(((ЦехаRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ЦехаRowChanging != null)) {
                    this.ЦехаRowChanging(this, new ЦехаRowChangeEvent(((ЦехаRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ЦехаRowDeleted != null)) {
                    this.ЦехаRowDeleted(this, new ЦехаRowChangeEvent(((ЦехаRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ЦехаRowDeleting != null)) {
                    this.ЦехаRowDeleting(this, new ЦехаRowChangeEvent(((ЦехаRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveЦехаRow(ЦехаRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ЦехаDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Модели_фурнитурыDataTable : global::System.Data.TypedTableBase<Модели_фурнитурыRow> {
            
            private global::System.Data.DataColumn columnID_Модели_фурнитуры;
            
            private global::System.Data.DataColumn columnID_Фурнитуры;
            
            private global::System.Data.DataColumn columnМодель_фурнитуры;
            
            private global::System.Data.DataColumn columnНаименование;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_фурнитурыDataTable() {
                this.TableName = "Модели_фурнитуры";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Модели_фурнитурыDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Модели_фурнитурыDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Модели_фурнитурыColumn {
                get {
                    return this.columnID_Модели_фурнитуры;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_ФурнитурыColumn {
                get {
                    return this.columnID_Фурнитуры;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Модель_фурнитурыColumn {
                get {
                    return this.columnМодель_фурнитуры;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НаименованиеColumn {
                get {
                    return this.columnНаименование;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_фурнитурыRow this[int index] {
                get {
                    return ((Модели_фурнитурыRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Модели_фурнитурыRowChangeEventHandler Модели_фурнитурыRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Модели_фурнитурыRowChangeEventHandler Модели_фурнитурыRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Модели_фурнитурыRowChangeEventHandler Модели_фурнитурыRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Модели_фурнитурыRowChangeEventHandler Модели_фурнитурыRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddМодели_фурнитурыRow(Модели_фурнитурыRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_фурнитурыRow AddМодели_фурнитурыRow(ФурнитураRow parentФурнитураRowByFK__Модели_фу__ID_Фу__756D6ECB, string Модель_фурнитуры, string Наименование) {
                Модели_фурнитурыRow rowМодели_фурнитурыRow = ((Модели_фурнитурыRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Модель_фурнитуры,
                        Наименование};
                if ((parentФурнитураRowByFK__Модели_фу__ID_Фу__756D6ECB != null)) {
                    columnValuesArray[1] = parentФурнитураRowByFK__Модели_фу__ID_Фу__756D6ECB[0];
                }
                rowМодели_фурнитурыRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowМодели_фурнитурыRow);
                return rowМодели_фурнитурыRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_фурнитурыRow FindByID_Модели_фурнитуры(int ID_Модели_фурнитуры) {
                return ((Модели_фурнитурыRow)(this.Rows.Find(new object[] {
                            ID_Модели_фурнитуры})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Модели_фурнитурыDataTable cln = ((Модели_фурнитурыDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Модели_фурнитурыDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_Модели_фурнитуры = base.Columns["ID_Модели_фурнитуры"];
                this.columnID_Фурнитуры = base.Columns["ID_Фурнитуры"];
                this.columnМодель_фурнитуры = base.Columns["Модель_фурнитуры"];
                this.columnНаименование = base.Columns["Наименование"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_Модели_фурнитуры = new global::System.Data.DataColumn("ID_Модели_фурнитуры", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Модели_фурнитуры);
                this.columnID_Фурнитуры = new global::System.Data.DataColumn("ID_Фурнитуры", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Фурнитуры);
                this.columnМодель_фурнитуры = new global::System.Data.DataColumn("Модель_фурнитуры", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМодель_фурнитуры);
                this.columnНаименование = new global::System.Data.DataColumn("Наименование", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Модели_фурнитуры}, true));
                this.columnID_Модели_фурнитуры.AutoIncrement = true;
                this.columnID_Модели_фурнитуры.AutoIncrementSeed = -1;
                this.columnID_Модели_фурнитуры.AutoIncrementStep = -1;
                this.columnID_Модели_фурнитуры.AllowDBNull = false;
                this.columnID_Модели_фурнитуры.ReadOnly = true;
                this.columnID_Модели_фурнитуры.Unique = true;
                this.columnID_Фурнитуры.AllowDBNull = false;
                this.columnМодель_фурнитуры.AllowDBNull = false;
                this.columnМодель_фурнитуры.MaxLength = 50;
                this.columnНаименование.AllowDBNull = false;
                this.columnНаименование.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_фурнитурыRow NewМодели_фурнитурыRow() {
                return ((Модели_фурнитурыRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Модели_фурнитурыRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Модели_фурнитурыRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Модели_фурнитурыRowChanged != null)) {
                    this.Модели_фурнитурыRowChanged(this, new Модели_фурнитурыRowChangeEvent(((Модели_фурнитурыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Модели_фурнитурыRowChanging != null)) {
                    this.Модели_фурнитурыRowChanging(this, new Модели_фурнитурыRowChangeEvent(((Модели_фурнитурыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Модели_фурнитурыRowDeleted != null)) {
                    this.Модели_фурнитурыRowDeleted(this, new Модели_фурнитурыRowChangeEvent(((Модели_фурнитурыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Модели_фурнитурыRowDeleting != null)) {
                    this.Модели_фурнитурыRowDeleting(this, new Модели_фурнитурыRowChangeEvent(((Модели_фурнитурыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveМодели_фурнитурыRow(Модели_фурнитурыRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Модели_фурнитурыDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class АвтомобилиDataTable : global::System.Data.TypedTableBase<АвтомобилиRow> {
            
            private global::System.Data.DataColumn columnID_Автомобиля;
            
            private global::System.Data.DataColumn columnМарка;
            
            private global::System.Data.DataColumn columnМодель;
            
            private global::System.Data.DataColumn columnВладелец;
            
            private global::System.Data.DataColumn columnРегистрационный_номер;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public АвтомобилиDataTable() {
                this.TableName = "Автомобили";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal АвтомобилиDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected АвтомобилиDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_АвтомобиляColumn {
                get {
                    return this.columnID_Автомобиля;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn МаркаColumn {
                get {
                    return this.columnМарка;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn МодельColumn {
                get {
                    return this.columnМодель;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ВладелецColumn {
                get {
                    return this.columnВладелец;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Регистрационный_номерColumn {
                get {
                    return this.columnРегистрационный_номер;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public АвтомобилиRow this[int index] {
                get {
                    return ((АвтомобилиRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event АвтомобилиRowChangeEventHandler АвтомобилиRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event АвтомобилиRowChangeEventHandler АвтомобилиRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event АвтомобилиRowChangeEventHandler АвтомобилиRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event АвтомобилиRowChangeEventHandler АвтомобилиRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddАвтомобилиRow(АвтомобилиRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public АвтомобилиRow AddАвтомобилиRow(string Марка, string Модель, string Владелец, string Регистрационный_номер) {
                АвтомобилиRow rowАвтомобилиRow = ((АвтомобилиRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Марка,
                        Модель,
                        Владелец,
                        Регистрационный_номер};
                rowАвтомобилиRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowАвтомобилиRow);
                return rowАвтомобилиRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public АвтомобилиRow FindByID_Автомобиля(int ID_Автомобиля) {
                return ((АвтомобилиRow)(this.Rows.Find(new object[] {
                            ID_Автомобиля})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                АвтомобилиDataTable cln = ((АвтомобилиDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new АвтомобилиDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_Автомобиля = base.Columns["ID_Автомобиля"];
                this.columnМарка = base.Columns["Марка"];
                this.columnМодель = base.Columns["Модель"];
                this.columnВладелец = base.Columns["Владелец"];
                this.columnРегистрационный_номер = base.Columns["Регистрационный_номер"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_Автомобиля = new global::System.Data.DataColumn("ID_Автомобиля", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Автомобиля);
                this.columnМарка = new global::System.Data.DataColumn("Марка", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМарка);
                this.columnМодель = new global::System.Data.DataColumn("Модель", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМодель);
                this.columnВладелец = new global::System.Data.DataColumn("Владелец", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВладелец);
                this.columnРегистрационный_номер = new global::System.Data.DataColumn("Регистрационный_номер", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnРегистрационный_номер);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Автомобиля}, true));
                this.columnID_Автомобиля.AutoIncrement = true;
                this.columnID_Автомобиля.AutoIncrementSeed = -1;
                this.columnID_Автомобиля.AutoIncrementStep = -1;
                this.columnID_Автомобиля.AllowDBNull = false;
                this.columnID_Автомобиля.ReadOnly = true;
                this.columnID_Автомобиля.Unique = true;
                this.columnМарка.AllowDBNull = false;
                this.columnМарка.MaxLength = 20;
                this.columnМодель.AllowDBNull = false;
                this.columnМодель.MaxLength = 30;
                this.columnВладелец.AllowDBNull = false;
                this.columnВладелец.MaxLength = 80;
                this.columnРегистрационный_номер.AllowDBNull = false;
                this.columnРегистрационный_номер.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public АвтомобилиRow NewАвтомобилиRow() {
                return ((АвтомобилиRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new АвтомобилиRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(АвтомобилиRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.АвтомобилиRowChanged != null)) {
                    this.АвтомобилиRowChanged(this, new АвтомобилиRowChangeEvent(((АвтомобилиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.АвтомобилиRowChanging != null)) {
                    this.АвтомобилиRowChanging(this, new АвтомобилиRowChangeEvent(((АвтомобилиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.АвтомобилиRowDeleted != null)) {
                    this.АвтомобилиRowDeleted(this, new АвтомобилиRowChangeEvent(((АвтомобилиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.АвтомобилиRowDeleting != null)) {
                    this.АвтомобилиRowDeleting(this, new АвтомобилиRowChangeEvent(((АвтомобилиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveАвтомобилиRow(АвтомобилиRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "АвтомобилиDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Материальные_ценности_по_ордеру_на_фурнитуруDataTable : global::System.Data.TypedTableBase<Материальные_ценности_по_ордеру_на_фурнитуруRow> {
            
            private global::System.Data.DataColumn columnID_Материальной_ценности;
            
            private global::System.Data.DataColumn columnID_Модели_фурнитуры;
            
            private global::System.Data.DataColumn columnID_Приходного_ордера;
            
            private global::System.Data.DataColumn columnКоличество;
            
            private global::System.Data.DataColumn columnЕдиница_измерения;
            
            private global::System.Data.DataColumn columnЦена;
            
            private global::System.Data.DataColumn columnСумма;
            
            private global::System.Data.DataColumn columnМатериальные_ценности;
            
            private global::System.Data.DataColumn columnID_Фурнитуры;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Материальные_ценности_по_ордеру_на_фурнитуруDataTable() {
                this.TableName = "Материальные_ценности_по_ордеру_на_фурнитуру";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Материальные_ценности_по_ордеру_на_фурнитуруDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Материальные_ценности_по_ордеру_на_фурнитуруDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Материальной_ценностиColumn {
                get {
                    return this.columnID_Материальной_ценности;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Модели_фурнитурыColumn {
                get {
                    return this.columnID_Модели_фурнитуры;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Приходного_ордераColumn {
                get {
                    return this.columnID_Приходного_ордера;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КоличествоColumn {
                get {
                    return this.columnКоличество;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Единица_измеренияColumn {
                get {
                    return this.columnЕдиница_измерения;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ЦенаColumn {
                get {
                    return this.columnЦена;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn СуммаColumn {
                get {
                    return this.columnСумма;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Материальные_ценностиColumn {
                get {
                    return this.columnМатериальные_ценности;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_ФурнитурыColumn {
                get {
                    return this.columnID_Фурнитуры;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Материальные_ценности_по_ордеру_на_фурнитуруRow this[int index] {
                get {
                    return ((Материальные_ценности_по_ордеру_на_фурнитуруRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Материальные_ценности_по_ордеру_на_фурнитуруRowChangeEventHandler Материальные_ценности_по_ордеру_на_фурнитуруRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Материальные_ценности_по_ордеру_на_фурнитуруRowChangeEventHandler Материальные_ценности_по_ордеру_на_фурнитуруRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Материальные_ценности_по_ордеру_на_фурнитуруRowChangeEventHandler Материальные_ценности_по_ордеру_на_фурнитуруRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Материальные_ценности_по_ордеру_на_фурнитуруRowChangeEventHandler Материальные_ценности_по_ордеру_на_фурнитуруRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddМатериальные_ценности_по_ордеру_на_фурнитуруRow(Материальные_ценности_по_ордеру_на_фурнитуруRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Материальные_ценности_по_ордеру_на_фурнитуруRow AddМатериальные_ценности_по_ордеру_на_фурнитуруRow(Модели_фурнитурыRow parentМодели_фурнитурыRowByFK__Материаль__ID_Мо__1E6F845E, Приходные_ордера_на_фурнитуруRow parentПриходные_ордера_на_фурнитуруRowByFK__Материаль__ID_Пр__1F63A897, int Количество, string Единица_измерения, decimal Цена, decimal Сумма, string Материальные_ценности) {
                Материальные_ценности_по_ордеру_на_фурнитуруRow rowМатериальные_ценности_по_ордеру_на_фурнитуруRow = ((Материальные_ценности_по_ордеру_на_фурнитуруRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        Количество,
                        Единица_измерения,
                        Цена,
                        Сумма,
                        Материальные_ценности,
                        null};
                if ((parentМодели_фурнитурыRowByFK__Материаль__ID_Мо__1E6F845E != null)) {
                    columnValuesArray[1] = parentМодели_фурнитурыRowByFK__Материаль__ID_Мо__1E6F845E[0];
                }
                if ((parentПриходные_ордера_на_фурнитуруRowByFK__Материаль__ID_Пр__1F63A897 != null)) {
                    columnValuesArray[2] = parentПриходные_ордера_на_фурнитуруRowByFK__Материаль__ID_Пр__1F63A897[0];
                }
                rowМатериальные_ценности_по_ордеру_на_фурнитуруRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowМатериальные_ценности_по_ордеру_на_фурнитуруRow);
                return rowМатериальные_ценности_по_ордеру_на_фурнитуруRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Материальные_ценности_по_ордеру_на_фурнитуруRow FindByID_Материальной_ценности(int ID_Материальной_ценности) {
                return ((Материальные_ценности_по_ордеру_на_фурнитуруRow)(this.Rows.Find(new object[] {
                            ID_Материальной_ценности})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Материальные_ценности_по_ордеру_на_фурнитуруDataTable cln = ((Материальные_ценности_по_ордеру_на_фурнитуруDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Материальные_ценности_по_ордеру_на_фурнитуруDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_Материальной_ценности = base.Columns["ID_Материальной_ценности"];
                this.columnID_Модели_фурнитуры = base.Columns["ID_Модели_фурнитуры"];
                this.columnID_Приходного_ордера = base.Columns["ID_Приходного_ордера"];
                this.columnКоличество = base.Columns["Количество"];
                this.columnЕдиница_измерения = base.Columns["Единица_измерения"];
                this.columnЦена = base.Columns["Цена"];
                this.columnСумма = base.Columns["Сумма"];
                this.columnМатериальные_ценности = base.Columns["Материальные_ценности"];
                this.columnID_Фурнитуры = base.Columns["ID_Фурнитуры"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_Материальной_ценности = new global::System.Data.DataColumn("ID_Материальной_ценности", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Материальной_ценности);
                this.columnID_Модели_фурнитуры = new global::System.Data.DataColumn("ID_Модели_фурнитуры", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Модели_фурнитуры);
                this.columnID_Приходного_ордера = new global::System.Data.DataColumn("ID_Приходного_ордера", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Приходного_ордера);
                this.columnКоличество = new global::System.Data.DataColumn("Количество", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКоличество);
                this.columnЕдиница_измерения = new global::System.Data.DataColumn("Единица_измерения", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЕдиница_измерения);
                this.columnЦена = new global::System.Data.DataColumn("Цена", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЦена);
                this.columnСумма = new global::System.Data.DataColumn("Сумма", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСумма);
                this.columnМатериальные_ценности = new global::System.Data.DataColumn("Материальные_ценности", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМатериальные_ценности);
                this.columnID_Фурнитуры = new global::System.Data.DataColumn("ID_Фурнитуры", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Фурнитуры);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Материальной_ценности}, true));
                this.columnID_Материальной_ценности.AutoIncrement = true;
                this.columnID_Материальной_ценности.AutoIncrementSeed = -1;
                this.columnID_Материальной_ценности.AutoIncrementStep = -1;
                this.columnID_Материальной_ценности.AllowDBNull = false;
                this.columnID_Материальной_ценности.ReadOnly = true;
                this.columnID_Материальной_ценности.Unique = true;
                this.columnID_Модели_фурнитуры.AllowDBNull = false;
                this.columnID_Приходного_ордера.AllowDBNull = false;
                this.columnКоличество.AllowDBNull = false;
                this.columnЕдиница_измерения.AllowDBNull = false;
                this.columnЕдиница_измерения.MaxLength = 5;
                this.columnЦена.AllowDBNull = false;
                this.columnСумма.AllowDBNull = false;
                this.columnМатериальные_ценности.ReadOnly = true;
                this.columnМатериальные_ценности.MaxLength = 81;
                this.columnID_Фурнитуры.AutoIncrement = true;
                this.columnID_Фурнитуры.AutoIncrementSeed = -1;
                this.columnID_Фурнитуры.AutoIncrementStep = -1;
                this.columnID_Фурнитуры.AllowDBNull = false;
                this.columnID_Фурнитуры.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Материальные_ценности_по_ордеру_на_фурнитуруRow NewМатериальные_ценности_по_ордеру_на_фурнитуруRow() {
                return ((Материальные_ценности_по_ордеру_на_фурнитуруRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Материальные_ценности_по_ордеру_на_фурнитуруRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Материальные_ценности_по_ордеру_на_фурнитуруRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Материальные_ценности_по_ордеру_на_фурнитуруRowChanged != null)) {
                    this.Материальные_ценности_по_ордеру_на_фурнитуруRowChanged(this, new Материальные_ценности_по_ордеру_на_фурнитуруRowChangeEvent(((Материальные_ценности_по_ордеру_на_фурнитуруRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Материальные_ценности_по_ордеру_на_фурнитуруRowChanging != null)) {
                    this.Материальные_ценности_по_ордеру_на_фурнитуруRowChanging(this, new Материальные_ценности_по_ордеру_на_фурнитуруRowChangeEvent(((Материальные_ценности_по_ордеру_на_фурнитуруRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Материальные_ценности_по_ордеру_на_фурнитуруRowDeleted != null)) {
                    this.Материальные_ценности_по_ордеру_на_фурнитуруRowDeleted(this, new Материальные_ценности_по_ордеру_на_фурнитуруRowChangeEvent(((Материальные_ценности_по_ордеру_на_фурнитуруRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Материальные_ценности_по_ордеру_на_фурнитуруRowDeleting != null)) {
                    this.Материальные_ценности_по_ордеру_на_фурнитуруRowDeleting(this, new Материальные_ценности_по_ордеру_на_фурнитуруRowChangeEvent(((Материальные_ценности_по_ордеру_на_фурнитуруRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveМатериальные_ценности_по_ордеру_на_фурнитуруRow(Материальные_ценности_по_ордеру_на_фурнитуруRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Материальные_ценности_по_ордеру_на_фурнитуруDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Склад_фурнитурыDataTable : global::System.Data.TypedTableBase<Склад_фурнитурыRow> {
            
            private global::System.Data.DataColumn columnID_Фурнитуры_на_складе;
            
            private global::System.Data.DataColumn columnID_Модели_фурнитуры;
            
            private global::System.Data.DataColumn columnЕдиница_измерения;
            
            private global::System.Data.DataColumn columnКоличество;
            
            private global::System.Data.DataColumn columnЦена;
            
            private global::System.Data.DataColumn columnID_Фурнитуры;
            
            private global::System.Data.DataColumn columnНаименование;
            
            private global::System.Data.DataColumn columnМодель_фурнитуры;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Склад_фурнитурыDataTable() {
                this.TableName = "Склад_фурнитуры";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Склад_фурнитурыDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Склад_фурнитурыDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Фурнитуры_на_складеColumn {
                get {
                    return this.columnID_Фурнитуры_на_складе;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Модели_фурнитурыColumn {
                get {
                    return this.columnID_Модели_фурнитуры;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Единица_измеренияColumn {
                get {
                    return this.columnЕдиница_измерения;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КоличествоColumn {
                get {
                    return this.columnКоличество;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ЦенаColumn {
                get {
                    return this.columnЦена;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_ФурнитурыColumn {
                get {
                    return this.columnID_Фурнитуры;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НаименованиеColumn {
                get {
                    return this.columnНаименование;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Модель_фурнитурыColumn {
                get {
                    return this.columnМодель_фурнитуры;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Склад_фурнитурыRow this[int index] {
                get {
                    return ((Склад_фурнитурыRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Склад_фурнитурыRowChangeEventHandler Склад_фурнитурыRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Склад_фурнитурыRowChangeEventHandler Склад_фурнитурыRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Склад_фурнитурыRowChangeEventHandler Склад_фурнитурыRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Склад_фурнитурыRowChangeEventHandler Склад_фурнитурыRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddСклад_фурнитурыRow(Склад_фурнитурыRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Склад_фурнитурыRow AddСклад_фурнитурыRow(Модели_фурнитурыRow parentМодели_фурнитурыRowByFK__Склад_фур__ID_Мо__7720AD13, string Единица_измерения, int Количество, decimal Цена, string Наименование, string Модель_фурнитуры) {
                Склад_фурнитурыRow rowСклад_фурнитурыRow = ((Склад_фурнитурыRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Единица_измерения,
                        Количество,
                        Цена,
                        null,
                        Наименование,
                        Модель_фурнитуры};
                if ((parentМодели_фурнитурыRowByFK__Склад_фур__ID_Мо__7720AD13 != null)) {
                    columnValuesArray[1] = parentМодели_фурнитурыRowByFK__Склад_фур__ID_Мо__7720AD13[0];
                }
                rowСклад_фурнитурыRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowСклад_фурнитурыRow);
                return rowСклад_фурнитурыRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Склад_фурнитурыRow FindByID_Фурнитуры_на_складе(int ID_Фурнитуры_на_складе) {
                return ((Склад_фурнитурыRow)(this.Rows.Find(new object[] {
                            ID_Фурнитуры_на_складе})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Склад_фурнитурыDataTable cln = ((Склад_фурнитурыDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Склад_фурнитурыDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_Фурнитуры_на_складе = base.Columns["ID_Фурнитуры_на_складе"];
                this.columnID_Модели_фурнитуры = base.Columns["ID_Модели_фурнитуры"];
                this.columnЕдиница_измерения = base.Columns["Единица_измерения"];
                this.columnКоличество = base.Columns["Количество"];
                this.columnЦена = base.Columns["Цена"];
                this.columnID_Фурнитуры = base.Columns["ID_Фурнитуры"];
                this.columnНаименование = base.Columns["Наименование"];
                this.columnМодель_фурнитуры = base.Columns["Модель_фурнитуры"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_Фурнитуры_на_складе = new global::System.Data.DataColumn("ID_Фурнитуры_на_складе", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Фурнитуры_на_складе);
                this.columnID_Модели_фурнитуры = new global::System.Data.DataColumn("ID_Модели_фурнитуры", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Модели_фурнитуры);
                this.columnЕдиница_измерения = new global::System.Data.DataColumn("Единица_измерения", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЕдиница_измерения);
                this.columnКоличество = new global::System.Data.DataColumn("Количество", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКоличество);
                this.columnЦена = new global::System.Data.DataColumn("Цена", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЦена);
                this.columnID_Фурнитуры = new global::System.Data.DataColumn("ID_Фурнитуры", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Фурнитуры);
                this.columnНаименование = new global::System.Data.DataColumn("Наименование", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование);
                this.columnМодель_фурнитуры = new global::System.Data.DataColumn("Модель_фурнитуры", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМодель_фурнитуры);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Фурнитуры_на_складе}, true));
                this.columnID_Фурнитуры_на_складе.AutoIncrement = true;
                this.columnID_Фурнитуры_на_складе.AutoIncrementSeed = -1;
                this.columnID_Фурнитуры_на_складе.AutoIncrementStep = -1;
                this.columnID_Фурнитуры_на_складе.AllowDBNull = false;
                this.columnID_Фурнитуры_на_складе.ReadOnly = true;
                this.columnID_Фурнитуры_на_складе.Unique = true;
                this.columnID_Модели_фурнитуры.AllowDBNull = false;
                this.columnЕдиница_измерения.AllowDBNull = false;
                this.columnЕдиница_измерения.MaxLength = 5;
                this.columnКоличество.AllowDBNull = false;
                this.columnЦена.AllowDBNull = false;
                this.columnID_Фурнитуры.AutoIncrement = true;
                this.columnID_Фурнитуры.AutoIncrementSeed = -1;
                this.columnID_Фурнитуры.AutoIncrementStep = -1;
                this.columnID_Фурнитуры.AllowDBNull = false;
                this.columnID_Фурнитуры.ReadOnly = true;
                this.columnНаименование.AllowDBNull = false;
                this.columnНаименование.MaxLength = 30;
                this.columnМодель_фурнитуры.AllowDBNull = false;
                this.columnМодель_фурнитуры.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Склад_фурнитурыRow NewСклад_фурнитурыRow() {
                return ((Склад_фурнитурыRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Склад_фурнитурыRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Склад_фурнитурыRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Склад_фурнитурыRowChanged != null)) {
                    this.Склад_фурнитурыRowChanged(this, new Склад_фурнитурыRowChangeEvent(((Склад_фурнитурыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Склад_фурнитурыRowChanging != null)) {
                    this.Склад_фурнитурыRowChanging(this, new Склад_фурнитурыRowChangeEvent(((Склад_фурнитурыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Склад_фурнитурыRowDeleted != null)) {
                    this.Склад_фурнитурыRowDeleted(this, new Склад_фурнитурыRowChangeEvent(((Склад_фурнитурыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Склад_фурнитурыRowDeleting != null)) {
                    this.Склад_фурнитурыRowDeleting(this, new Склад_фурнитурыRowChangeEvent(((Склад_фурнитурыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveСклад_фурнитурыRow(Склад_фурнитурыRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Склад_фурнитурыDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Фурнитура_по_лимитно_заборной_картеDataTable : global::System.Data.TypedTableBase<Фурнитура_по_лимитно_заборной_картеRow> {
            
            private global::System.Data.DataColumn columnID_Фурнитруы_по_лимитно_заборной_карте;
            
            private global::System.Data.DataColumn columnID_Лимитно_заборной_карты;
            
            private global::System.Data.DataColumn columnID_Фурнитуры_на_складе;
            
            private global::System.Data.DataColumn columnНорма_на_единицу_изделия;
            
            private global::System.Data.DataColumn columnЕдиница_измерения;
            
            private global::System.Data.DataColumn columnКоличество;
            
            private global::System.Data.DataColumn columnЦена;
            
            private global::System.Data.DataColumn columnСумма;
            
            private global::System.Data.DataColumn columnНаименование_фурнитуры;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Фурнитура_по_лимитно_заборной_картеDataTable() {
                this.TableName = "Фурнитура_по_лимитно_заборной_карте";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Фурнитура_по_лимитно_заборной_картеDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Фурнитура_по_лимитно_заборной_картеDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Фурнитруы_по_лимитно_заборной_картеColumn {
                get {
                    return this.columnID_Фурнитруы_по_лимитно_заборной_карте;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Лимитно_заборной_картыColumn {
                get {
                    return this.columnID_Лимитно_заборной_карты;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Фурнитуры_на_складеColumn {
                get {
                    return this.columnID_Фурнитуры_на_складе;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Норма_на_единицу_изделияColumn {
                get {
                    return this.columnНорма_на_единицу_изделия;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Единица_измеренияColumn {
                get {
                    return this.columnЕдиница_измерения;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КоличествоColumn {
                get {
                    return this.columnКоличество;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ЦенаColumn {
                get {
                    return this.columnЦена;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn СуммаColumn {
                get {
                    return this.columnСумма;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Наименование_фурнитурыColumn {
                get {
                    return this.columnНаименование_фурнитуры;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Фурнитура_по_лимитно_заборной_картеRow this[int index] {
                get {
                    return ((Фурнитура_по_лимитно_заборной_картеRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Фурнитура_по_лимитно_заборной_картеRowChangeEventHandler Фурнитура_по_лимитно_заборной_картеRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Фурнитура_по_лимитно_заборной_картеRowChangeEventHandler Фурнитура_по_лимитно_заборной_картеRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Фурнитура_по_лимитно_заборной_картеRowChangeEventHandler Фурнитура_по_лимитно_заборной_картеRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Фурнитура_по_лимитно_заборной_картеRowChangeEventHandler Фурнитура_по_лимитно_заборной_картеRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddФурнитура_по_лимитно_заборной_картеRow(Фурнитура_по_лимитно_заборной_картеRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Фурнитура_по_лимитно_заборной_картеRow AddФурнитура_по_лимитно_заборной_картеRow(Лимитно_заборные_картыRow parentЛимитно_заборные_картыRowByFK__Фурнитура__ID_Ли__13BCEBC1, Склад_фурнитурыRow parentСклад_фурнитурыRowByFK__Фурнитура__ID_Фу__7AF13DF7, int Норма_на_единицу_изделия, string Единица_измерения, int Количество, decimal Цена, decimal Сумма, string Наименование_фурнитуры) {
                Фурнитура_по_лимитно_заборной_картеRow rowФурнитура_по_лимитно_заборной_картеRow = ((Фурнитура_по_лимитно_заборной_картеRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        Норма_на_единицу_изделия,
                        Единица_измерения,
                        Количество,
                        Цена,
                        Сумма,
                        Наименование_фурнитуры};
                if ((parentЛимитно_заборные_картыRowByFK__Фурнитура__ID_Ли__13BCEBC1 != null)) {
                    columnValuesArray[1] = parentЛимитно_заборные_картыRowByFK__Фурнитура__ID_Ли__13BCEBC1[0];
                }
                if ((parentСклад_фурнитурыRowByFK__Фурнитура__ID_Фу__7AF13DF7 != null)) {
                    columnValuesArray[2] = parentСклад_фурнитурыRowByFK__Фурнитура__ID_Фу__7AF13DF7[0];
                }
                rowФурнитура_по_лимитно_заборной_картеRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowФурнитура_по_лимитно_заборной_картеRow);
                return rowФурнитура_по_лимитно_заборной_картеRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Фурнитура_по_лимитно_заборной_картеRow FindByID_Фурнитруы_по_лимитно_заборной_карте(int ID_Фурнитруы_по_лимитно_заборной_карте) {
                return ((Фурнитура_по_лимитно_заборной_картеRow)(this.Rows.Find(new object[] {
                            ID_Фурнитруы_по_лимитно_заборной_карте})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Фурнитура_по_лимитно_заборной_картеDataTable cln = ((Фурнитура_по_лимитно_заборной_картеDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Фурнитура_по_лимитно_заборной_картеDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_Фурнитруы_по_лимитно_заборной_карте = base.Columns["ID_Фурнитруы_по_лимитно_заборной_карте"];
                this.columnID_Лимитно_заборной_карты = base.Columns["ID_Лимитно_заборной_карты"];
                this.columnID_Фурнитуры_на_складе = base.Columns["ID_Фурнитуры_на_складе"];
                this.columnНорма_на_единицу_изделия = base.Columns["Норма_на_единицу_изделия"];
                this.columnЕдиница_измерения = base.Columns["Единица_измерения"];
                this.columnКоличество = base.Columns["Количество"];
                this.columnЦена = base.Columns["Цена"];
                this.columnСумма = base.Columns["Сумма"];
                this.columnНаименование_фурнитуры = base.Columns["Наименование_фурнитуры"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_Фурнитруы_по_лимитно_заборной_карте = new global::System.Data.DataColumn("ID_Фурнитруы_по_лимитно_заборной_карте", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Фурнитруы_по_лимитно_заборной_карте);
                this.columnID_Лимитно_заборной_карты = new global::System.Data.DataColumn("ID_Лимитно_заборной_карты", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Лимитно_заборной_карты);
                this.columnID_Фурнитуры_на_складе = new global::System.Data.DataColumn("ID_Фурнитуры_на_складе", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Фурнитуры_на_складе);
                this.columnНорма_на_единицу_изделия = new global::System.Data.DataColumn("Норма_на_единицу_изделия", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНорма_на_единицу_изделия);
                this.columnЕдиница_измерения = new global::System.Data.DataColumn("Единица_измерения", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЕдиница_измерения);
                this.columnКоличество = new global::System.Data.DataColumn("Количество", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКоличество);
                this.columnЦена = new global::System.Data.DataColumn("Цена", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЦена);
                this.columnСумма = new global::System.Data.DataColumn("Сумма", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСумма);
                this.columnНаименование_фурнитуры = new global::System.Data.DataColumn("Наименование_фурнитуры", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование_фурнитуры);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Фурнитруы_по_лимитно_заборной_карте}, true));
                this.columnID_Фурнитруы_по_лимитно_заборной_карте.AutoIncrement = true;
                this.columnID_Фурнитруы_по_лимитно_заборной_карте.AutoIncrementSeed = -1;
                this.columnID_Фурнитруы_по_лимитно_заборной_карте.AutoIncrementStep = -1;
                this.columnID_Фурнитруы_по_лимитно_заборной_карте.AllowDBNull = false;
                this.columnID_Фурнитруы_по_лимитно_заборной_карте.ReadOnly = true;
                this.columnID_Фурнитруы_по_лимитно_заборной_карте.Unique = true;
                this.columnID_Лимитно_заборной_карты.AllowDBNull = false;
                this.columnID_Фурнитуры_на_складе.AllowDBNull = false;
                this.columnНорма_на_единицу_изделия.AllowDBNull = false;
                this.columnЕдиница_измерения.AllowDBNull = false;
                this.columnЕдиница_измерения.MaxLength = 5;
                this.columnКоличество.AllowDBNull = false;
                this.columnЦена.AllowDBNull = false;
                this.columnСумма.AllowDBNull = false;
                this.columnНаименование_фурнитуры.ReadOnly = true;
                this.columnНаименование_фурнитуры.MaxLength = 81;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Фурнитура_по_лимитно_заборной_картеRow NewФурнитура_по_лимитно_заборной_картеRow() {
                return ((Фурнитура_по_лимитно_заборной_картеRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Фурнитура_по_лимитно_заборной_картеRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Фурнитура_по_лимитно_заборной_картеRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Фурнитура_по_лимитно_заборной_картеRowChanged != null)) {
                    this.Фурнитура_по_лимитно_заборной_картеRowChanged(this, new Фурнитура_по_лимитно_заборной_картеRowChangeEvent(((Фурнитура_по_лимитно_заборной_картеRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Фурнитура_по_лимитно_заборной_картеRowChanging != null)) {
                    this.Фурнитура_по_лимитно_заборной_картеRowChanging(this, new Фурнитура_по_лимитно_заборной_картеRowChangeEvent(((Фурнитура_по_лимитно_заборной_картеRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Фурнитура_по_лимитно_заборной_картеRowDeleted != null)) {
                    this.Фурнитура_по_лимитно_заборной_картеRowDeleted(this, new Фурнитура_по_лимитно_заборной_картеRowChangeEvent(((Фурнитура_по_лимитно_заборной_картеRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Фурнитура_по_лимитно_заборной_картеRowDeleting != null)) {
                    this.Фурнитура_по_лимитно_заборной_картеRowDeleting(this, new Фурнитура_по_лимитно_заборной_картеRowChangeEvent(((Фурнитура_по_лимитно_заборной_картеRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveФурнитура_по_лимитно_заборной_картеRow(Фурнитура_по_лимитно_заборной_картеRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Фурнитура_по_лимитно_заборной_картеDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Склад_тканиDataTable : global::System.Data.TypedTableBase<Склад_тканиRow> {
            
            private global::System.Data.DataColumn columnID_Ткани_на_складе;
            
            private global::System.Data.DataColumn columnID_Модели_ткани;
            
            private global::System.Data.DataColumn columnЕдиница_измерения;
            
            private global::System.Data.DataColumn columnКоличество;
            
            private global::System.Data.DataColumn columnЦена;
            
            private global::System.Data.DataColumn columnID_Ткани;
            
            private global::System.Data.DataColumn columnНаименование;
            
            private global::System.Data.DataColumn columnМодель_ткани;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Склад_тканиDataTable() {
                this.TableName = "Склад_ткани";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Склад_тканиDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Склад_тканиDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Ткани_на_складеColumn {
                get {
                    return this.columnID_Ткани_на_складе;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Модели_тканиColumn {
                get {
                    return this.columnID_Модели_ткани;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Единица_измеренияColumn {
                get {
                    return this.columnЕдиница_измерения;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КоличествоColumn {
                get {
                    return this.columnКоличество;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ЦенаColumn {
                get {
                    return this.columnЦена;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_ТканиColumn {
                get {
                    return this.columnID_Ткани;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НаименованиеColumn {
                get {
                    return this.columnНаименование;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Модель_тканиColumn {
                get {
                    return this.columnМодель_ткани;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Склад_тканиRow this[int index] {
                get {
                    return ((Склад_тканиRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Склад_тканиRowChangeEventHandler Склад_тканиRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Склад_тканиRowChangeEventHandler Склад_тканиRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Склад_тканиRowChangeEventHandler Склад_тканиRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Склад_тканиRowChangeEventHandler Склад_тканиRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddСклад_тканиRow(Склад_тканиRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Склад_тканиRow AddСклад_тканиRow(Модели_тканиRow parentМодели_тканиRowByFK__Склад_тка__ID_Мо__084B3915, string Единица_измерения, int Количество, decimal Цена, string Наименование, string Модель_ткани) {
                Склад_тканиRow rowСклад_тканиRow = ((Склад_тканиRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Единица_измерения,
                        Количество,
                        Цена,
                        null,
                        Наименование,
                        Модель_ткани};
                if ((parentМодели_тканиRowByFK__Склад_тка__ID_Мо__084B3915 != null)) {
                    columnValuesArray[1] = parentМодели_тканиRowByFK__Склад_тка__ID_Мо__084B3915[0];
                }
                rowСклад_тканиRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowСклад_тканиRow);
                return rowСклад_тканиRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Склад_тканиRow FindByID_Ткани_на_складе(int ID_Ткани_на_складе) {
                return ((Склад_тканиRow)(this.Rows.Find(new object[] {
                            ID_Ткани_на_складе})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Склад_тканиDataTable cln = ((Склад_тканиDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Склад_тканиDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_Ткани_на_складе = base.Columns["ID_Ткани_на_складе"];
                this.columnID_Модели_ткани = base.Columns["ID_Модели_ткани"];
                this.columnЕдиница_измерения = base.Columns["Единица_измерения"];
                this.columnКоличество = base.Columns["Количество"];
                this.columnЦена = base.Columns["Цена"];
                this.columnID_Ткани = base.Columns["ID_Ткани"];
                this.columnНаименование = base.Columns["Наименование"];
                this.columnМодель_ткани = base.Columns["Модель_ткани"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_Ткани_на_складе = new global::System.Data.DataColumn("ID_Ткани_на_складе", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Ткани_на_складе);
                this.columnID_Модели_ткани = new global::System.Data.DataColumn("ID_Модели_ткани", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Модели_ткани);
                this.columnЕдиница_измерения = new global::System.Data.DataColumn("Единица_измерения", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЕдиница_измерения);
                this.columnКоличество = new global::System.Data.DataColumn("Количество", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКоличество);
                this.columnЦена = new global::System.Data.DataColumn("Цена", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЦена);
                this.columnID_Ткани = new global::System.Data.DataColumn("ID_Ткани", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Ткани);
                this.columnНаименование = new global::System.Data.DataColumn("Наименование", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование);
                this.columnМодель_ткани = new global::System.Data.DataColumn("Модель_ткани", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМодель_ткани);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Ткани_на_складе}, true));
                this.columnID_Ткани_на_складе.AutoIncrement = true;
                this.columnID_Ткани_на_складе.AutoIncrementSeed = -1;
                this.columnID_Ткани_на_складе.AutoIncrementStep = -1;
                this.columnID_Ткани_на_складе.AllowDBNull = false;
                this.columnID_Ткани_на_складе.ReadOnly = true;
                this.columnID_Ткани_на_складе.Unique = true;
                this.columnID_Модели_ткани.AllowDBNull = false;
                this.columnЕдиница_измерения.AllowDBNull = false;
                this.columnЕдиница_измерения.MaxLength = 5;
                this.columnКоличество.AllowDBNull = false;
                this.columnЦена.AllowDBNull = false;
                this.columnID_Ткани.AutoIncrement = true;
                this.columnID_Ткани.AutoIncrementSeed = -1;
                this.columnID_Ткани.AutoIncrementStep = -1;
                this.columnID_Ткани.AllowDBNull = false;
                this.columnID_Ткани.ReadOnly = true;
                this.columnНаименование.AllowDBNull = false;
                this.columnНаименование.MaxLength = 90;
                this.columnМодель_ткани.AllowDBNull = false;
                this.columnМодель_ткани.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Склад_тканиRow NewСклад_тканиRow() {
                return ((Склад_тканиRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Склад_тканиRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Склад_тканиRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Склад_тканиRowChanged != null)) {
                    this.Склад_тканиRowChanged(this, new Склад_тканиRowChangeEvent(((Склад_тканиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Склад_тканиRowChanging != null)) {
                    this.Склад_тканиRowChanging(this, new Склад_тканиRowChangeEvent(((Склад_тканиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Склад_тканиRowDeleted != null)) {
                    this.Склад_тканиRowDeleted(this, new Склад_тканиRowChangeEvent(((Склад_тканиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Склад_тканиRowDeleting != null)) {
                    this.Склад_тканиRowDeleting(this, new Склад_тканиRowChangeEvent(((Склад_тканиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveСклад_тканиRow(Склад_тканиRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Склад_тканиDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Ткань_для_расчётной_картыDataTable : global::System.Data.TypedTableBase<Ткань_для_расчётной_картыRow> {
            
            private global::System.Data.DataColumn columnID_Ткани_для_карты;
            
            private global::System.Data.DataColumn columnID_Расчётной_карты;
            
            private global::System.Data.DataColumn columnID_Ткани_на_складе;
            
            private global::System.Data.DataColumn columnКоличество;
            
            private global::System.Data.DataColumn columnЕдиница_измерения;
            
            private global::System.Data.DataColumn columnНаименование;
            
            private global::System.Data.DataColumn columnМодель_ткани;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Ткань_для_расчётной_картыDataTable() {
                this.TableName = "Ткань_для_расчётной_карты";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Ткань_для_расчётной_картыDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Ткань_для_расчётной_картыDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Ткани_для_картыColumn {
                get {
                    return this.columnID_Ткани_для_карты;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Расчётной_картыColumn {
                get {
                    return this.columnID_Расчётной_карты;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Ткани_на_складеColumn {
                get {
                    return this.columnID_Ткани_на_складе;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КоличествоColumn {
                get {
                    return this.columnКоличество;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Единица_измеренияColumn {
                get {
                    return this.columnЕдиница_измерения;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НаименованиеColumn {
                get {
                    return this.columnНаименование;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Модель_тканиColumn {
                get {
                    return this.columnМодель_ткани;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Ткань_для_расчётной_картыRow this[int index] {
                get {
                    return ((Ткань_для_расчётной_картыRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Ткань_для_расчётной_картыRowChangeEventHandler Ткань_для_расчётной_картыRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Ткань_для_расчётной_картыRowChangeEventHandler Ткань_для_расчётной_картыRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Ткань_для_расчётной_картыRowChangeEventHandler Ткань_для_расчётной_картыRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Ткань_для_расчётной_картыRowChangeEventHandler Ткань_для_расчётной_картыRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddТкань_для_расчётной_картыRow(Ткань_для_расчётной_картыRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Ткань_для_расчётной_картыRow AddТкань_для_расчётной_картыRow(Расчётные_картыRow parentРасчётные_картыRowByFK__Ткань_для__ID_Ра__0C1BC9F9, Склад_тканиRow parentСклад_тканиRowByFK__Ткань_для__ID_Тк__0D0FEE32, int Количество, string Единица_измерения, string Наименование, string Модель_ткани) {
                Ткань_для_расчётной_картыRow rowТкань_для_расчётной_картыRow = ((Ткань_для_расчётной_картыRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        Количество,
                        Единица_измерения,
                        Наименование,
                        Модель_ткани};
                if ((parentРасчётные_картыRowByFK__Ткань_для__ID_Ра__0C1BC9F9 != null)) {
                    columnValuesArray[1] = parentРасчётные_картыRowByFK__Ткань_для__ID_Ра__0C1BC9F9[0];
                }
                if ((parentСклад_тканиRowByFK__Ткань_для__ID_Тк__0D0FEE32 != null)) {
                    columnValuesArray[2] = parentСклад_тканиRowByFK__Ткань_для__ID_Тк__0D0FEE32[0];
                }
                rowТкань_для_расчётной_картыRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowТкань_для_расчётной_картыRow);
                return rowТкань_для_расчётной_картыRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Ткань_для_расчётной_картыRow FindByID_Ткани_для_карты(int ID_Ткани_для_карты) {
                return ((Ткань_для_расчётной_картыRow)(this.Rows.Find(new object[] {
                            ID_Ткани_для_карты})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Ткань_для_расчётной_картыDataTable cln = ((Ткань_для_расчётной_картыDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Ткань_для_расчётной_картыDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_Ткани_для_карты = base.Columns["ID_Ткани_для_карты"];
                this.columnID_Расчётной_карты = base.Columns["ID_Расчётной_карты"];
                this.columnID_Ткани_на_складе = base.Columns["ID_Ткани_на_складе"];
                this.columnКоличество = base.Columns["Количество"];
                this.columnЕдиница_измерения = base.Columns["Единица_измерения"];
                this.columnНаименование = base.Columns["Наименование"];
                this.columnМодель_ткани = base.Columns["Модель_ткани"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_Ткани_для_карты = new global::System.Data.DataColumn("ID_Ткани_для_карты", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Ткани_для_карты);
                this.columnID_Расчётной_карты = new global::System.Data.DataColumn("ID_Расчётной_карты", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Расчётной_карты);
                this.columnID_Ткани_на_складе = new global::System.Data.DataColumn("ID_Ткани_на_складе", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Ткани_на_складе);
                this.columnКоличество = new global::System.Data.DataColumn("Количество", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКоличество);
                this.columnЕдиница_измерения = new global::System.Data.DataColumn("Единица_измерения", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЕдиница_измерения);
                this.columnНаименование = new global::System.Data.DataColumn("Наименование", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование);
                this.columnМодель_ткани = new global::System.Data.DataColumn("Модель_ткани", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМодель_ткани);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Ткани_для_карты}, true));
                this.columnID_Ткани_для_карты.AutoIncrement = true;
                this.columnID_Ткани_для_карты.AutoIncrementSeed = -1;
                this.columnID_Ткани_для_карты.AutoIncrementStep = -1;
                this.columnID_Ткани_для_карты.AllowDBNull = false;
                this.columnID_Ткани_для_карты.ReadOnly = true;
                this.columnID_Ткани_для_карты.Unique = true;
                this.columnID_Расчётной_карты.AllowDBNull = false;
                this.columnID_Ткани_на_складе.AllowDBNull = false;
                this.columnКоличество.AllowDBNull = false;
                this.columnЕдиница_измерения.AllowDBNull = false;
                this.columnЕдиница_измерения.MaxLength = 5;
                this.columnНаименование.AllowDBNull = false;
                this.columnНаименование.MaxLength = 90;
                this.columnМодель_ткани.AllowDBNull = false;
                this.columnМодель_ткани.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Ткань_для_расчётной_картыRow NewТкань_для_расчётной_картыRow() {
                return ((Ткань_для_расчётной_картыRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Ткань_для_расчётной_картыRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Ткань_для_расчётной_картыRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Ткань_для_расчётной_картыRowChanged != null)) {
                    this.Ткань_для_расчётной_картыRowChanged(this, new Ткань_для_расчётной_картыRowChangeEvent(((Ткань_для_расчётной_картыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Ткань_для_расчётной_картыRowChanging != null)) {
                    this.Ткань_для_расчётной_картыRowChanging(this, new Ткань_для_расчётной_картыRowChangeEvent(((Ткань_для_расчётной_картыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Ткань_для_расчётной_картыRowDeleted != null)) {
                    this.Ткань_для_расчётной_картыRowDeleted(this, new Ткань_для_расчётной_картыRowChangeEvent(((Ткань_для_расчётной_картыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Ткань_для_расчётной_картыRowDeleting != null)) {
                    this.Ткань_для_расчётной_картыRowDeleting(this, new Ткань_для_расчётной_картыRowChangeEvent(((Ткань_для_расчётной_картыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveТкань_для_расчётной_картыRow(Ткань_для_расчётной_картыRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Ткань_для_расчётной_картыDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Лимитно_заборные_картыDataTable : global::System.Data.TypedTableBase<Лимитно_заборные_картыRow> {
            
            private global::System.Data.DataColumn columnID_Лимитно_заборной_карты;
            
            private global::System.Data.DataColumn columnID_Бригады;
            
            private global::System.Data.DataColumn columnID_Модели_изделия;
            
            private global::System.Data.DataColumn columnДата_составления;
            
            private global::System.Data.DataColumn columnКоличество_изделий;
            
            private global::System.Data.DataColumn columnБригада;
            
            private global::System.Data.DataColumn columnИзделие;
            
            private global::System.Data.DataColumn columnМодель_изделия;
            
            private global::System.Data.DataColumn columnЦех;
            
            private global::System.Data.DataColumn columnID_Цеха;
            
            private global::System.Data.DataColumn columnID_Изделия;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Лимитно_заборные_картыDataTable() {
                this.TableName = "Лимитно_заборные_карты";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Лимитно_заборные_картыDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Лимитно_заборные_картыDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Лимитно_заборной_картыColumn {
                get {
                    return this.columnID_Лимитно_заборной_карты;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_БригадыColumn {
                get {
                    return this.columnID_Бригады;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Модели_изделияColumn {
                get {
                    return this.columnID_Модели_изделия;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Дата_составленияColumn {
                get {
                    return this.columnДата_составления;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Количество_изделийColumn {
                get {
                    return this.columnКоличество_изделий;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn БригадаColumn {
                get {
                    return this.columnБригада;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ИзделиеColumn {
                get {
                    return this.columnИзделие;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Модель_изделияColumn {
                get {
                    return this.columnМодель_изделия;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ЦехColumn {
                get {
                    return this.columnЦех;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_ЦехаColumn {
                get {
                    return this.columnID_Цеха;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_ИзделияColumn {
                get {
                    return this.columnID_Изделия;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Лимитно_заборные_картыRow this[int index] {
                get {
                    return ((Лимитно_заборные_картыRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Лимитно_заборные_картыRowChangeEventHandler Лимитно_заборные_картыRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Лимитно_заборные_картыRowChangeEventHandler Лимитно_заборные_картыRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Лимитно_заборные_картыRowChangeEventHandler Лимитно_заборные_картыRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Лимитно_заборные_картыRowChangeEventHandler Лимитно_заборные_картыRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddЛимитно_заборные_картыRow(Лимитно_заборные_картыRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Лимитно_заборные_картыRow AddЛимитно_заборные_картыRow(int ID_Бригады, Модели_изделияRow parentМодели_изделияRowByFK__Лимитно_з__ID_Мо__10E07F16, System.DateTime Дата_составления, int Количество_изделий, string Бригада, string Изделие, string Модель_изделия, string Цех) {
                Лимитно_заборные_картыRow rowЛимитно_заборные_картыRow = ((Лимитно_заборные_картыRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ID_Бригады,
                        null,
                        Дата_составления,
                        Количество_изделий,
                        Бригада,
                        Изделие,
                        Модель_изделия,
                        Цех,
                        null,
                        null};
                if ((parentМодели_изделияRowByFK__Лимитно_з__ID_Мо__10E07F16 != null)) {
                    columnValuesArray[2] = parentМодели_изделияRowByFK__Лимитно_з__ID_Мо__10E07F16[0];
                }
                rowЛимитно_заборные_картыRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowЛимитно_заборные_картыRow);
                return rowЛимитно_заборные_картыRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Лимитно_заборные_картыRow FindByID_Лимитно_заборной_карты(int ID_Лимитно_заборной_карты) {
                return ((Лимитно_заборные_картыRow)(this.Rows.Find(new object[] {
                            ID_Лимитно_заборной_карты})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Лимитно_заборные_картыDataTable cln = ((Лимитно_заборные_картыDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Лимитно_заборные_картыDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_Лимитно_заборной_карты = base.Columns["ID_Лимитно_заборной_карты"];
                this.columnID_Бригады = base.Columns["ID_Бригады"];
                this.columnID_Модели_изделия = base.Columns["ID_Модели_изделия"];
                this.columnДата_составления = base.Columns["Дата_составления"];
                this.columnКоличество_изделий = base.Columns["Количество_изделий"];
                this.columnБригада = base.Columns["Бригада"];
                this.columnИзделие = base.Columns["Изделие"];
                this.columnМодель_изделия = base.Columns["Модель_изделия"];
                this.columnЦех = base.Columns["Цех"];
                this.columnID_Цеха = base.Columns["ID_Цеха"];
                this.columnID_Изделия = base.Columns["ID_Изделия"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_Лимитно_заборной_карты = new global::System.Data.DataColumn("ID_Лимитно_заборной_карты", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Лимитно_заборной_карты);
                this.columnID_Бригады = new global::System.Data.DataColumn("ID_Бригады", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Бригады);
                this.columnID_Модели_изделия = new global::System.Data.DataColumn("ID_Модели_изделия", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Модели_изделия);
                this.columnДата_составления = new global::System.Data.DataColumn("Дата_составления", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_составления);
                this.columnКоличество_изделий = new global::System.Data.DataColumn("Количество_изделий", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКоличество_изделий);
                this.columnБригада = new global::System.Data.DataColumn("Бригада", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnБригада);
                this.columnИзделие = new global::System.Data.DataColumn("Изделие", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИзделие);
                this.columnМодель_изделия = new global::System.Data.DataColumn("Модель_изделия", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМодель_изделия);
                this.columnЦех = new global::System.Data.DataColumn("Цех", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЦех);
                this.columnID_Цеха = new global::System.Data.DataColumn("ID_Цеха", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Цеха);
                this.columnID_Изделия = new global::System.Data.DataColumn("ID_Изделия", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Изделия);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Лимитно_заборной_карты}, true));
                this.columnID_Лимитно_заборной_карты.AutoIncrement = true;
                this.columnID_Лимитно_заборной_карты.AutoIncrementSeed = -1;
                this.columnID_Лимитно_заборной_карты.AutoIncrementStep = -1;
                this.columnID_Лимитно_заборной_карты.AllowDBNull = false;
                this.columnID_Лимитно_заборной_карты.ReadOnly = true;
                this.columnID_Лимитно_заборной_карты.Unique = true;
                this.columnID_Бригады.AllowDBNull = false;
                this.columnID_Модели_изделия.AllowDBNull = false;
                this.columnДата_составления.AllowDBNull = false;
                this.columnКоличество_изделий.AllowDBNull = false;
                this.columnБригада.AllowDBNull = false;
                this.columnБригада.MaxLength = 30;
                this.columnИзделие.AllowDBNull = false;
                this.columnИзделие.MaxLength = 80;
                this.columnМодель_изделия.AllowDBNull = false;
                this.columnМодель_изделия.MaxLength = 15;
                this.columnЦех.AllowDBNull = false;
                this.columnЦех.MaxLength = 30;
                this.columnID_Цеха.AutoIncrement = true;
                this.columnID_Цеха.AutoIncrementSeed = -1;
                this.columnID_Цеха.AutoIncrementStep = -1;
                this.columnID_Цеха.AllowDBNull = false;
                this.columnID_Цеха.ReadOnly = true;
                this.columnID_Изделия.AutoIncrement = true;
                this.columnID_Изделия.AutoIncrementSeed = -1;
                this.columnID_Изделия.AutoIncrementStep = -1;
                this.columnID_Изделия.AllowDBNull = false;
                this.columnID_Изделия.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Лимитно_заборные_картыRow NewЛимитно_заборные_картыRow() {
                return ((Лимитно_заборные_картыRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Лимитно_заборные_картыRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Лимитно_заборные_картыRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Лимитно_заборные_картыRowChanged != null)) {
                    this.Лимитно_заборные_картыRowChanged(this, new Лимитно_заборные_картыRowChangeEvent(((Лимитно_заборные_картыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Лимитно_заборные_картыRowChanging != null)) {
                    this.Лимитно_заборные_картыRowChanging(this, new Лимитно_заборные_картыRowChangeEvent(((Лимитно_заборные_картыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Лимитно_заборные_картыRowDeleted != null)) {
                    this.Лимитно_заборные_картыRowDeleted(this, new Лимитно_заборные_картыRowChangeEvent(((Лимитно_заборные_картыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Лимитно_заборные_картыRowDeleting != null)) {
                    this.Лимитно_заборные_картыRowDeleting(this, new Лимитно_заборные_картыRowChangeEvent(((Лимитно_заборные_картыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveЛимитно_заборные_картыRow(Лимитно_заборные_картыRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Лимитно_заборные_картыDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ВодителиDataTable : global::System.Data.TypedTableBase<ВодителиRow> {
            
            private global::System.Data.DataColumn columnID_Водителя;
            
            private global::System.Data.DataColumn columnФИО;
            
            private global::System.Data.DataColumn columnНомер_водительского_удостоверения;
            
            private global::System.Data.DataColumn columnДата_выдачи_удостоверения;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВодителиDataTable() {
                this.TableName = "Водители";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ВодителиDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ВодителиDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_ВодителяColumn {
                get {
                    return this.columnID_Водителя;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ФИОColumn {
                get {
                    return this.columnФИО;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Номер_водительского_удостоверенияColumn {
                get {
                    return this.columnНомер_водительского_удостоверения;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Дата_выдачи_удостоверенияColumn {
                get {
                    return this.columnДата_выдачи_удостоверения;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВодителиRow this[int index] {
                get {
                    return ((ВодителиRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ВодителиRowChangeEventHandler ВодителиRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ВодителиRowChangeEventHandler ВодителиRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ВодителиRowChangeEventHandler ВодителиRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ВодителиRowChangeEventHandler ВодителиRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddВодителиRow(ВодителиRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВодителиRow AddВодителиRow(string ФИО, string Номер_водительского_удостоверения, System.DateTime Дата_выдачи_удостоверения) {
                ВодителиRow rowВодителиRow = ((ВодителиRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ФИО,
                        Номер_водительского_удостоверения,
                        Дата_выдачи_удостоверения};
                rowВодителиRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowВодителиRow);
                return rowВодителиRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВодителиRow FindByID_Водителя(int ID_Водителя) {
                return ((ВодителиRow)(this.Rows.Find(new object[] {
                            ID_Водителя})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ВодителиDataTable cln = ((ВодителиDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ВодителиDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_Водителя = base.Columns["ID_Водителя"];
                this.columnФИО = base.Columns["ФИО"];
                this.columnНомер_водительского_удостоверения = base.Columns["Номер_водительского_удостоверения"];
                this.columnДата_выдачи_удостоверения = base.Columns["Дата_выдачи_удостоверения"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_Водителя = new global::System.Data.DataColumn("ID_Водителя", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Водителя);
                this.columnФИО = new global::System.Data.DataColumn("ФИО", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФИО);
                this.columnНомер_водительского_удостоверения = new global::System.Data.DataColumn("Номер_водительского_удостоверения", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНомер_водительского_удостоверения);
                this.columnДата_выдачи_удостоверения = new global::System.Data.DataColumn("Дата_выдачи_удостоверения", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_выдачи_удостоверения);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Водителя}, true));
                this.columnID_Водителя.AutoIncrement = true;
                this.columnID_Водителя.AutoIncrementSeed = -1;
                this.columnID_Водителя.AutoIncrementStep = -1;
                this.columnID_Водителя.AllowDBNull = false;
                this.columnID_Водителя.ReadOnly = true;
                this.columnID_Водителя.Unique = true;
                this.columnФИО.AllowDBNull = false;
                this.columnФИО.MaxLength = 50;
                this.columnНомер_водительского_удостоверения.AllowDBNull = false;
                this.columnНомер_водительского_удостоверения.MaxLength = 10;
                this.columnДата_выдачи_удостоверения.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВодителиRow NewВодителиRow() {
                return ((ВодителиRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ВодителиRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ВодителиRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ВодителиRowChanged != null)) {
                    this.ВодителиRowChanged(this, new ВодителиRowChangeEvent(((ВодителиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ВодителиRowChanging != null)) {
                    this.ВодителиRowChanging(this, new ВодителиRowChangeEvent(((ВодителиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ВодителиRowDeleted != null)) {
                    this.ВодителиRowDeleted(this, new ВодителиRowChangeEvent(((ВодителиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ВодителиRowDeleting != null)) {
                    this.ВодителиRowDeleting(this, new ВодителиRowChangeEvent(((ВодителиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveВодителиRow(ВодителиRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ВодителиDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Товарные_накладныеDataTable : global::System.Data.TypedTableBase<Товарные_накладныеRow> {
            
            private global::System.Data.DataColumn columnID_Товарной_накладной;
            
            private global::System.Data.DataColumn columnДата_отпуска;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарные_накладныеDataTable() {
                this.TableName = "Товарные_накладные";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Товарные_накладныеDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Товарные_накладныеDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Товарной_накладнойColumn {
                get {
                    return this.columnID_Товарной_накладной;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Дата_отпускаColumn {
                get {
                    return this.columnДата_отпуска;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарные_накладныеRow this[int index] {
                get {
                    return ((Товарные_накладныеRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Товарные_накладныеRowChangeEventHandler Товарные_накладныеRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Товарные_накладныеRowChangeEventHandler Товарные_накладныеRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Товарные_накладныеRowChangeEventHandler Товарные_накладныеRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Товарные_накладныеRowChangeEventHandler Товарные_накладныеRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddТоварные_накладныеRow(Товарные_накладныеRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарные_накладныеRow AddТоварные_накладныеRow(System.DateTime Дата_отпуска) {
                Товарные_накладныеRow rowТоварные_накладныеRow = ((Товарные_накладныеRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Дата_отпуска};
                rowТоварные_накладныеRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowТоварные_накладныеRow);
                return rowТоварные_накладныеRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарные_накладныеRow FindByID_Товарной_накладной(int ID_Товарной_накладной) {
                return ((Товарные_накладныеRow)(this.Rows.Find(new object[] {
                            ID_Товарной_накладной})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Товарные_накладныеDataTable cln = ((Товарные_накладныеDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Товарные_накладныеDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_Товарной_накладной = base.Columns["ID_Товарной_накладной"];
                this.columnДата_отпуска = base.Columns["Дата_отпуска"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_Товарной_накладной = new global::System.Data.DataColumn("ID_Товарной_накладной", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Товарной_накладной);
                this.columnДата_отпуска = new global::System.Data.DataColumn("Дата_отпуска", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_отпуска);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Товарной_накладной}, true));
                this.columnID_Товарной_накладной.AutoIncrement = true;
                this.columnID_Товарной_накладной.AutoIncrementSeed = -1;
                this.columnID_Товарной_накладной.AutoIncrementStep = -1;
                this.columnID_Товарной_накладной.AllowDBNull = false;
                this.columnID_Товарной_накладной.ReadOnly = true;
                this.columnID_Товарной_накладной.Unique = true;
                this.columnДата_отпуска.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарные_накладныеRow NewТоварные_накладныеRow() {
                return ((Товарные_накладныеRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Товарные_накладныеRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Товарные_накладныеRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Товарные_накладныеRowChanged != null)) {
                    this.Товарные_накладныеRowChanged(this, new Товарные_накладныеRowChangeEvent(((Товарные_накладныеRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Товарные_накладныеRowChanging != null)) {
                    this.Товарные_накладныеRowChanging(this, new Товарные_накладныеRowChangeEvent(((Товарные_накладныеRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Товарные_накладныеRowDeleted != null)) {
                    this.Товарные_накладныеRowDeleted(this, new Товарные_накладныеRowChangeEvent(((Товарные_накладныеRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Товарные_накладныеRowDeleting != null)) {
                    this.Товарные_накладныеRowDeleting(this, new Товарные_накладныеRowChangeEvent(((Товарные_накладныеRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveТоварные_накладныеRow(Товарные_накладныеRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Товарные_накладныеDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Расчётные_картыDataTable : global::System.Data.TypedTableBase<Расчётные_картыRow> {
            
            private global::System.Data.DataColumn columnID_Расчётной_карты;
            
            private global::System.Data.DataColumn columnID_Бригады;
            
            private global::System.Data.DataColumn columnID_Модели_изделия;
            
            private global::System.Data.DataColumn columnНомер_заказа;
            
            private global::System.Data.DataColumn columnДата_отпуска_ткани;
            
            private global::System.Data.DataColumn columnИзделие;
            
            private global::System.Data.DataColumn columnМодель_изделия;
            
            private global::System.Data.DataColumn columnЦех;
            
            private global::System.Data.DataColumn columnБригада;
            
            private global::System.Data.DataColumn columnID_Изделия;
            
            private global::System.Data.DataColumn columnID_Цеха;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Расчётные_картыDataTable() {
                this.TableName = "Расчётные_карты";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Расчётные_картыDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Расчётные_картыDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Расчётной_картыColumn {
                get {
                    return this.columnID_Расчётной_карты;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_БригадыColumn {
                get {
                    return this.columnID_Бригады;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Модели_изделияColumn {
                get {
                    return this.columnID_Модели_изделия;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Номер_заказаColumn {
                get {
                    return this.columnНомер_заказа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Дата_отпуска_тканиColumn {
                get {
                    return this.columnДата_отпуска_ткани;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ИзделиеColumn {
                get {
                    return this.columnИзделие;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Модель_изделияColumn {
                get {
                    return this.columnМодель_изделия;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ЦехColumn {
                get {
                    return this.columnЦех;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn БригадаColumn {
                get {
                    return this.columnБригада;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_ИзделияColumn {
                get {
                    return this.columnID_Изделия;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_ЦехаColumn {
                get {
                    return this.columnID_Цеха;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Расчётные_картыRow this[int index] {
                get {
                    return ((Расчётные_картыRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Расчётные_картыRowChangeEventHandler Расчётные_картыRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Расчётные_картыRowChangeEventHandler Расчётные_картыRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Расчётные_картыRowChangeEventHandler Расчётные_картыRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Расчётные_картыRowChangeEventHandler Расчётные_картыRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddРасчётные_картыRow(Расчётные_картыRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Расчётные_картыRow AddРасчётные_картыRow(int ID_Бригады, Модели_изделияRow parentМодели_изделияRowByFK__Расчётные__ID_Мо__5B78929E, string Номер_заказа, System.DateTime Дата_отпуска_ткани, string Изделие, string Модель_изделия, string Цех, string Бригада) {
                Расчётные_картыRow rowРасчётные_картыRow = ((Расчётные_картыRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ID_Бригады,
                        null,
                        Номер_заказа,
                        Дата_отпуска_ткани,
                        Изделие,
                        Модель_изделия,
                        Цех,
                        Бригада,
                        null,
                        null};
                if ((parentМодели_изделияRowByFK__Расчётные__ID_Мо__5B78929E != null)) {
                    columnValuesArray[2] = parentМодели_изделияRowByFK__Расчётные__ID_Мо__5B78929E[0];
                }
                rowРасчётные_картыRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowРасчётные_картыRow);
                return rowРасчётные_картыRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Расчётные_картыRow FindByID_Расчётной_карты(int ID_Расчётной_карты) {
                return ((Расчётные_картыRow)(this.Rows.Find(new object[] {
                            ID_Расчётной_карты})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Расчётные_картыDataTable cln = ((Расчётные_картыDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Расчётные_картыDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_Расчётной_карты = base.Columns["ID_Расчётной_карты"];
                this.columnID_Бригады = base.Columns["ID_Бригады"];
                this.columnID_Модели_изделия = base.Columns["ID_Модели_изделия"];
                this.columnНомер_заказа = base.Columns["Номер_заказа"];
                this.columnДата_отпуска_ткани = base.Columns["Дата_отпуска_ткани"];
                this.columnИзделие = base.Columns["Изделие"];
                this.columnМодель_изделия = base.Columns["Модель_изделия"];
                this.columnЦех = base.Columns["Цех"];
                this.columnБригада = base.Columns["Бригада"];
                this.columnID_Изделия = base.Columns["ID_Изделия"];
                this.columnID_Цеха = base.Columns["ID_Цеха"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_Расчётной_карты = new global::System.Data.DataColumn("ID_Расчётной_карты", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Расчётной_карты);
                this.columnID_Бригады = new global::System.Data.DataColumn("ID_Бригады", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Бригады);
                this.columnID_Модели_изделия = new global::System.Data.DataColumn("ID_Модели_изделия", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Модели_изделия);
                this.columnНомер_заказа = new global::System.Data.DataColumn("Номер_заказа", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНомер_заказа);
                this.columnДата_отпуска_ткани = new global::System.Data.DataColumn("Дата_отпуска_ткани", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_отпуска_ткани);
                this.columnИзделие = new global::System.Data.DataColumn("Изделие", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИзделие);
                this.columnМодель_изделия = new global::System.Data.DataColumn("Модель_изделия", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМодель_изделия);
                this.columnЦех = new global::System.Data.DataColumn("Цех", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЦех);
                this.columnБригада = new global::System.Data.DataColumn("Бригада", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnБригада);
                this.columnID_Изделия = new global::System.Data.DataColumn("ID_Изделия", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Изделия);
                this.columnID_Цеха = new global::System.Data.DataColumn("ID_Цеха", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Цеха);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Расчётной_карты}, true));
                this.columnID_Расчётной_карты.AutoIncrement = true;
                this.columnID_Расчётной_карты.AutoIncrementSeed = -1;
                this.columnID_Расчётной_карты.AutoIncrementStep = -1;
                this.columnID_Расчётной_карты.AllowDBNull = false;
                this.columnID_Расчётной_карты.ReadOnly = true;
                this.columnID_Расчётной_карты.Unique = true;
                this.columnID_Бригады.AllowDBNull = false;
                this.columnID_Модели_изделия.AllowDBNull = false;
                this.columnНомер_заказа.AllowDBNull = false;
                this.columnНомер_заказа.MaxLength = 15;
                this.columnДата_отпуска_ткани.AllowDBNull = false;
                this.columnИзделие.AllowDBNull = false;
                this.columnИзделие.MaxLength = 80;
                this.columnМодель_изделия.AllowDBNull = false;
                this.columnМодель_изделия.MaxLength = 15;
                this.columnЦех.AllowDBNull = false;
                this.columnЦех.MaxLength = 30;
                this.columnБригада.AllowDBNull = false;
                this.columnБригада.MaxLength = 30;
                this.columnID_Изделия.AutoIncrement = true;
                this.columnID_Изделия.AutoIncrementSeed = -1;
                this.columnID_Изделия.AutoIncrementStep = -1;
                this.columnID_Изделия.AllowDBNull = false;
                this.columnID_Изделия.ReadOnly = true;
                this.columnID_Цеха.AutoIncrement = true;
                this.columnID_Цеха.AutoIncrementSeed = -1;
                this.columnID_Цеха.AutoIncrementStep = -1;
                this.columnID_Цеха.AllowDBNull = false;
                this.columnID_Цеха.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Расчётные_картыRow NewРасчётные_картыRow() {
                return ((Расчётные_картыRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Расчётные_картыRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Расчётные_картыRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Расчётные_картыRowChanged != null)) {
                    this.Расчётные_картыRowChanged(this, new Расчётные_картыRowChangeEvent(((Расчётные_картыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Расчётные_картыRowChanging != null)) {
                    this.Расчётные_картыRowChanging(this, new Расчётные_картыRowChangeEvent(((Расчётные_картыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Расчётные_картыRowDeleted != null)) {
                    this.Расчётные_картыRowDeleted(this, new Расчётные_картыRowChangeEvent(((Расчётные_картыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Расчётные_картыRowDeleting != null)) {
                    this.Расчётные_картыRowDeleting(this, new Расчётные_картыRowChangeEvent(((Расчётные_картыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveРасчётные_картыRow(Расчётные_картыRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Расчётные_картыDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class КонтрагентыDataTable : global::System.Data.TypedTableBase<КонтрагентыRow> {
            
            private global::System.Data.DataColumn columnID_Контрагента;
            
            private global::System.Data.DataColumn columnУНП;
            
            private global::System.Data.DataColumn columnАдрес;
            
            private global::System.Data.DataColumn columnНаименование;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КонтрагентыDataTable() {
                this.TableName = "Контрагенты";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal КонтрагентыDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected КонтрагентыDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_КонтрагентаColumn {
                get {
                    return this.columnID_Контрагента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn УНПColumn {
                get {
                    return this.columnУНП;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn АдресColumn {
                get {
                    return this.columnАдрес;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НаименованиеColumn {
                get {
                    return this.columnНаименование;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КонтрагентыRow this[int index] {
                get {
                    return ((КонтрагентыRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event КонтрагентыRowChangeEventHandler КонтрагентыRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event КонтрагентыRowChangeEventHandler КонтрагентыRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event КонтрагентыRowChangeEventHandler КонтрагентыRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event КонтрагентыRowChangeEventHandler КонтрагентыRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddКонтрагентыRow(КонтрагентыRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КонтрагентыRow AddКонтрагентыRow(string УНП, string Адрес, string Наименование) {
                КонтрагентыRow rowКонтрагентыRow = ((КонтрагентыRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        УНП,
                        Адрес,
                        Наименование};
                rowКонтрагентыRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowКонтрагентыRow);
                return rowКонтрагентыRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КонтрагентыRow FindByID_Контрагента(int ID_Контрагента) {
                return ((КонтрагентыRow)(this.Rows.Find(new object[] {
                            ID_Контрагента})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                КонтрагентыDataTable cln = ((КонтрагентыDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new КонтрагентыDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_Контрагента = base.Columns["ID_Контрагента"];
                this.columnУНП = base.Columns["УНП"];
                this.columnАдрес = base.Columns["Адрес"];
                this.columnНаименование = base.Columns["Наименование"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_Контрагента = new global::System.Data.DataColumn("ID_Контрагента", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Контрагента);
                this.columnУНП = new global::System.Data.DataColumn("УНП", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnУНП);
                this.columnАдрес = new global::System.Data.DataColumn("Адрес", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnАдрес);
                this.columnНаименование = new global::System.Data.DataColumn("Наименование", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Контрагента}, true));
                this.columnID_Контрагента.AutoIncrement = true;
                this.columnID_Контрагента.AutoIncrementSeed = -1;
                this.columnID_Контрагента.AutoIncrementStep = -1;
                this.columnID_Контрагента.AllowDBNull = false;
                this.columnID_Контрагента.ReadOnly = true;
                this.columnID_Контрагента.Unique = true;
                this.columnУНП.AllowDBNull = false;
                this.columnУНП.MaxLength = 9;
                this.columnАдрес.AllowDBNull = false;
                this.columnАдрес.MaxLength = 150;
                this.columnНаименование.AllowDBNull = false;
                this.columnНаименование.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КонтрагентыRow NewКонтрагентыRow() {
                return ((КонтрагентыRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new КонтрагентыRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(КонтрагентыRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.КонтрагентыRowChanged != null)) {
                    this.КонтрагентыRowChanged(this, new КонтрагентыRowChangeEvent(((КонтрагентыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.КонтрагентыRowChanging != null)) {
                    this.КонтрагентыRowChanging(this, new КонтрагентыRowChangeEvent(((КонтрагентыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.КонтрагентыRowDeleted != null)) {
                    this.КонтрагентыRowDeleted(this, new КонтрагентыRowChangeEvent(((КонтрагентыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.КонтрагентыRowDeleting != null)) {
                    this.КонтрагентыRowDeleting(this, new КонтрагентыRowChangeEvent(((КонтрагентыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveКонтрагентыRow(КонтрагентыRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "КонтрагентыDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Контрагенты_товарно_транспортной_накладнойDataTable : global::System.Data.TypedTableBase<Контрагенты_товарно_транспортной_накладнойRow> {
            
            private global::System.Data.DataColumn columnID_Контрагента_товарно_транспортной_накладной;
            
            private global::System.Data.DataColumn columnID_Товарно_транспортной_накладной;
            
            private global::System.Data.DataColumn columnID_Контрагента;
            
            private global::System.Data.DataColumn columnТип_контрагента;
            
            private global::System.Data.DataColumn columnУНП;
            
            private global::System.Data.DataColumn columnАдрес;
            
            private global::System.Data.DataColumn columnНаименование;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Контрагенты_товарно_транспортной_накладнойDataTable() {
                this.TableName = "Контрагенты_товарно_транспортной_накладной";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Контрагенты_товарно_транспортной_накладнойDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Контрагенты_товарно_транспортной_накладнойDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Контрагента_товарно_транспортной_накладнойColumn {
                get {
                    return this.columnID_Контрагента_товарно_транспортной_накладной;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Товарно_транспортной_накладнойColumn {
                get {
                    return this.columnID_Товарно_транспортной_накладной;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_КонтрагентаColumn {
                get {
                    return this.columnID_Контрагента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Тип_контрагентаColumn {
                get {
                    return this.columnТип_контрагента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn УНПColumn {
                get {
                    return this.columnУНП;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn АдресColumn {
                get {
                    return this.columnАдрес;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НаименованиеColumn {
                get {
                    return this.columnНаименование;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Контрагенты_товарно_транспортной_накладнойRow this[int index] {
                get {
                    return ((Контрагенты_товарно_транспортной_накладнойRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Контрагенты_товарно_транспортной_накладнойRowChangeEventHandler Контрагенты_товарно_транспортной_накладнойRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Контрагенты_товарно_транспортной_накладнойRowChangeEventHandler Контрагенты_товарно_транспортной_накладнойRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Контрагенты_товарно_транспортной_накладнойRowChangeEventHandler Контрагенты_товарно_транспортной_накладнойRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Контрагенты_товарно_транспортной_накладнойRowChangeEventHandler Контрагенты_товарно_транспортной_накладнойRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddКонтрагенты_товарно_транспортной_накладнойRow(Контрагенты_товарно_транспортной_накладнойRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Контрагенты_товарно_транспортной_накладнойRow AddКонтрагенты_товарно_транспортной_накладнойRow(Товарно_транспортные_накладныеRow parentТоварно_транспортные_накладныеRowByFK__Контраген__ID_То__50C5FA01, КонтрагентыRow parentКонтрагентыRowByFK__Контраген__ID_Ко__51BA1E3A, string Тип_контрагента, string УНП, string Адрес, string Наименование) {
                Контрагенты_товарно_транспортной_накладнойRow rowКонтрагенты_товарно_транспортной_накладнойRow = ((Контрагенты_товарно_транспортной_накладнойRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        Тип_контрагента,
                        УНП,
                        Адрес,
                        Наименование};
                if ((parentТоварно_транспортные_накладныеRowByFK__Контраген__ID_То__50C5FA01 != null)) {
                    columnValuesArray[1] = parentТоварно_транспортные_накладныеRowByFK__Контраген__ID_То__50C5FA01[0];
                }
                if ((parentКонтрагентыRowByFK__Контраген__ID_Ко__51BA1E3A != null)) {
                    columnValuesArray[2] = parentКонтрагентыRowByFK__Контраген__ID_Ко__51BA1E3A[0];
                }
                rowКонтрагенты_товарно_транспортной_накладнойRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowКонтрагенты_товарно_транспортной_накладнойRow);
                return rowКонтрагенты_товарно_транспортной_накладнойRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Контрагенты_товарно_транспортной_накладнойRow FindByID_Контрагента_товарно_транспортной_накладной(int ID_Контрагента_товарно_транспортной_накладной) {
                return ((Контрагенты_товарно_транспортной_накладнойRow)(this.Rows.Find(new object[] {
                            ID_Контрагента_товарно_транспортной_накладной})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Контрагенты_товарно_транспортной_накладнойDataTable cln = ((Контрагенты_товарно_транспортной_накладнойDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Контрагенты_товарно_транспортной_накладнойDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_Контрагента_товарно_транспортной_накладной = base.Columns["ID_Контрагента_товарно_транспортной_накладной"];
                this.columnID_Товарно_транспортной_накладной = base.Columns["ID_Товарно_транспортной_накладной"];
                this.columnID_Контрагента = base.Columns["ID_Контрагента"];
                this.columnТип_контрагента = base.Columns["Тип_контрагента"];
                this.columnУНП = base.Columns["УНП"];
                this.columnАдрес = base.Columns["Адрес"];
                this.columnНаименование = base.Columns["Наименование"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_Контрагента_товарно_транспортной_накладной = new global::System.Data.DataColumn("ID_Контрагента_товарно_транспортной_накладной", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Контрагента_товарно_транспортной_накладной);
                this.columnID_Товарно_транспортной_накладной = new global::System.Data.DataColumn("ID_Товарно_транспортной_накладной", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Товарно_транспортной_накладной);
                this.columnID_Контрагента = new global::System.Data.DataColumn("ID_Контрагента", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Контрагента);
                this.columnТип_контрагента = new global::System.Data.DataColumn("Тип_контрагента", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnТип_контрагента);
                this.columnУНП = new global::System.Data.DataColumn("УНП", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnУНП);
                this.columnАдрес = new global::System.Data.DataColumn("Адрес", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnАдрес);
                this.columnНаименование = new global::System.Data.DataColumn("Наименование", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Контрагента_товарно_транспортной_накладной}, true));
                this.columnID_Контрагента_товарно_транспортной_накладной.AutoIncrement = true;
                this.columnID_Контрагента_товарно_транспортной_накладной.AutoIncrementSeed = -1;
                this.columnID_Контрагента_товарно_транспортной_накладной.AutoIncrementStep = -1;
                this.columnID_Контрагента_товарно_транспортной_накладной.AllowDBNull = false;
                this.columnID_Контрагента_товарно_транспортной_накладной.ReadOnly = true;
                this.columnID_Контрагента_товарно_транспортной_накладной.Unique = true;
                this.columnID_Товарно_транспортной_накладной.AllowDBNull = false;
                this.columnID_Контрагента.AllowDBNull = false;
                this.columnТип_контрагента.AllowDBNull = false;
                this.columnТип_контрагента.MaxLength = 20;
                this.columnУНП.AllowDBNull = false;
                this.columnУНП.MaxLength = 9;
                this.columnАдрес.AllowDBNull = false;
                this.columnАдрес.MaxLength = 150;
                this.columnНаименование.AllowDBNull = false;
                this.columnНаименование.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Контрагенты_товарно_транспортной_накладнойRow NewКонтрагенты_товарно_транспортной_накладнойRow() {
                return ((Контрагенты_товарно_транспортной_накладнойRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Контрагенты_товарно_транспортной_накладнойRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Контрагенты_товарно_транспортной_накладнойRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Контрагенты_товарно_транспортной_накладнойRowChanged != null)) {
                    this.Контрагенты_товарно_транспортной_накладнойRowChanged(this, new Контрагенты_товарно_транспортной_накладнойRowChangeEvent(((Контрагенты_товарно_транспортной_накладнойRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Контрагенты_товарно_транспортной_накладнойRowChanging != null)) {
                    this.Контрагенты_товарно_транспортной_накладнойRowChanging(this, new Контрагенты_товарно_транспортной_накладнойRowChangeEvent(((Контрагенты_товарно_транспортной_накладнойRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Контрагенты_товарно_транспортной_накладнойRowDeleted != null)) {
                    this.Контрагенты_товарно_транспортной_накладнойRowDeleted(this, new Контрагенты_товарно_транспортной_накладнойRowChangeEvent(((Контрагенты_товарно_транспортной_накладнойRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Контрагенты_товарно_транспортной_накладнойRowDeleting != null)) {
                    this.Контрагенты_товарно_транспортной_накладнойRowDeleting(this, new Контрагенты_товарно_транспортной_накладнойRowChangeEvent(((Контрагенты_товарно_транспортной_накладнойRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveКонтрагенты_товарно_транспортной_накладнойRow(Контрагенты_товарно_транспортной_накладнойRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Контрагенты_товарно_транспортной_накладнойDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Контрагенты_товарной_накладнойDataTable : global::System.Data.TypedTableBase<Контрагенты_товарной_накладнойRow> {
            
            private global::System.Data.DataColumn columnID_Контрагента_товарной_накладной;
            
            private global::System.Data.DataColumn columnID_Товарной_накладной;
            
            private global::System.Data.DataColumn columnID_Контрагента;
            
            private global::System.Data.DataColumn columnТип_контрагента;
            
            private global::System.Data.DataColumn columnУНП;
            
            private global::System.Data.DataColumn columnАдрес;
            
            private global::System.Data.DataColumn columnНаименование;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Контрагенты_товарной_накладнойDataTable() {
                this.TableName = "Контрагенты_товарной_накладной";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Контрагенты_товарной_накладнойDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Контрагенты_товарной_накладнойDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Контрагента_товарной_накладнойColumn {
                get {
                    return this.columnID_Контрагента_товарной_накладной;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Товарной_накладнойColumn {
                get {
                    return this.columnID_Товарной_накладной;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_КонтрагентаColumn {
                get {
                    return this.columnID_Контрагента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Тип_контрагентаColumn {
                get {
                    return this.columnТип_контрагента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn УНПColumn {
                get {
                    return this.columnУНП;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn АдресColumn {
                get {
                    return this.columnАдрес;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НаименованиеColumn {
                get {
                    return this.columnНаименование;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Контрагенты_товарной_накладнойRow this[int index] {
                get {
                    return ((Контрагенты_товарной_накладнойRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Контрагенты_товарной_накладнойRowChangeEventHandler Контрагенты_товарной_накладнойRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Контрагенты_товарной_накладнойRowChangeEventHandler Контрагенты_товарной_накладнойRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Контрагенты_товарной_накладнойRowChangeEventHandler Контрагенты_товарной_накладнойRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Контрагенты_товарной_накладнойRowChangeEventHandler Контрагенты_товарной_накладнойRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddКонтрагенты_товарной_накладнойRow(Контрагенты_товарной_накладнойRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Контрагенты_товарной_накладнойRow AddКонтрагенты_товарной_накладнойRow(Товарные_накладныеRow parentТоварные_накладныеRowByFK__Контраген__ID_То__4CF5691D, КонтрагентыRow parentКонтрагентыRowByFK__Контраген__ID_Ко__4DE98D56, string Тип_контрагента, string УНП, string Адрес, string Наименование) {
                Контрагенты_товарной_накладнойRow rowКонтрагенты_товарной_накладнойRow = ((Контрагенты_товарной_накладнойRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        Тип_контрагента,
                        УНП,
                        Адрес,
                        Наименование};
                if ((parentТоварные_накладныеRowByFK__Контраген__ID_То__4CF5691D != null)) {
                    columnValuesArray[1] = parentТоварные_накладныеRowByFK__Контраген__ID_То__4CF5691D[0];
                }
                if ((parentКонтрагентыRowByFK__Контраген__ID_Ко__4DE98D56 != null)) {
                    columnValuesArray[2] = parentКонтрагентыRowByFK__Контраген__ID_Ко__4DE98D56[0];
                }
                rowКонтрагенты_товарной_накладнойRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowКонтрагенты_товарной_накладнойRow);
                return rowКонтрагенты_товарной_накладнойRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Контрагенты_товарной_накладнойRow FindByID_Контрагента_товарной_накладной(int ID_Контрагента_товарной_накладной) {
                return ((Контрагенты_товарной_накладнойRow)(this.Rows.Find(new object[] {
                            ID_Контрагента_товарной_накладной})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Контрагенты_товарной_накладнойDataTable cln = ((Контрагенты_товарной_накладнойDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Контрагенты_товарной_накладнойDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_Контрагента_товарной_накладной = base.Columns["ID_Контрагента_товарной_накладной"];
                this.columnID_Товарной_накладной = base.Columns["ID_Товарной_накладной"];
                this.columnID_Контрагента = base.Columns["ID_Контрагента"];
                this.columnТип_контрагента = base.Columns["Тип_контрагента"];
                this.columnУНП = base.Columns["УНП"];
                this.columnАдрес = base.Columns["Адрес"];
                this.columnНаименование = base.Columns["Наименование"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_Контрагента_товарной_накладной = new global::System.Data.DataColumn("ID_Контрагента_товарной_накладной", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Контрагента_товарной_накладной);
                this.columnID_Товарной_накладной = new global::System.Data.DataColumn("ID_Товарной_накладной", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Товарной_накладной);
                this.columnID_Контрагента = new global::System.Data.DataColumn("ID_Контрагента", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Контрагента);
                this.columnТип_контрагента = new global::System.Data.DataColumn("Тип_контрагента", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnТип_контрагента);
                this.columnУНП = new global::System.Data.DataColumn("УНП", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnУНП);
                this.columnАдрес = new global::System.Data.DataColumn("Адрес", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnАдрес);
                this.columnНаименование = new global::System.Data.DataColumn("Наименование", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Контрагента_товарной_накладной}, true));
                this.columnID_Контрагента_товарной_накладной.AutoIncrement = true;
                this.columnID_Контрагента_товарной_накладной.AutoIncrementSeed = -1;
                this.columnID_Контрагента_товарной_накладной.AutoIncrementStep = -1;
                this.columnID_Контрагента_товарной_накладной.AllowDBNull = false;
                this.columnID_Контрагента_товарной_накладной.ReadOnly = true;
                this.columnID_Контрагента_товарной_накладной.Unique = true;
                this.columnID_Товарной_накладной.AllowDBNull = false;
                this.columnID_Контрагента.AllowDBNull = false;
                this.columnТип_контрагента.AllowDBNull = false;
                this.columnТип_контрагента.MaxLength = 20;
                this.columnУНП.AllowDBNull = false;
                this.columnУНП.MaxLength = 9;
                this.columnАдрес.AllowDBNull = false;
                this.columnАдрес.MaxLength = 150;
                this.columnНаименование.AllowDBNull = false;
                this.columnНаименование.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Контрагенты_товарной_накладнойRow NewКонтрагенты_товарной_накладнойRow() {
                return ((Контрагенты_товарной_накладнойRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Контрагенты_товарной_накладнойRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Контрагенты_товарной_накладнойRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Контрагенты_товарной_накладнойRowChanged != null)) {
                    this.Контрагенты_товарной_накладнойRowChanged(this, new Контрагенты_товарной_накладнойRowChangeEvent(((Контрагенты_товарной_накладнойRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Контрагенты_товарной_накладнойRowChanging != null)) {
                    this.Контрагенты_товарной_накладнойRowChanging(this, new Контрагенты_товарной_накладнойRowChangeEvent(((Контрагенты_товарной_накладнойRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Контрагенты_товарной_накладнойRowDeleted != null)) {
                    this.Контрагенты_товарной_накладнойRowDeleted(this, new Контрагенты_товарной_накладнойRowChangeEvent(((Контрагенты_товарной_накладнойRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Контрагенты_товарной_накладнойRowDeleting != null)) {
                    this.Контрагенты_товарной_накладнойRowDeleting(this, new Контрагенты_товарной_накладнойRowChangeEvent(((Контрагенты_товарной_накладнойRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveКонтрагенты_товарной_накладнойRow(Контрагенты_товарной_накладнойRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Контрагенты_товарной_накладнойDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Товарно_транспортные_накладныеDataTable : global::System.Data.TypedTableBase<Товарно_транспортные_накладныеRow> {
            
            private global::System.Data.DataColumn columnID_Товарно_транспортной_накладной;
            
            private global::System.Data.DataColumn columnID_Автомобиля;
            
            private global::System.Data.DataColumn columnID_Водителя;
            
            private global::System.Data.DataColumn columnДата_отпуска;
            
            private global::System.Data.DataColumn columnОснование_отпуска;
            
            private global::System.Data.DataColumn columnПереадресовка;
            
            private global::System.Data.DataColumn columnСпособ_погрузки;
            
            private global::System.Data.DataColumn columnСпособ_разгрузки;
            
            private global::System.Data.DataColumn columnМарка;
            
            private global::System.Data.DataColumn columnМодель;
            
            private global::System.Data.DataColumn columnРегистрационный_номер;
            
            private global::System.Data.DataColumn columnВладелец;
            
            private global::System.Data.DataColumn columnВодитель;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарно_транспортные_накладныеDataTable() {
                this.TableName = "Товарно_транспортные_накладные";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Товарно_транспортные_накладныеDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Товарно_транспортные_накладныеDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Товарно_транспортной_накладнойColumn {
                get {
                    return this.columnID_Товарно_транспортной_накладной;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_АвтомобиляColumn {
                get {
                    return this.columnID_Автомобиля;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_ВодителяColumn {
                get {
                    return this.columnID_Водителя;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Дата_отпускаColumn {
                get {
                    return this.columnДата_отпуска;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Основание_отпускаColumn {
                get {
                    return this.columnОснование_отпуска;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ПереадресовкаColumn {
                get {
                    return this.columnПереадресовка;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Способ_погрузкиColumn {
                get {
                    return this.columnСпособ_погрузки;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Способ_разгрузкиColumn {
                get {
                    return this.columnСпособ_разгрузки;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn МаркаColumn {
                get {
                    return this.columnМарка;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn МодельColumn {
                get {
                    return this.columnМодель;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Регистрационный_номерColumn {
                get {
                    return this.columnРегистрационный_номер;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ВладелецColumn {
                get {
                    return this.columnВладелец;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ВодительColumn {
                get {
                    return this.columnВодитель;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарно_транспортные_накладныеRow this[int index] {
                get {
                    return ((Товарно_транспортные_накладныеRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Товарно_транспортные_накладныеRowChangeEventHandler Товарно_транспортные_накладныеRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Товарно_транспортные_накладныеRowChangeEventHandler Товарно_транспортные_накладныеRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Товарно_транспортные_накладныеRowChangeEventHandler Товарно_транспортные_накладныеRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Товарно_транспортные_накладныеRowChangeEventHandler Товарно_транспортные_накладныеRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddТоварно_транспортные_накладныеRow(Товарно_транспортные_накладныеRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарно_транспортные_накладныеRow AddТоварно_транспортные_накладныеRow(АвтомобилиRow parentАвтомобилиRowByFK__Товарно_т__ID_Ав__3F9B6DFF, ВодителиRow parentВодителиRowByFK__Товарно_т__ID_Во__408F9238, System.DateTime Дата_отпуска, string Основание_отпуска, string Переадресовка, string Способ_погрузки, string Способ_разгрузки, string Марка, string Модель, string Регистрационный_номер, string Владелец, string Водитель) {
                Товарно_транспортные_накладныеRow rowТоварно_транспортные_накладныеRow = ((Товарно_транспортные_накладныеRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        Дата_отпуска,
                        Основание_отпуска,
                        Переадресовка,
                        Способ_погрузки,
                        Способ_разгрузки,
                        Марка,
                        Модель,
                        Регистрационный_номер,
                        Владелец,
                        Водитель};
                if ((parentАвтомобилиRowByFK__Товарно_т__ID_Ав__3F9B6DFF != null)) {
                    columnValuesArray[1] = parentАвтомобилиRowByFK__Товарно_т__ID_Ав__3F9B6DFF[0];
                }
                if ((parentВодителиRowByFK__Товарно_т__ID_Во__408F9238 != null)) {
                    columnValuesArray[2] = parentВодителиRowByFK__Товарно_т__ID_Во__408F9238[0];
                }
                rowТоварно_транспортные_накладныеRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowТоварно_транспортные_накладныеRow);
                return rowТоварно_транспортные_накладныеRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарно_транспортные_накладныеRow FindByID_Товарно_транспортной_накладной(int ID_Товарно_транспортной_накладной) {
                return ((Товарно_транспортные_накладныеRow)(this.Rows.Find(new object[] {
                            ID_Товарно_транспортной_накладной})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Товарно_транспортные_накладныеDataTable cln = ((Товарно_транспортные_накладныеDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Товарно_транспортные_накладныеDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_Товарно_транспортной_накладной = base.Columns["ID_Товарно_транспортной_накладной"];
                this.columnID_Автомобиля = base.Columns["ID_Автомобиля"];
                this.columnID_Водителя = base.Columns["ID_Водителя"];
                this.columnДата_отпуска = base.Columns["Дата_отпуска"];
                this.columnОснование_отпуска = base.Columns["Основание_отпуска"];
                this.columnПереадресовка = base.Columns["Переадресовка"];
                this.columnСпособ_погрузки = base.Columns["Способ_погрузки"];
                this.columnСпособ_разгрузки = base.Columns["Способ_разгрузки"];
                this.columnМарка = base.Columns["Марка"];
                this.columnМодель = base.Columns["Модель"];
                this.columnРегистрационный_номер = base.Columns["Регистрационный_номер"];
                this.columnВладелец = base.Columns["Владелец"];
                this.columnВодитель = base.Columns["Водитель"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_Товарно_транспортной_накладной = new global::System.Data.DataColumn("ID_Товарно_транспортной_накладной", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Товарно_транспортной_накладной);
                this.columnID_Автомобиля = new global::System.Data.DataColumn("ID_Автомобиля", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Автомобиля);
                this.columnID_Водителя = new global::System.Data.DataColumn("ID_Водителя", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Водителя);
                this.columnДата_отпуска = new global::System.Data.DataColumn("Дата_отпуска", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата_отпуска);
                this.columnОснование_отпуска = new global::System.Data.DataColumn("Основание_отпуска", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОснование_отпуска);
                this.columnПереадресовка = new global::System.Data.DataColumn("Переадресовка", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПереадресовка);
                this.columnСпособ_погрузки = new global::System.Data.DataColumn("Способ_погрузки", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСпособ_погрузки);
                this.columnСпособ_разгрузки = new global::System.Data.DataColumn("Способ_разгрузки", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСпособ_разгрузки);
                this.columnМарка = new global::System.Data.DataColumn("Марка", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМарка);
                this.columnМодель = new global::System.Data.DataColumn("Модель", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМодель);
                this.columnРегистрационный_номер = new global::System.Data.DataColumn("Регистрационный_номер", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnРегистрационный_номер);
                this.columnВладелец = new global::System.Data.DataColumn("Владелец", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВладелец);
                this.columnВодитель = new global::System.Data.DataColumn("Водитель", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВодитель);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Товарно_транспортной_накладной}, true));
                this.columnID_Товарно_транспортной_накладной.AutoIncrement = true;
                this.columnID_Товарно_транспортной_накладной.AutoIncrementSeed = -1;
                this.columnID_Товарно_транспортной_накладной.AutoIncrementStep = -1;
                this.columnID_Товарно_транспортной_накладной.AllowDBNull = false;
                this.columnID_Товарно_транспортной_накладной.ReadOnly = true;
                this.columnID_Товарно_транспортной_накладной.Unique = true;
                this.columnID_Автомобиля.AllowDBNull = false;
                this.columnID_Водителя.AllowDBNull = false;
                this.columnДата_отпуска.AllowDBNull = false;
                this.columnОснование_отпуска.AllowDBNull = false;
                this.columnОснование_отпуска.MaxLength = 40;
                this.columnПереадресовка.MaxLength = 150;
                this.columnСпособ_погрузки.AllowDBNull = false;
                this.columnСпособ_погрузки.MaxLength = 25;
                this.columnСпособ_разгрузки.AllowDBNull = false;
                this.columnСпособ_разгрузки.MaxLength = 25;
                this.columnМарка.AllowDBNull = false;
                this.columnМарка.MaxLength = 20;
                this.columnМодель.AllowDBNull = false;
                this.columnМодель.MaxLength = 30;
                this.columnРегистрационный_номер.AllowDBNull = false;
                this.columnРегистрационный_номер.MaxLength = 10;
                this.columnВладелец.AllowDBNull = false;
                this.columnВладелец.MaxLength = 80;
                this.columnВодитель.ReadOnly = true;
                this.columnВодитель.MaxLength = 61;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарно_транспортные_накладныеRow NewТоварно_транспортные_накладныеRow() {
                return ((Товарно_транспортные_накладныеRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Товарно_транспортные_накладныеRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Товарно_транспортные_накладныеRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Товарно_транспортные_накладныеRowChanged != null)) {
                    this.Товарно_транспортные_накладныеRowChanged(this, new Товарно_транспортные_накладныеRowChangeEvent(((Товарно_транспортные_накладныеRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Товарно_транспортные_накладныеRowChanging != null)) {
                    this.Товарно_транспортные_накладныеRowChanging(this, new Товарно_транспортные_накладныеRowChangeEvent(((Товарно_транспортные_накладныеRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Товарно_транспортные_накладныеRowDeleted != null)) {
                    this.Товарно_транспортные_накладныеRowDeleted(this, new Товарно_транспортные_накладныеRowChangeEvent(((Товарно_транспортные_накладныеRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Товарно_транспортные_накладныеRowDeleting != null)) {
                    this.Товарно_транспортные_накладныеRowDeleting(this, new Товарно_транспортные_накладныеRowChangeEvent(((Товарно_транспортные_накладныеRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveТоварно_транспортные_накладныеRow(Товарно_транспортные_накладныеRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Товарно_транспортные_накладныеDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Товарный_раздел_товарно_транспортной_накладнойDataTable : global::System.Data.TypedTableBase<Товарный_раздел_товарно_транспортной_накладнойRow> {
            
            private global::System.Data.DataColumn columnID_Товарного_раздела;
            
            private global::System.Data.DataColumn columnID_Товарно_транспортной_накладной;
            
            private global::System.Data.DataColumn columnID_Готовой_продукции_на_складе;
            
            private global::System.Data.DataColumn columnЕдиница_измерения;
            
            private global::System.Data.DataColumn columnКоличество;
            
            private global::System.Data.DataColumn columnЦена;
            
            private global::System.Data.DataColumn columnСтоимость;
            
            private global::System.Data.DataColumn columnСтавка_НДС;
            
            private global::System.Data.DataColumn columnСумма_НДС;
            
            private global::System.Data.DataColumn columnСтоимость_с_НДС;
            
            private global::System.Data.DataColumn columnКоличество_грузовых_мест;
            
            private global::System.Data.DataColumn columnМасса_груза;
            
            private global::System.Data.DataColumn columnID_Модели_изделия;
            
            private global::System.Data.DataColumn columnID_Изделия;
            
            private global::System.Data.DataColumn columnМодель_изделия;
            
            private global::System.Data.DataColumn columnНаименование;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарный_раздел_товарно_транспортной_накладнойDataTable() {
                this.TableName = "Товарный_раздел_товарно_транспортной_накладной";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Товарный_раздел_товарно_транспортной_накладнойDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Товарный_раздел_товарно_транспортной_накладнойDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Товарного_разделаColumn {
                get {
                    return this.columnID_Товарного_раздела;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Товарно_транспортной_накладнойColumn {
                get {
                    return this.columnID_Товарно_транспортной_накладной;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Готовой_продукции_на_складеColumn {
                get {
                    return this.columnID_Готовой_продукции_на_складе;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Единица_измеренияColumn {
                get {
                    return this.columnЕдиница_измерения;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КоличествоColumn {
                get {
                    return this.columnКоличество;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ЦенаColumn {
                get {
                    return this.columnЦена;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn СтоимостьColumn {
                get {
                    return this.columnСтоимость;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ставка_НДСColumn {
                get {
                    return this.columnСтавка_НДС;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Сумма_НДСColumn {
                get {
                    return this.columnСумма_НДС;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Стоимость_с_НДСColumn {
                get {
                    return this.columnСтоимость_с_НДС;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Количество_грузовых_местColumn {
                get {
                    return this.columnКоличество_грузовых_мест;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Масса_грузаColumn {
                get {
                    return this.columnМасса_груза;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Модели_изделияColumn {
                get {
                    return this.columnID_Модели_изделия;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_ИзделияColumn {
                get {
                    return this.columnID_Изделия;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Модель_изделияColumn {
                get {
                    return this.columnМодель_изделия;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НаименованиеColumn {
                get {
                    return this.columnНаименование;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарный_раздел_товарно_транспортной_накладнойRow this[int index] {
                get {
                    return ((Товарный_раздел_товарно_транспортной_накладнойRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Товарный_раздел_товарно_транспортной_накладнойRowChangeEventHandler Товарный_раздел_товарно_транспортной_накладнойRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Товарный_раздел_товарно_транспортной_накладнойRowChangeEventHandler Товарный_раздел_товарно_транспортной_накладнойRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Товарный_раздел_товарно_транспортной_накладнойRowChangeEventHandler Товарный_раздел_товарно_транспортной_накладнойRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Товарный_раздел_товарно_транспортной_накладнойRowChangeEventHandler Товарный_раздел_товарно_транспортной_накладнойRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddТоварный_раздел_товарно_транспортной_накладнойRow(Товарный_раздел_товарно_транспортной_накладнойRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарный_раздел_товарно_транспортной_накладнойRow AddТоварный_раздел_товарно_транспортной_накладнойRow(Товарно_транспортные_накладныеRow parentТоварно_транспортные_накладныеRowByFK__Товарный___Масса__473C8FC7, Склад_готовой_продукцииRow parentСклад_готовой_продукцииRowByСклад_готовой_продукции_Товарный_раздел_товарно_транспортной_накладной, string Единица_измерения, int Количество, decimal Цена, decimal Стоимость, int Ставка_НДС, int Сумма_НДС, int Стоимость_с_НДС, int Количество_грузовых_мест, int Масса_груза, int ID_Модели_изделия, string Модель_изделия, string Наименование) {
                Товарный_раздел_товарно_транспортной_накладнойRow rowТоварный_раздел_товарно_транспортной_накладнойRow = ((Товарный_раздел_товарно_транспортной_накладнойRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        Единица_измерения,
                        Количество,
                        Цена,
                        Стоимость,
                        Ставка_НДС,
                        Сумма_НДС,
                        Стоимость_с_НДС,
                        Количество_грузовых_мест,
                        Масса_груза,
                        ID_Модели_изделия,
                        null,
                        Модель_изделия,
                        Наименование};
                if ((parentТоварно_транспортные_накладныеRowByFK__Товарный___Масса__473C8FC7 != null)) {
                    columnValuesArray[1] = parentТоварно_транспортные_накладныеRowByFK__Товарный___Масса__473C8FC7[0];
                }
                if ((parentСклад_готовой_продукцииRowByСклад_готовой_продукции_Товарный_раздел_товарно_транспортной_накладной != null)) {
                    columnValuesArray[2] = parentСклад_готовой_продукцииRowByСклад_готовой_продукции_Товарный_раздел_товарно_транспортной_накладной[0];
                }
                rowТоварный_раздел_товарно_транспортной_накладнойRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowТоварный_раздел_товарно_транспортной_накладнойRow);
                return rowТоварный_раздел_товарно_транспортной_накладнойRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарный_раздел_товарно_транспортной_накладнойRow FindByID_Товарного_раздела(int ID_Товарного_раздела) {
                return ((Товарный_раздел_товарно_транспортной_накладнойRow)(this.Rows.Find(new object[] {
                            ID_Товарного_раздела})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Товарный_раздел_товарно_транспортной_накладнойDataTable cln = ((Товарный_раздел_товарно_транспортной_накладнойDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Товарный_раздел_товарно_транспортной_накладнойDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_Товарного_раздела = base.Columns["ID_Товарного_раздела"];
                this.columnID_Товарно_транспортной_накладной = base.Columns["ID_Товарно_транспортной_накладной"];
                this.columnID_Готовой_продукции_на_складе = base.Columns["ID_Готовой_продукции_на_складе"];
                this.columnЕдиница_измерения = base.Columns["Единица_измерения"];
                this.columnКоличество = base.Columns["Количество"];
                this.columnЦена = base.Columns["Цена"];
                this.columnСтоимость = base.Columns["Стоимость"];
                this.columnСтавка_НДС = base.Columns["Ставка_НДС"];
                this.columnСумма_НДС = base.Columns["Сумма_НДС"];
                this.columnСтоимость_с_НДС = base.Columns["Стоимость_с_НДС"];
                this.columnКоличество_грузовых_мест = base.Columns["Количество_грузовых_мест"];
                this.columnМасса_груза = base.Columns["Масса_груза"];
                this.columnID_Модели_изделия = base.Columns["ID_Модели_изделия"];
                this.columnID_Изделия = base.Columns["ID_Изделия"];
                this.columnМодель_изделия = base.Columns["Модель_изделия"];
                this.columnНаименование = base.Columns["Наименование"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_Товарного_раздела = new global::System.Data.DataColumn("ID_Товарного_раздела", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Товарного_раздела);
                this.columnID_Товарно_транспортной_накладной = new global::System.Data.DataColumn("ID_Товарно_транспортной_накладной", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Товарно_транспортной_накладной);
                this.columnID_Готовой_продукции_на_складе = new global::System.Data.DataColumn("ID_Готовой_продукции_на_складе", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Готовой_продукции_на_складе);
                this.columnЕдиница_измерения = new global::System.Data.DataColumn("Единица_измерения", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЕдиница_измерения);
                this.columnКоличество = new global::System.Data.DataColumn("Количество", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКоличество);
                this.columnЦена = new global::System.Data.DataColumn("Цена", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЦена);
                this.columnСтоимость = new global::System.Data.DataColumn("Стоимость", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСтоимость);
                this.columnСтавка_НДС = new global::System.Data.DataColumn("Ставка_НДС", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСтавка_НДС);
                this.columnСумма_НДС = new global::System.Data.DataColumn("Сумма_НДС", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСумма_НДС);
                this.columnСтоимость_с_НДС = new global::System.Data.DataColumn("Стоимость_с_НДС", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСтоимость_с_НДС);
                this.columnКоличество_грузовых_мест = new global::System.Data.DataColumn("Количество_грузовых_мест", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКоличество_грузовых_мест);
                this.columnМасса_груза = new global::System.Data.DataColumn("Масса_груза", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМасса_груза);
                this.columnID_Модели_изделия = new global::System.Data.DataColumn("ID_Модели_изделия", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Модели_изделия);
                this.columnID_Изделия = new global::System.Data.DataColumn("ID_Изделия", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Изделия);
                this.columnМодель_изделия = new global::System.Data.DataColumn("Модель_изделия", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМодель_изделия);
                this.columnНаименование = new global::System.Data.DataColumn("Наименование", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Товарного_раздела}, true));
                this.columnID_Товарного_раздела.AutoIncrement = true;
                this.columnID_Товарного_раздела.AutoIncrementSeed = -1;
                this.columnID_Товарного_раздела.AutoIncrementStep = -1;
                this.columnID_Товарного_раздела.AllowDBNull = false;
                this.columnID_Товарного_раздела.ReadOnly = true;
                this.columnID_Товарного_раздела.Unique = true;
                this.columnID_Товарно_транспортной_накладной.AllowDBNull = false;
                this.columnID_Готовой_продукции_на_складе.AllowDBNull = false;
                this.columnЕдиница_измерения.AllowDBNull = false;
                this.columnЕдиница_измерения.MaxLength = 5;
                this.columnКоличество.AllowDBNull = false;
                this.columnЦена.AllowDBNull = false;
                this.columnСтоимость.AllowDBNull = false;
                this.columnСтоимость_с_НДС.AllowDBNull = false;
                this.columnКоличество_грузовых_мест.AllowDBNull = false;
                this.columnID_Модели_изделия.AllowDBNull = false;
                this.columnID_Изделия.AutoIncrement = true;
                this.columnID_Изделия.AutoIncrementSeed = -1;
                this.columnID_Изделия.AutoIncrementStep = -1;
                this.columnID_Изделия.AllowDBNull = false;
                this.columnID_Изделия.ReadOnly = true;
                this.columnМодель_изделия.AllowDBNull = false;
                this.columnМодель_изделия.MaxLength = 15;
                this.columnНаименование.AllowDBNull = false;
                this.columnНаименование.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарный_раздел_товарно_транспортной_накладнойRow NewТоварный_раздел_товарно_транспортной_накладнойRow() {
                return ((Товарный_раздел_товарно_транспортной_накладнойRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Товарный_раздел_товарно_транспортной_накладнойRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Товарный_раздел_товарно_транспортной_накладнойRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Товарный_раздел_товарно_транспортной_накладнойRowChanged != null)) {
                    this.Товарный_раздел_товарно_транспортной_накладнойRowChanged(this, new Товарный_раздел_товарно_транспортной_накладнойRowChangeEvent(((Товарный_раздел_товарно_транспортной_накладнойRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Товарный_раздел_товарно_транспортной_накладнойRowChanging != null)) {
                    this.Товарный_раздел_товарно_транспортной_накладнойRowChanging(this, new Товарный_раздел_товарно_транспортной_накладнойRowChangeEvent(((Товарный_раздел_товарно_транспортной_накладнойRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Товарный_раздел_товарно_транспортной_накладнойRowDeleted != null)) {
                    this.Товарный_раздел_товарно_транспортной_накладнойRowDeleted(this, new Товарный_раздел_товарно_транспортной_накладнойRowChangeEvent(((Товарный_раздел_товарно_транспортной_накладнойRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Товарный_раздел_товарно_транспортной_накладнойRowDeleting != null)) {
                    this.Товарный_раздел_товарно_транспортной_накладнойRowDeleting(this, new Товарный_раздел_товарно_транспортной_накладнойRowChangeEvent(((Товарный_раздел_товарно_транспортной_накладнойRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveТоварный_раздел_товарно_транспортной_накладнойRow(Товарный_раздел_товарно_транспортной_накладнойRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Товарный_раздел_товарно_транспортной_накладнойDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class БригадыDataTable : global::System.Data.TypedTableBase<БригадыRow> {
            
            private global::System.Data.DataColumn columnID_Бригады;
            
            private global::System.Data.DataColumn columnID_Цеха;
            
            private global::System.Data.DataColumn columnЦех;
            
            private global::System.Data.DataColumn columnНаименование;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public БригадыDataTable() {
                this.TableName = "Бригады";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal БригадыDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected БригадыDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_БригадыColumn {
                get {
                    return this.columnID_Бригады;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_ЦехаColumn {
                get {
                    return this.columnID_Цеха;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ЦехColumn {
                get {
                    return this.columnЦех;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НаименованиеColumn {
                get {
                    return this.columnНаименование;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public БригадыRow this[int index] {
                get {
                    return ((БригадыRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event БригадыRowChangeEventHandler БригадыRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event БригадыRowChangeEventHandler БригадыRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event БригадыRowChangeEventHandler БригадыRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event БригадыRowChangeEventHandler БригадыRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddБригадыRow(БригадыRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public БригадыRow AddБригадыRow(ЦехаRow parentЦехаRowByFK__Бригады__ID_Цеха__5FB337D6, string Цех, string Наименование) {
                БригадыRow rowБригадыRow = ((БригадыRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Цех,
                        Наименование};
                if ((parentЦехаRowByFK__Бригады__ID_Цеха__5FB337D6 != null)) {
                    columnValuesArray[1] = parentЦехаRowByFK__Бригады__ID_Цеха__5FB337D6[0];
                }
                rowБригадыRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowБригадыRow);
                return rowБригадыRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public БригадыRow FindByID_Бригады(int ID_Бригады) {
                return ((БригадыRow)(this.Rows.Find(new object[] {
                            ID_Бригады})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                БригадыDataTable cln = ((БригадыDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new БригадыDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_Бригады = base.Columns["ID_Бригады"];
                this.columnID_Цеха = base.Columns["ID_Цеха"];
                this.columnЦех = base.Columns["Цех"];
                this.columnНаименование = base.Columns["Наименование"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_Бригады = new global::System.Data.DataColumn("ID_Бригады", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Бригады);
                this.columnID_Цеха = new global::System.Data.DataColumn("ID_Цеха", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Цеха);
                this.columnЦех = new global::System.Data.DataColumn("Цех", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЦех);
                this.columnНаименование = new global::System.Data.DataColumn("Наименование", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Бригады}, true));
                this.columnID_Бригады.AutoIncrement = true;
                this.columnID_Бригады.AutoIncrementSeed = -1;
                this.columnID_Бригады.AutoIncrementStep = -1;
                this.columnID_Бригады.AllowDBNull = false;
                this.columnID_Бригады.ReadOnly = true;
                this.columnID_Бригады.Unique = true;
                this.columnID_Цеха.AllowDBNull = false;
                this.columnЦех.AllowDBNull = false;
                this.columnЦех.MaxLength = 30;
                this.columnНаименование.AllowDBNull = false;
                this.columnНаименование.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public БригадыRow NewБригадыRow() {
                return ((БригадыRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new БригадыRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(БригадыRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.БригадыRowChanged != null)) {
                    this.БригадыRowChanged(this, new БригадыRowChangeEvent(((БригадыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.БригадыRowChanging != null)) {
                    this.БригадыRowChanging(this, new БригадыRowChangeEvent(((БригадыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.БригадыRowDeleted != null)) {
                    this.БригадыRowDeleted(this, new БригадыRowChangeEvent(((БригадыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.БригадыRowDeleting != null)) {
                    this.БригадыRowDeleting(this, new БригадыRowChangeEvent(((БригадыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveБригадыRow(БригадыRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "БригадыDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Маршрутные_листыDataTable : global::System.Data.TypedTableBase<Маршрутные_листыRow> {
            
            private global::System.Data.DataColumn columnID_Маршрутного_листа;
            
            private global::System.Data.DataColumn columnID_Модели_изделия;
            
            private global::System.Data.DataColumn columnНомер_заказа;
            
            private global::System.Data.DataColumn columnРост;
            
            private global::System.Data.DataColumn columnРазмер;
            
            private global::System.Data.DataColumn columnПолнота;
            
            private global::System.Data.DataColumn columnКод_цвета;
            
            private global::System.Data.DataColumn columnМодель_изделия;
            
            private global::System.Data.DataColumn columnID_Изделия;
            
            private global::System.Data.DataColumn columnНаименование;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Маршрутные_листыDataTable() {
                this.TableName = "Маршрутные_листы";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Маршрутные_листыDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Маршрутные_листыDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Маршрутного_листаColumn {
                get {
                    return this.columnID_Маршрутного_листа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Модели_изделияColumn {
                get {
                    return this.columnID_Модели_изделия;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Номер_заказаColumn {
                get {
                    return this.columnНомер_заказа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn РостColumn {
                get {
                    return this.columnРост;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn РазмерColumn {
                get {
                    return this.columnРазмер;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ПолнотаColumn {
                get {
                    return this.columnПолнота;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Код_цветаColumn {
                get {
                    return this.columnКод_цвета;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Модель_изделияColumn {
                get {
                    return this.columnМодель_изделия;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_ИзделияColumn {
                get {
                    return this.columnID_Изделия;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НаименованиеColumn {
                get {
                    return this.columnНаименование;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Маршрутные_листыRow this[int index] {
                get {
                    return ((Маршрутные_листыRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Маршрутные_листыRowChangeEventHandler Маршрутные_листыRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Маршрутные_листыRowChangeEventHandler Маршрутные_листыRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Маршрутные_листыRowChangeEventHandler Маршрутные_листыRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Маршрутные_листыRowChangeEventHandler Маршрутные_листыRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddМаршрутные_листыRow(Маршрутные_листыRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Маршрутные_листыRow AddМаршрутные_листыRow(Модели_изделияRow parentМодели_изделияRowByМодели_изделия_Маршрутные_листы, int Номер_заказа, int Рост, int Размер, int Полнота, int Код_цвета, string Модель_изделия, string Наименование) {
                Маршрутные_листыRow rowМаршрутные_листыRow = ((Маршрутные_листыRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Номер_заказа,
                        Рост,
                        Размер,
                        Полнота,
                        Код_цвета,
                        Модель_изделия,
                        null,
                        Наименование};
                if ((parentМодели_изделияRowByМодели_изделия_Маршрутные_листы != null)) {
                    columnValuesArray[1] = parentМодели_изделияRowByМодели_изделия_Маршрутные_листы[0];
                }
                rowМаршрутные_листыRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowМаршрутные_листыRow);
                return rowМаршрутные_листыRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Маршрутные_листыRow FindByID_Маршрутного_листа(int ID_Маршрутного_листа) {
                return ((Маршрутные_листыRow)(this.Rows.Find(new object[] {
                            ID_Маршрутного_листа})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Маршрутные_листыDataTable cln = ((Маршрутные_листыDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Маршрутные_листыDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_Маршрутного_листа = base.Columns["ID_Маршрутного_листа"];
                this.columnID_Модели_изделия = base.Columns["ID_Модели_изделия"];
                this.columnНомер_заказа = base.Columns["Номер_заказа"];
                this.columnРост = base.Columns["Рост"];
                this.columnРазмер = base.Columns["Размер"];
                this.columnПолнота = base.Columns["Полнота"];
                this.columnКод_цвета = base.Columns["Код_цвета"];
                this.columnМодель_изделия = base.Columns["Модель_изделия"];
                this.columnID_Изделия = base.Columns["ID_Изделия"];
                this.columnНаименование = base.Columns["Наименование"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_Маршрутного_листа = new global::System.Data.DataColumn("ID_Маршрутного_листа", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Маршрутного_листа);
                this.columnID_Модели_изделия = new global::System.Data.DataColumn("ID_Модели_изделия", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Модели_изделия);
                this.columnНомер_заказа = new global::System.Data.DataColumn("Номер_заказа", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНомер_заказа);
                this.columnРост = new global::System.Data.DataColumn("Рост", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnРост);
                this.columnРазмер = new global::System.Data.DataColumn("Размер", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnРазмер);
                this.columnПолнота = new global::System.Data.DataColumn("Полнота", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПолнота);
                this.columnКод_цвета = new global::System.Data.DataColumn("Код_цвета", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_цвета);
                this.columnМодель_изделия = new global::System.Data.DataColumn("Модель_изделия", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМодель_изделия);
                this.columnID_Изделия = new global::System.Data.DataColumn("ID_Изделия", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Изделия);
                this.columnНаименование = new global::System.Data.DataColumn("Наименование", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Маршрутного_листа}, true));
                this.columnID_Маршрутного_листа.AutoIncrement = true;
                this.columnID_Маршрутного_листа.AutoIncrementSeed = -1;
                this.columnID_Маршрутного_листа.AutoIncrementStep = -1;
                this.columnID_Маршрутного_листа.AllowDBNull = false;
                this.columnID_Маршрутного_листа.ReadOnly = true;
                this.columnID_Маршрутного_листа.Unique = true;
                this.columnID_Модели_изделия.AllowDBNull = false;
                this.columnНомер_заказа.AllowDBNull = false;
                this.columnРост.AllowDBNull = false;
                this.columnРазмер.AllowDBNull = false;
                this.columnПолнота.AllowDBNull = false;
                this.columnКод_цвета.AllowDBNull = false;
                this.columnМодель_изделия.AllowDBNull = false;
                this.columnМодель_изделия.MaxLength = 15;
                this.columnID_Изделия.AutoIncrement = true;
                this.columnID_Изделия.AutoIncrementSeed = -1;
                this.columnID_Изделия.AutoIncrementStep = -1;
                this.columnID_Изделия.AllowDBNull = false;
                this.columnID_Изделия.ReadOnly = true;
                this.columnНаименование.AllowDBNull = false;
                this.columnНаименование.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Маршрутные_листыRow NewМаршрутные_листыRow() {
                return ((Маршрутные_листыRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Маршрутные_листыRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Маршрутные_листыRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Маршрутные_листыRowChanged != null)) {
                    this.Маршрутные_листыRowChanged(this, new Маршрутные_листыRowChangeEvent(((Маршрутные_листыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Маршрутные_листыRowChanging != null)) {
                    this.Маршрутные_листыRowChanging(this, new Маршрутные_листыRowChangeEvent(((Маршрутные_листыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Маршрутные_листыRowDeleted != null)) {
                    this.Маршрутные_листыRowDeleted(this, new Маршрутные_листыRowChangeEvent(((Маршрутные_листыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Маршрутные_листыRowDeleting != null)) {
                    this.Маршрутные_листыRowDeleting(this, new Маршрутные_листыRowChangeEvent(((Маршрутные_листыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveМаршрутные_листыRow(Маршрутные_листыRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Маршрутные_листыDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Материальные_ценности_по_ордеру_на_тканьDataTable : global::System.Data.TypedTableBase<Материальные_ценности_по_ордеру_на_тканьRow> {
            
            private global::System.Data.DataColumn columnID_Материальной_ценности;
            
            private global::System.Data.DataColumn columnID_Приходного_ордера;
            
            private global::System.Data.DataColumn columnID_Модели_ткани;
            
            private global::System.Data.DataColumn columnЕдиница_измерения;
            
            private global::System.Data.DataColumn columnКоличество;
            
            private global::System.Data.DataColumn columnЦена;
            
            private global::System.Data.DataColumn columnСумма_НДС;
            
            private global::System.Data.DataColumn columnСумма_без_НДС;
            
            private global::System.Data.DataColumn columnВсего_с_НДС;
            
            private global::System.Data.DataColumn columnID_Ткани;
            
            private global::System.Data.DataColumn columnМатериальные_ценности;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Материальные_ценности_по_ордеру_на_тканьDataTable() {
                this.TableName = "Материальные_ценности_по_ордеру_на_ткань";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Материальные_ценности_по_ордеру_на_тканьDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Материальные_ценности_по_ордеру_на_тканьDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Материальной_ценностиColumn {
                get {
                    return this.columnID_Материальной_ценности;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Приходного_ордераColumn {
                get {
                    return this.columnID_Приходного_ордера;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Модели_тканиColumn {
                get {
                    return this.columnID_Модели_ткани;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Единица_измеренияColumn {
                get {
                    return this.columnЕдиница_измерения;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КоличествоColumn {
                get {
                    return this.columnКоличество;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ЦенаColumn {
                get {
                    return this.columnЦена;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Сумма_НДСColumn {
                get {
                    return this.columnСумма_НДС;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Сумма_без_НДСColumn {
                get {
                    return this.columnСумма_без_НДС;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Всего_с_НДСColumn {
                get {
                    return this.columnВсего_с_НДС;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_ТканиColumn {
                get {
                    return this.columnID_Ткани;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Материальные_ценностиColumn {
                get {
                    return this.columnМатериальные_ценности;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Материальные_ценности_по_ордеру_на_тканьRow this[int index] {
                get {
                    return ((Материальные_ценности_по_ордеру_на_тканьRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Материальные_ценности_по_ордеру_на_тканьRowChangeEventHandler Материальные_ценности_по_ордеру_на_тканьRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Материальные_ценности_по_ордеру_на_тканьRowChangeEventHandler Материальные_ценности_по_ордеру_на_тканьRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Материальные_ценности_по_ордеру_на_тканьRowChangeEventHandler Материальные_ценности_по_ордеру_на_тканьRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Материальные_ценности_по_ордеру_на_тканьRowChangeEventHandler Материальные_ценности_по_ордеру_на_тканьRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddМатериальные_ценности_по_ордеру_на_тканьRow(Материальные_ценности_по_ордеру_на_тканьRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Материальные_ценности_по_ордеру_на_тканьRow AddМатериальные_ценности_по_ордеру_на_тканьRow(Приходные_ордера_на_тканьRow parentПриходные_ордера_на_тканьRowByFK__Материаль__ID_Пр__0CDAE408, int ID_Модели_ткани, string Единица_измерения, int Количество, decimal Цена, decimal Сумма_НДС, decimal Сумма_без_НДС, decimal Всего_с_НДС, string Материальные_ценности) {
                Материальные_ценности_по_ордеру_на_тканьRow rowМатериальные_ценности_по_ордеру_на_тканьRow = ((Материальные_ценности_по_ордеру_на_тканьRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        ID_Модели_ткани,
                        Единица_измерения,
                        Количество,
                        Цена,
                        Сумма_НДС,
                        Сумма_без_НДС,
                        Всего_с_НДС,
                        null,
                        Материальные_ценности};
                if ((parentПриходные_ордера_на_тканьRowByFK__Материаль__ID_Пр__0CDAE408 != null)) {
                    columnValuesArray[1] = parentПриходные_ордера_на_тканьRowByFK__Материаль__ID_Пр__0CDAE408[0];
                }
                rowМатериальные_ценности_по_ордеру_на_тканьRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowМатериальные_ценности_по_ордеру_на_тканьRow);
                return rowМатериальные_ценности_по_ордеру_на_тканьRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Материальные_ценности_по_ордеру_на_тканьRow FindByID_Материальной_ценности(int ID_Материальной_ценности) {
                return ((Материальные_ценности_по_ордеру_на_тканьRow)(this.Rows.Find(new object[] {
                            ID_Материальной_ценности})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Материальные_ценности_по_ордеру_на_тканьDataTable cln = ((Материальные_ценности_по_ордеру_на_тканьDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Материальные_ценности_по_ордеру_на_тканьDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_Материальной_ценности = base.Columns["ID_Материальной_ценности"];
                this.columnID_Приходного_ордера = base.Columns["ID_Приходного_ордера"];
                this.columnID_Модели_ткани = base.Columns["ID_Модели_ткани"];
                this.columnЕдиница_измерения = base.Columns["Единица_измерения"];
                this.columnКоличество = base.Columns["Количество"];
                this.columnЦена = base.Columns["Цена"];
                this.columnСумма_НДС = base.Columns["Сумма_НДС"];
                this.columnСумма_без_НДС = base.Columns["Сумма_без_НДС"];
                this.columnВсего_с_НДС = base.Columns["Всего_с_НДС"];
                this.columnID_Ткани = base.Columns["ID_Ткани"];
                this.columnМатериальные_ценности = base.Columns["Материальные_ценности"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_Материальной_ценности = new global::System.Data.DataColumn("ID_Материальной_ценности", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Материальной_ценности);
                this.columnID_Приходного_ордера = new global::System.Data.DataColumn("ID_Приходного_ордера", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Приходного_ордера);
                this.columnID_Модели_ткани = new global::System.Data.DataColumn("ID_Модели_ткани", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Модели_ткани);
                this.columnЕдиница_измерения = new global::System.Data.DataColumn("Единица_измерения", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЕдиница_измерения);
                this.columnКоличество = new global::System.Data.DataColumn("Количество", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКоличество);
                this.columnЦена = new global::System.Data.DataColumn("Цена", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЦена);
                this.columnСумма_НДС = new global::System.Data.DataColumn("Сумма_НДС", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСумма_НДС);
                this.columnСумма_без_НДС = new global::System.Data.DataColumn("Сумма_без_НДС", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСумма_без_НДС);
                this.columnВсего_с_НДС = new global::System.Data.DataColumn("Всего_с_НДС", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВсего_с_НДС);
                this.columnID_Ткани = new global::System.Data.DataColumn("ID_Ткани", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Ткани);
                this.columnМатериальные_ценности = new global::System.Data.DataColumn("Материальные_ценности", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМатериальные_ценности);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Материальной_ценности}, true));
                this.columnID_Материальной_ценности.AutoIncrement = true;
                this.columnID_Материальной_ценности.AutoIncrementSeed = -1;
                this.columnID_Материальной_ценности.AutoIncrementStep = -1;
                this.columnID_Материальной_ценности.AllowDBNull = false;
                this.columnID_Материальной_ценности.ReadOnly = true;
                this.columnID_Материальной_ценности.Unique = true;
                this.columnID_Приходного_ордера.AllowDBNull = false;
                this.columnID_Модели_ткани.AllowDBNull = false;
                this.columnЕдиница_измерения.AllowDBNull = false;
                this.columnЕдиница_измерения.MaxLength = 5;
                this.columnКоличество.AllowDBNull = false;
                this.columnЦена.AllowDBNull = false;
                this.columnСумма_без_НДС.AllowDBNull = false;
                this.columnВсего_с_НДС.AllowDBNull = false;
                this.columnID_Ткани.AutoIncrement = true;
                this.columnID_Ткани.AutoIncrementSeed = -1;
                this.columnID_Ткани.AutoIncrementStep = -1;
                this.columnID_Ткани.AllowDBNull = false;
                this.columnID_Ткани.ReadOnly = true;
                this.columnМатериальные_ценности.ReadOnly = true;
                this.columnМатериальные_ценности.MaxLength = 141;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Материальные_ценности_по_ордеру_на_тканьRow NewМатериальные_ценности_по_ордеру_на_тканьRow() {
                return ((Материальные_ценности_по_ордеру_на_тканьRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Материальные_ценности_по_ордеру_на_тканьRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Материальные_ценности_по_ордеру_на_тканьRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Материальные_ценности_по_ордеру_на_тканьRowChanged != null)) {
                    this.Материальные_ценности_по_ордеру_на_тканьRowChanged(this, new Материальные_ценности_по_ордеру_на_тканьRowChangeEvent(((Материальные_ценности_по_ордеру_на_тканьRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Материальные_ценности_по_ордеру_на_тканьRowChanging != null)) {
                    this.Материальные_ценности_по_ордеру_на_тканьRowChanging(this, new Материальные_ценности_по_ордеру_на_тканьRowChangeEvent(((Материальные_ценности_по_ордеру_на_тканьRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Материальные_ценности_по_ордеру_на_тканьRowDeleted != null)) {
                    this.Материальные_ценности_по_ордеру_на_тканьRowDeleted(this, new Материальные_ценности_по_ордеру_на_тканьRowChangeEvent(((Материальные_ценности_по_ордеру_на_тканьRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Материальные_ценности_по_ордеру_на_тканьRowDeleting != null)) {
                    this.Материальные_ценности_по_ордеру_на_тканьRowDeleting(this, new Материальные_ценности_по_ордеру_на_тканьRowChangeEvent(((Материальные_ценности_по_ордеру_на_тканьRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveМатериальные_ценности_по_ордеру_на_тканьRow(Материальные_ценности_по_ордеру_на_тканьRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Материальные_ценности_по_ордеру_на_тканьDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Склад_готовой_продукцииDataTable : global::System.Data.TypedTableBase<Склад_готовой_продукцииRow> {
            
            private global::System.Data.DataColumn columnID_Готовой_продукции_на_складе;
            
            private global::System.Data.DataColumn columnID_Модели_изделия;
            
            private global::System.Data.DataColumn columnСорт;
            
            private global::System.Data.DataColumn columnЕдиница_измерения;
            
            private global::System.Data.DataColumn columnКоличество;
            
            private global::System.Data.DataColumn columnID_Изделия;
            
            private global::System.Data.DataColumn columnНаименование;
            
            private global::System.Data.DataColumn columnМодель_изделия;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Склад_готовой_продукцииDataTable() {
                this.TableName = "Склад_готовой_продукции";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Склад_готовой_продукцииDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Склад_готовой_продукцииDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Готовой_продукции_на_складеColumn {
                get {
                    return this.columnID_Готовой_продукции_на_складе;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Модели_изделияColumn {
                get {
                    return this.columnID_Модели_изделия;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn СортColumn {
                get {
                    return this.columnСорт;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Единица_измеренияColumn {
                get {
                    return this.columnЕдиница_измерения;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КоличествоColumn {
                get {
                    return this.columnКоличество;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_ИзделияColumn {
                get {
                    return this.columnID_Изделия;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НаименованиеColumn {
                get {
                    return this.columnНаименование;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Модель_изделияColumn {
                get {
                    return this.columnМодель_изделия;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Склад_готовой_продукцииRow this[int index] {
                get {
                    return ((Склад_готовой_продукцииRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Склад_готовой_продукцииRowChangeEventHandler Склад_готовой_продукцииRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Склад_готовой_продукцииRowChangeEventHandler Склад_готовой_продукцииRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Склад_готовой_продукцииRowChangeEventHandler Склад_готовой_продукцииRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Склад_готовой_продукцииRowChangeEventHandler Склад_готовой_продукцииRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddСклад_готовой_продукцииRow(Склад_готовой_продукцииRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Склад_готовой_продукцииRow AddСклад_готовой_продукцииRow(Модели_изделияRow parentМодели_изделияRowByМодели_изделия_Склад_готовой_продукции, int Сорт, string Единица_измерения, int Количество, string Наименование, string Модель_изделия) {
                Склад_готовой_продукцииRow rowСклад_готовой_продукцииRow = ((Склад_готовой_продукцииRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Сорт,
                        Единица_измерения,
                        Количество,
                        null,
                        Наименование,
                        Модель_изделия};
                if ((parentМодели_изделияRowByМодели_изделия_Склад_готовой_продукции != null)) {
                    columnValuesArray[1] = parentМодели_изделияRowByМодели_изделия_Склад_готовой_продукции[0];
                }
                rowСклад_готовой_продукцииRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowСклад_готовой_продукцииRow);
                return rowСклад_готовой_продукцииRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Склад_готовой_продукцииRow FindByID_Готовой_продукции_на_складе(int ID_Готовой_продукции_на_складе) {
                return ((Склад_готовой_продукцииRow)(this.Rows.Find(new object[] {
                            ID_Готовой_продукции_на_складе})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Склад_готовой_продукцииDataTable cln = ((Склад_готовой_продукцииDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Склад_готовой_продукцииDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_Готовой_продукции_на_складе = base.Columns["ID_Готовой_продукции_на_складе"];
                this.columnID_Модели_изделия = base.Columns["ID_Модели_изделия"];
                this.columnСорт = base.Columns["Сорт"];
                this.columnЕдиница_измерения = base.Columns["Единица_измерения"];
                this.columnКоличество = base.Columns["Количество"];
                this.columnID_Изделия = base.Columns["ID_Изделия"];
                this.columnНаименование = base.Columns["Наименование"];
                this.columnМодель_изделия = base.Columns["Модель_изделия"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_Готовой_продукции_на_складе = new global::System.Data.DataColumn("ID_Готовой_продукции_на_складе", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Готовой_продукции_на_складе);
                this.columnID_Модели_изделия = new global::System.Data.DataColumn("ID_Модели_изделия", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Модели_изделия);
                this.columnСорт = new global::System.Data.DataColumn("Сорт", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСорт);
                this.columnЕдиница_измерения = new global::System.Data.DataColumn("Единица_измерения", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЕдиница_измерения);
                this.columnКоличество = new global::System.Data.DataColumn("Количество", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКоличество);
                this.columnID_Изделия = new global::System.Data.DataColumn("ID_Изделия", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Изделия);
                this.columnНаименование = new global::System.Data.DataColumn("Наименование", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование);
                this.columnМодель_изделия = new global::System.Data.DataColumn("Модель_изделия", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМодель_изделия);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Готовой_продукции_на_складе}, true));
                this.columnID_Готовой_продукции_на_складе.AutoIncrement = true;
                this.columnID_Готовой_продукции_на_складе.AutoIncrementSeed = -1;
                this.columnID_Готовой_продукции_на_складе.AutoIncrementStep = -1;
                this.columnID_Готовой_продукции_на_складе.AllowDBNull = false;
                this.columnID_Готовой_продукции_на_складе.ReadOnly = true;
                this.columnID_Готовой_продукции_на_складе.Unique = true;
                this.columnID_Модели_изделия.AllowDBNull = false;
                this.columnСорт.AllowDBNull = false;
                this.columnЕдиница_измерения.AllowDBNull = false;
                this.columnЕдиница_измерения.MaxLength = 5;
                this.columnКоличество.AllowDBNull = false;
                this.columnID_Изделия.AutoIncrement = true;
                this.columnID_Изделия.AutoIncrementSeed = -1;
                this.columnID_Изделия.AutoIncrementStep = -1;
                this.columnID_Изделия.AllowDBNull = false;
                this.columnID_Изделия.ReadOnly = true;
                this.columnНаименование.AllowDBNull = false;
                this.columnНаименование.MaxLength = 80;
                this.columnМодель_изделия.AllowDBNull = false;
                this.columnМодель_изделия.MaxLength = 15;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Склад_готовой_продукцииRow NewСклад_готовой_продукцииRow() {
                return ((Склад_готовой_продукцииRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Склад_готовой_продукцииRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Склад_готовой_продукцииRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Склад_готовой_продукцииRowChanged != null)) {
                    this.Склад_готовой_продукцииRowChanged(this, new Склад_готовой_продукцииRowChangeEvent(((Склад_готовой_продукцииRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Склад_готовой_продукцииRowChanging != null)) {
                    this.Склад_готовой_продукцииRowChanging(this, new Склад_готовой_продукцииRowChangeEvent(((Склад_готовой_продукцииRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Склад_готовой_продукцииRowDeleted != null)) {
                    this.Склад_готовой_продукцииRowDeleted(this, new Склад_готовой_продукцииRowChangeEvent(((Склад_готовой_продукцииRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Склад_готовой_продукцииRowDeleting != null)) {
                    this.Склад_готовой_продукцииRowDeleting(this, new Склад_готовой_продукцииRowChangeEvent(((Склад_готовой_продукцииRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveСклад_готовой_продукцииRow(Склад_готовой_продукцииRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Склад_готовой_продукцииDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Товарный_раздел_товарной_накладнойDataTable : global::System.Data.TypedTableBase<Товарный_раздел_товарной_накладнойRow> {
            
            private global::System.Data.DataColumn columnID_Товарного_раздела;
            
            private global::System.Data.DataColumn columnID_Товарной_накладной;
            
            private global::System.Data.DataColumn columnID_Готовой_продукции_на_складе;
            
            private global::System.Data.DataColumn columnЕдиница_измерения;
            
            private global::System.Data.DataColumn columnКоличество;
            
            private global::System.Data.DataColumn columnЦена;
            
            private global::System.Data.DataColumn columnСтоимость_продукции;
            
            private global::System.Data.DataColumn columnСтавка_НДС;
            
            private global::System.Data.DataColumn columnСумма_НДС;
            
            private global::System.Data.DataColumn columnВсего_с_НДС;
            
            private global::System.Data.DataColumn columnМатериальные_ценности;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарный_раздел_товарной_накладнойDataTable() {
                this.TableName = "Товарный_раздел_товарной_накладной";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Товарный_раздел_товарной_накладнойDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Товарный_раздел_товарной_накладнойDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Товарного_разделаColumn {
                get {
                    return this.columnID_Товарного_раздела;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Товарной_накладнойColumn {
                get {
                    return this.columnID_Товарной_накладной;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Готовой_продукции_на_складеColumn {
                get {
                    return this.columnID_Готовой_продукции_на_складе;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Единица_измеренияColumn {
                get {
                    return this.columnЕдиница_измерения;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КоличествоColumn {
                get {
                    return this.columnКоличество;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ЦенаColumn {
                get {
                    return this.columnЦена;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Стоимость_продукцииColumn {
                get {
                    return this.columnСтоимость_продукции;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ставка_НДСColumn {
                get {
                    return this.columnСтавка_НДС;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Сумма_НДСColumn {
                get {
                    return this.columnСумма_НДС;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Всего_с_НДСColumn {
                get {
                    return this.columnВсего_с_НДС;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Материальные_ценностиColumn {
                get {
                    return this.columnМатериальные_ценности;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарный_раздел_товарной_накладнойRow this[int index] {
                get {
                    return ((Товарный_раздел_товарной_накладнойRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Товарный_раздел_товарной_накладнойRowChangeEventHandler Товарный_раздел_товарной_накладнойRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Товарный_раздел_товарной_накладнойRowChangeEventHandler Товарный_раздел_товарной_накладнойRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Товарный_раздел_товарной_накладнойRowChangeEventHandler Товарный_раздел_товарной_накладнойRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Товарный_раздел_товарной_накладнойRowChangeEventHandler Товарный_раздел_товарной_накладнойRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddТоварный_раздел_товарной_накладнойRow(Товарный_раздел_товарной_накладнойRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарный_раздел_товарной_накладнойRow AddТоварный_раздел_товарной_накладнойRow(Товарные_накладныеRow parentТоварные_накладныеRowByFK__Товарный___ID_То__1B29035F, Склад_готовой_продукцииRow parentСклад_готовой_продукцииRowByFK__Товарный___ID_Го__1C1D2798, string Единица_измерения, int Количество, decimal Цена, decimal Стоимость_продукции, int Ставка_НДС, int Сумма_НДС, int Всего_с_НДС, string Материальные_ценности) {
                Товарный_раздел_товарной_накладнойRow rowТоварный_раздел_товарной_накладнойRow = ((Товарный_раздел_товарной_накладнойRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        Единица_измерения,
                        Количество,
                        Цена,
                        Стоимость_продукции,
                        Ставка_НДС,
                        Сумма_НДС,
                        Всего_с_НДС,
                        Материальные_ценности};
                if ((parentТоварные_накладныеRowByFK__Товарный___ID_То__1B29035F != null)) {
                    columnValuesArray[1] = parentТоварные_накладныеRowByFK__Товарный___ID_То__1B29035F[0];
                }
                if ((parentСклад_готовой_продукцииRowByFK__Товарный___ID_Го__1C1D2798 != null)) {
                    columnValuesArray[2] = parentСклад_готовой_продукцииRowByFK__Товарный___ID_Го__1C1D2798[0];
                }
                rowТоварный_раздел_товарной_накладнойRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowТоварный_раздел_товарной_накладнойRow);
                return rowТоварный_раздел_товарной_накладнойRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарный_раздел_товарной_накладнойRow FindByID_Товарного_раздела(int ID_Товарного_раздела) {
                return ((Товарный_раздел_товарной_накладнойRow)(this.Rows.Find(new object[] {
                            ID_Товарного_раздела})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Товарный_раздел_товарной_накладнойDataTable cln = ((Товарный_раздел_товарной_накладнойDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Товарный_раздел_товарной_накладнойDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_Товарного_раздела = base.Columns["ID_Товарного_раздела"];
                this.columnID_Товарной_накладной = base.Columns["ID_Товарной_накладной"];
                this.columnID_Готовой_продукции_на_складе = base.Columns["ID_Готовой_продукции_на_складе"];
                this.columnЕдиница_измерения = base.Columns["Единица_измерения"];
                this.columnКоличество = base.Columns["Количество"];
                this.columnЦена = base.Columns["Цена"];
                this.columnСтоимость_продукции = base.Columns["Стоимость_продукции"];
                this.columnСтавка_НДС = base.Columns["Ставка_НДС"];
                this.columnСумма_НДС = base.Columns["Сумма_НДС"];
                this.columnВсего_с_НДС = base.Columns["Всего_с_НДС"];
                this.columnМатериальные_ценности = base.Columns["Материальные_ценности"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_Товарного_раздела = new global::System.Data.DataColumn("ID_Товарного_раздела", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Товарного_раздела);
                this.columnID_Товарной_накладной = new global::System.Data.DataColumn("ID_Товарной_накладной", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Товарной_накладной);
                this.columnID_Готовой_продукции_на_складе = new global::System.Data.DataColumn("ID_Готовой_продукции_на_складе", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Готовой_продукции_на_складе);
                this.columnЕдиница_измерения = new global::System.Data.DataColumn("Единица_измерения", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЕдиница_измерения);
                this.columnКоличество = new global::System.Data.DataColumn("Количество", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКоличество);
                this.columnЦена = new global::System.Data.DataColumn("Цена", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЦена);
                this.columnСтоимость_продукции = new global::System.Data.DataColumn("Стоимость_продукции", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСтоимость_продукции);
                this.columnСтавка_НДС = new global::System.Data.DataColumn("Ставка_НДС", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСтавка_НДС);
                this.columnСумма_НДС = new global::System.Data.DataColumn("Сумма_НДС", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСумма_НДС);
                this.columnВсего_с_НДС = new global::System.Data.DataColumn("Всего_с_НДС", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВсего_с_НДС);
                this.columnМатериальные_ценности = new global::System.Data.DataColumn("Материальные_ценности", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМатериальные_ценности);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Товарного_раздела}, true));
                this.columnID_Товарного_раздела.AutoIncrement = true;
                this.columnID_Товарного_раздела.AutoIncrementSeed = -1;
                this.columnID_Товарного_раздела.AutoIncrementStep = -1;
                this.columnID_Товарного_раздела.AllowDBNull = false;
                this.columnID_Товарного_раздела.ReadOnly = true;
                this.columnID_Товарного_раздела.Unique = true;
                this.columnID_Товарной_накладной.AllowDBNull = false;
                this.columnID_Готовой_продукции_на_складе.AllowDBNull = false;
                this.columnЕдиница_измерения.AllowDBNull = false;
                this.columnЕдиница_измерения.MaxLength = 5;
                this.columnКоличество.AllowDBNull = false;
                this.columnЦена.AllowDBNull = false;
                this.columnСтоимость_продукции.AllowDBNull = false;
                this.columnВсего_с_НДС.AllowDBNull = false;
                this.columnМатериальные_ценности.ReadOnly = true;
                this.columnМатериальные_ценности.MaxLength = 96;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарный_раздел_товарной_накладнойRow NewТоварный_раздел_товарной_накладнойRow() {
                return ((Товарный_раздел_товарной_накладнойRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Товарный_раздел_товарной_накладнойRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Товарный_раздел_товарной_накладнойRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Товарный_раздел_товарной_накладнойRowChanged != null)) {
                    this.Товарный_раздел_товарной_накладнойRowChanged(this, new Товарный_раздел_товарной_накладнойRowChangeEvent(((Товарный_раздел_товарной_накладнойRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Товарный_раздел_товарной_накладнойRowChanging != null)) {
                    this.Товарный_раздел_товарной_накладнойRowChanging(this, new Товарный_раздел_товарной_накладнойRowChangeEvent(((Товарный_раздел_товарной_накладнойRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Товарный_раздел_товарной_накладнойRowDeleted != null)) {
                    this.Товарный_раздел_товарной_накладнойRowDeleted(this, new Товарный_раздел_товарной_накладнойRowChangeEvent(((Товарный_раздел_товарной_накладнойRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Товарный_раздел_товарной_накладнойRowDeleting != null)) {
                    this.Товарный_раздел_товарной_накладнойRowDeleting(this, new Товарный_раздел_товарной_накладнойRowChangeEvent(((Товарный_раздел_товарной_накладнойRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveТоварный_раздел_товарной_накладнойRow(Товарный_раздел_товарной_накладнойRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Товарный_раздел_товарной_накладнойDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Изделия_принятые_на_складDataTable : global::System.Data.TypedTableBase<Изделия_принятые_на_складRow> {
            
            private global::System.Data.DataColumn columnID_Принятого_изделия;
            
            private global::System.Data.DataColumn columnID_Маршрутного_листа;
            
            private global::System.Data.DataColumn columnКоличество;
            
            private global::System.Data.DataColumn columnСорт;
            
            private global::System.Data.DataColumn columnID_Модели_изделия;
            
            private global::System.Data.DataColumn columnID_Изделия;
            
            private global::System.Data.DataColumn columnНаименование;
            
            private global::System.Data.DataColumn columnМодель_изделия;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Изделия_принятые_на_складDataTable() {
                this.TableName = "Изделия_принятые_на_склад";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Изделия_принятые_на_складDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Изделия_принятые_на_складDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Принятого_изделияColumn {
                get {
                    return this.columnID_Принятого_изделия;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Маршрутного_листаColumn {
                get {
                    return this.columnID_Маршрутного_листа;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КоличествоColumn {
                get {
                    return this.columnКоличество;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn СортColumn {
                get {
                    return this.columnСорт;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_Модели_изделияColumn {
                get {
                    return this.columnID_Модели_изделия;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_ИзделияColumn {
                get {
                    return this.columnID_Изделия;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НаименованиеColumn {
                get {
                    return this.columnНаименование;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Модель_изделияColumn {
                get {
                    return this.columnМодель_изделия;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Изделия_принятые_на_складRow this[int index] {
                get {
                    return ((Изделия_принятые_на_складRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Изделия_принятые_на_складRowChangeEventHandler Изделия_принятые_на_складRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Изделия_принятые_на_складRowChangeEventHandler Изделия_принятые_на_складRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Изделия_принятые_на_складRowChangeEventHandler Изделия_принятые_на_складRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Изделия_принятые_на_складRowChangeEventHandler Изделия_принятые_на_складRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddИзделия_принятые_на_складRow(Изделия_принятые_на_складRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Изделия_принятые_на_складRow AddИзделия_принятые_на_складRow(Маршрутные_листыRow parentМаршрутные_листыRowByМаршрутные_листы_Изделия_принятые_на_склад, int Количество, int Сорт, int ID_Модели_изделия, string Наименование, string Модель_изделия) {
                Изделия_принятые_на_складRow rowИзделия_принятые_на_складRow = ((Изделия_принятые_на_складRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Количество,
                        Сорт,
                        ID_Модели_изделия,
                        null,
                        Наименование,
                        Модель_изделия};
                if ((parentМаршрутные_листыRowByМаршрутные_листы_Изделия_принятые_на_склад != null)) {
                    columnValuesArray[1] = parentМаршрутные_листыRowByМаршрутные_листы_Изделия_принятые_на_склад[0];
                }
                rowИзделия_принятые_на_складRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowИзделия_принятые_на_складRow);
                return rowИзделия_принятые_на_складRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Изделия_принятые_на_складRow FindByID_Принятого_изделия(int ID_Принятого_изделия) {
                return ((Изделия_принятые_на_складRow)(this.Rows.Find(new object[] {
                            ID_Принятого_изделия})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Изделия_принятые_на_складDataTable cln = ((Изделия_принятые_на_складDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Изделия_принятые_на_складDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_Принятого_изделия = base.Columns["ID_Принятого_изделия"];
                this.columnID_Маршрутного_листа = base.Columns["ID_Маршрутного_листа"];
                this.columnКоличество = base.Columns["Количество"];
                this.columnСорт = base.Columns["Сорт"];
                this.columnID_Модели_изделия = base.Columns["ID_Модели_изделия"];
                this.columnID_Изделия = base.Columns["ID_Изделия"];
                this.columnНаименование = base.Columns["Наименование"];
                this.columnМодель_изделия = base.Columns["Модель_изделия"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_Принятого_изделия = new global::System.Data.DataColumn("ID_Принятого_изделия", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Принятого_изделия);
                this.columnID_Маршрутного_листа = new global::System.Data.DataColumn("ID_Маршрутного_листа", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Маршрутного_листа);
                this.columnКоличество = new global::System.Data.DataColumn("Количество", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКоличество);
                this.columnСорт = new global::System.Data.DataColumn("Сорт", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСорт);
                this.columnID_Модели_изделия = new global::System.Data.DataColumn("ID_Модели_изделия", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Модели_изделия);
                this.columnID_Изделия = new global::System.Data.DataColumn("ID_Изделия", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Изделия);
                this.columnНаименование = new global::System.Data.DataColumn("Наименование", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование);
                this.columnМодель_изделия = new global::System.Data.DataColumn("Модель_изделия", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnМодель_изделия);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Принятого_изделия}, true));
                this.columnID_Принятого_изделия.AutoIncrement = true;
                this.columnID_Принятого_изделия.AutoIncrementSeed = -1;
                this.columnID_Принятого_изделия.AutoIncrementStep = -1;
                this.columnID_Принятого_изделия.AllowDBNull = false;
                this.columnID_Принятого_изделия.ReadOnly = true;
                this.columnID_Принятого_изделия.Unique = true;
                this.columnID_Маршрутного_листа.AllowDBNull = false;
                this.columnКоличество.AllowDBNull = false;
                this.columnСорт.AllowDBNull = false;
                this.columnID_Модели_изделия.AllowDBNull = false;
                this.columnID_Изделия.AutoIncrement = true;
                this.columnID_Изделия.AutoIncrementSeed = -1;
                this.columnID_Изделия.AutoIncrementStep = -1;
                this.columnID_Изделия.AllowDBNull = false;
                this.columnID_Изделия.ReadOnly = true;
                this.columnНаименование.AllowDBNull = false;
                this.columnНаименование.MaxLength = 80;
                this.columnМодель_изделия.AllowDBNull = false;
                this.columnМодель_изделия.MaxLength = 15;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Изделия_принятые_на_складRow NewИзделия_принятые_на_складRow() {
                return ((Изделия_принятые_на_складRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Изделия_принятые_на_складRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Изделия_принятые_на_складRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Изделия_принятые_на_складRowChanged != null)) {
                    this.Изделия_принятые_на_складRowChanged(this, new Изделия_принятые_на_складRowChangeEvent(((Изделия_принятые_на_складRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Изделия_принятые_на_складRowChanging != null)) {
                    this.Изделия_принятые_на_складRowChanging(this, new Изделия_принятые_на_складRowChangeEvent(((Изделия_принятые_на_складRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Изделия_принятые_на_складRowDeleted != null)) {
                    this.Изделия_принятые_на_складRowDeleted(this, new Изделия_принятые_на_складRowChangeEvent(((Изделия_принятые_на_складRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Изделия_принятые_на_складRowDeleting != null)) {
                    this.Изделия_принятые_на_складRowDeleting(this, new Изделия_принятые_на_складRowChangeEvent(((Изделия_принятые_на_складRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveИзделия_принятые_на_складRow(Изделия_принятые_на_складRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AutomationAppDBDataSet ds = new AutomationAppDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Изделия_принятые_на_складDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ИзделияRow : global::System.Data.DataRow {
            
            private ИзделияDataTable tableИзделия;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ИзделияRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableИзделия = ((ИзделияDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Изделия {
                get {
                    return ((int)(this[this.tableИзделия.ID_ИзделияColumn]));
                }
                set {
                    this[this.tableИзделия.ID_ИзделияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Наименование {
                get {
                    return ((string)(this[this.tableИзделия.НаименованиеColumn]));
                }
                set {
                    this[this.tableИзделия.НаименованиеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_изделияRow[] GetМодели_изделияRows() {
                if ((this.Table.ChildRelations["FK__Модели_из__Модел__38996AB5"] == null)) {
                    return new Модели_изделияRow[0];
                }
                else {
                    return ((Модели_изделияRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Модели_из__Модел__38996AB5"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Модели_изделияRow : global::System.Data.DataRow {
            
            private Модели_изделияDataTable tableМодели_изделия;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Модели_изделияRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableМодели_изделия = ((Модели_изделияDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Модели_изделия {
                get {
                    return ((int)(this[this.tableМодели_изделия.ID_Модели_изделияColumn]));
                }
                set {
                    this[this.tableМодели_изделия.ID_Модели_изделияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Изделия {
                get {
                    return ((int)(this[this.tableМодели_изделия.ID_ИзделияColumn]));
                }
                set {
                    this[this.tableМодели_изделия.ID_ИзделияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Модель_изделия {
                get {
                    return ((string)(this[this.tableМодели_изделия.Модель_изделияColumn]));
                }
                set {
                    this[this.tableМодели_изделия.Модель_изделияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Наименование {
                get {
                    return ((string)(this[this.tableМодели_изделия.НаименованиеColumn]));
                }
                set {
                    this[this.tableМодели_изделия.НаименованиеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ИзделияRow ИзделияRow {
                get {
                    return ((ИзделияRow)(this.GetParentRow(this.Table.ParentRelations["FK__Модели_из__Модел__38996AB5"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Модели_из__Модел__38996AB5"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Лимитно_заборные_картыRow[] GetЛимитно_заборные_картыRows() {
                if ((this.Table.ChildRelations["FK__Лимитно_з__ID_Мо__10E07F16"] == null)) {
                    return new Лимитно_заборные_картыRow[0];
                }
                else {
                    return ((Лимитно_заборные_картыRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Лимитно_з__ID_Мо__10E07F16"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Расчётные_картыRow[] GetРасчётные_картыRows() {
                if ((this.Table.ChildRelations["FK__Расчётные__ID_Мо__5B78929E"] == null)) {
                    return new Расчётные_картыRow[0];
                }
                else {
                    return ((Расчётные_картыRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Расчётные__ID_Мо__5B78929E"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Маршрутные_листыRow[] GetМаршрутные_листыRows() {
                if ((this.Table.ChildRelations["Модели_изделия_Маршрутные_листы"] == null)) {
                    return new Маршрутные_листыRow[0];
                }
                else {
                    return ((Маршрутные_листыRow[])(base.GetChildRows(this.Table.ChildRelations["Модели_изделия_Маршрутные_листы"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Склад_готовой_продукцииRow[] GetСклад_готовой_продукцииRows() {
                if ((this.Table.ChildRelations["Модели_изделия_Склад_готовой_продукции"] == null)) {
                    return new Склад_готовой_продукцииRow[0];
                }
                else {
                    return ((Склад_готовой_продукцииRow[])(base.GetChildRows(this.Table.ChildRelations["Модели_изделия_Склад_готовой_продукции"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Модели_тканиRow : global::System.Data.DataRow {
            
            private Модели_тканиDataTable tableМодели_ткани;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Модели_тканиRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableМодели_ткани = ((Модели_тканиDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Модели_ткани {
                get {
                    return ((int)(this[this.tableМодели_ткани.ID_Модели_тканиColumn]));
                }
                set {
                    this[this.tableМодели_ткани.ID_Модели_тканиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Ткани {
                get {
                    return ((int)(this[this.tableМодели_ткани.ID_ТканиColumn]));
                }
                set {
                    this[this.tableМодели_ткани.ID_ТканиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Модель_ткани {
                get {
                    return ((string)(this[this.tableМодели_ткани.Модель_тканиColumn]));
                }
                set {
                    this[this.tableМодели_ткани.Модель_тканиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Наименование {
                get {
                    return ((string)(this[this.tableМодели_ткани.НаименованиеColumn]));
                }
                set {
                    this[this.tableМодели_ткани.НаименованиеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ТканиRow ТканиRow {
                get {
                    return ((ТканиRow)(this.GetParentRow(this.Table.ParentRelations["FK__Модели_тк__ID_Тк__6C190EBB"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Модели_тк__ID_Тк__6C190EBB"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Материальные_ценности_по_ордеру_на_тканьRow Материальные_ценности_по_ордеру_на_тканьRow {
                get {
                    return ((Материальные_ценности_по_ордеру_на_тканьRow)(this.GetParentRow(this.Table.ParentRelations["Материальные_ценности_по_ордеру_на_ткань_Модели_ткани"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Материальные_ценности_по_ордеру_на_ткань_Модели_ткани"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Склад_тканиRow[] GetСклад_тканиRows() {
                if ((this.Table.ChildRelations["FK__Склад_тка__ID_Мо__084B3915"] == null)) {
                    return new Склад_тканиRow[0];
                }
                else {
                    return ((Склад_тканиRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Склад_тка__ID_Мо__084B3915"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ПоставщикиRow : global::System.Data.DataRow {
            
            private ПоставщикиDataTable tableПоставщики;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ПоставщикиRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableПоставщики = ((ПоставщикиDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Поставщика {
                get {
                    return ((int)(this[this.tableПоставщики.ID_ПоставщикаColumn]));
                }
                set {
                    this[this.tableПоставщики.ID_ПоставщикаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Поставщик {
                get {
                    try {
                        return ((string)(this[this.tableПоставщики.ПоставщикColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Поставщик\' в таблице \'Поставщики\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПоставщики.ПоставщикColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Наименование {
                get {
                    return ((string)(this[this.tableПоставщики.НаименованиеColumn]));
                }
                set {
                    this[this.tableПоставщики.НаименованиеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Адрес {
                get {
                    return ((string)(this[this.tableПоставщики.АдресColumn]));
                }
                set {
                    this[this.tableПоставщики.АдресColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsПоставщикNull() {
                return this.IsNull(this.tableПоставщики.ПоставщикColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetПоставщикNull() {
                this[this.tableПоставщики.ПоставщикColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Приходные_ордера_на_тканьRow[] GetПриходные_ордера_на_тканьRows() {
                if ((this.Table.ChildRelations["FK__Приходные__ID_По__71D1E811"] == null)) {
                    return new Приходные_ордера_на_тканьRow[0];
                }
                else {
                    return ((Приходные_ордера_на_тканьRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Приходные__ID_По__71D1E811"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Приходные_ордера_на_фурнитуруRow[] GetПриходные_ордера_на_фурнитуруRows() {
                if ((this.Table.ChildRelations["FK__Приходные__ID_По__571DF1D5"] == null)) {
                    return new Приходные_ордера_на_фурнитуруRow[0];
                }
                else {
                    return ((Приходные_ордера_на_фурнитуруRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Приходные__ID_По__571DF1D5"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Приходные_ордера_на_тканьRow : global::System.Data.DataRow {
            
            private Приходные_ордера_на_тканьDataTable tableПриходные_ордера_на_ткань;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Приходные_ордера_на_тканьRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableПриходные_ордера_на_ткань = ((Приходные_ордера_на_тканьDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Приходного_ордера {
                get {
                    return ((int)(this[this.tableПриходные_ордера_на_ткань.ID_Приходного_ордераColumn]));
                }
                set {
                    this[this.tableПриходные_ордера_на_ткань.ID_Приходного_ордераColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Поставщика {
                get {
                    return ((int)(this[this.tableПриходные_ордера_на_ткань.ID_ПоставщикаColumn]));
                }
                set {
                    this[this.tableПриходные_ордера_на_ткань.ID_ПоставщикаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Дата_составления {
                get {
                    return ((global::System.DateTime)(this[this.tableПриходные_ордера_на_ткань.Дата_составленияColumn]));
                }
                set {
                    this[this.tableПриходные_ордера_на_ткань.Дата_составленияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Склад {
                get {
                    return ((string)(this[this.tableПриходные_ордера_на_ткань.СкладColumn]));
                }
                set {
                    this[this.tableПриходные_ордера_на_ткань.СкладColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Корреспондирующий_счет {
                get {
                    return ((string)(this[this.tableПриходные_ордера_на_ткань.Корреспондирующий_счетColumn]));
                }
                set {
                    this[this.tableПриходные_ордера_на_ткань.Корреспондирующий_счетColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Сопроводительный_документ {
                get {
                    return ((string)(this[this.tableПриходные_ордера_на_ткань.Сопроводительный_документColumn]));
                }
                set {
                    this[this.tableПриходные_ордера_на_ткань.Сопроводительный_документColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Сумма {
                get {
                    return ((decimal)(this[this.tableПриходные_ордера_на_ткань.СуммаColumn]));
                }
                set {
                    this[this.tableПриходные_ордера_на_ткань.СуммаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Поставщик {
                get {
                    try {
                        return ((string)(this[this.tableПриходные_ордера_на_ткань.ПоставщикColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Поставщик\' в таблице \'Приходные_ордера_на_ткань\' равно DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableПриходные_ордера_на_ткань.ПоставщикColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПоставщикиRow ПоставщикиRow {
                get {
                    return ((ПоставщикиRow)(this.GetParentRow(this.Table.ParentRelations["FK__Приходные__ID_По__71D1E811"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Приходные__ID_По__71D1E811"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsПоставщикNull() {
                return this.IsNull(this.tableПриходные_ордера_на_ткань.ПоставщикColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetПоставщикNull() {
                this[this.tableПриходные_ордера_на_ткань.ПоставщикColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Материальные_ценности_по_ордеру_на_тканьRow[] GetМатериальные_ценности_по_ордеру_на_тканьRows() {
                if ((this.Table.ChildRelations["FK__Материаль__ID_Пр__0CDAE408"] == null)) {
                    return new Материальные_ценности_по_ордеру_на_тканьRow[0];
                }
                else {
                    return ((Материальные_ценности_по_ордеру_на_тканьRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Материаль__ID_Пр__0CDAE408"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Приходные_ордера_на_фурнитуруRow : global::System.Data.DataRow {
            
            private Приходные_ордера_на_фурнитуруDataTable tableПриходные_ордера_на_фурнитуру;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Приходные_ордера_на_фурнитуруRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableПриходные_ордера_на_фурнитуру = ((Приходные_ордера_на_фурнитуруDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Приходного_ордера {
                get {
                    return ((int)(this[this.tableПриходные_ордера_на_фурнитуру.ID_Приходного_ордераColumn]));
                }
                set {
                    this[this.tableПриходные_ордера_на_фурнитуру.ID_Приходного_ордераColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Поставщика {
                get {
                    return ((int)(this[this.tableПриходные_ордера_на_фурнитуру.ID_ПоставщикаColumn]));
                }
                set {
                    this[this.tableПриходные_ордера_на_фурнитуру.ID_ПоставщикаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Дата_составления {
                get {
                    return ((global::System.DateTime)(this[this.tableПриходные_ордера_на_фурнитуру.Дата_составленияColumn]));
                }
                set {
                    this[this.tableПриходные_ордера_на_фурнитуру.Дата_составленияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Склад {
                get {
                    return ((string)(this[this.tableПриходные_ордера_на_фурнитуру.СкладColumn]));
                }
                set {
                    this[this.tableПриходные_ордера_на_фурнитуру.СкладColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Корреспондирующий_счет {
                get {
                    return ((string)(this[this.tableПриходные_ордера_на_фурнитуру.Корреспондирующий_счетColumn]));
                }
                set {
                    this[this.tableПриходные_ордера_на_фурнитуру.Корреспондирующий_счетColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Сопроводительный_документ {
                get {
                    return ((string)(this[this.tableПриходные_ордера_на_фурнитуру.Сопроводительный_документColumn]));
                }
                set {
                    this[this.tableПриходные_ордера_на_фурнитуру.Сопроводительный_документColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Сумма {
                get {
                    return ((decimal)(this[this.tableПриходные_ордера_на_фурнитуру.СуммаColumn]));
                }
                set {
                    this[this.tableПриходные_ордера_на_фурнитуру.СуммаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Поставщик {
                get {
                    try {
                        return ((string)(this[this.tableПриходные_ордера_на_фурнитуру.ПоставщикColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Поставщик\' в таблице \'Приходные_ордера_на_фурнитуру\' равно " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableПриходные_ордера_на_фурнитуру.ПоставщикColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПоставщикиRow ПоставщикиRow {
                get {
                    return ((ПоставщикиRow)(this.GetParentRow(this.Table.ParentRelations["FK__Приходные__ID_По__571DF1D5"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Приходные__ID_По__571DF1D5"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsПоставщикNull() {
                return this.IsNull(this.tableПриходные_ордера_на_фурнитуру.ПоставщикColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetПоставщикNull() {
                this[this.tableПриходные_ордера_на_фурнитуру.ПоставщикColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Материальные_ценности_по_ордеру_на_фурнитуруRow[] GetМатериальные_ценности_по_ордеру_на_фурнитуруRows() {
                if ((this.Table.ChildRelations["FK__Материаль__ID_Пр__1F63A897"] == null)) {
                    return new Материальные_ценности_по_ордеру_на_фурнитуруRow[0];
                }
                else {
                    return ((Материальные_ценности_по_ордеру_на_фурнитуруRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Материаль__ID_Пр__1F63A897"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ТканиRow : global::System.Data.DataRow {
            
            private ТканиDataTable tableТкани;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ТканиRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableТкани = ((ТканиDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Ткани {
                get {
                    return ((int)(this[this.tableТкани.ID_ТканиColumn]));
                }
                set {
                    this[this.tableТкани.ID_ТканиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Наименование {
                get {
                    return ((string)(this[this.tableТкани.НаименованиеColumn]));
                }
                set {
                    this[this.tableТкани.НаименованиеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_тканиRow[] GetМодели_тканиRows() {
                if ((this.Table.ChildRelations["FK__Модели_тк__ID_Тк__6C190EBB"] == null)) {
                    return new Модели_тканиRow[0];
                }
                else {
                    return ((Модели_тканиRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Модели_тк__ID_Тк__6C190EBB"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ФурнитураRow : global::System.Data.DataRow {
            
            private ФурнитураDataTable tableФурнитура;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ФурнитураRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableФурнитура = ((ФурнитураDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Фурнитуры {
                get {
                    return ((int)(this[this.tableФурнитура.ID_ФурнитурыColumn]));
                }
                set {
                    this[this.tableФурнитура.ID_ФурнитурыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Наименование {
                get {
                    return ((string)(this[this.tableФурнитура.НаименованиеColumn]));
                }
                set {
                    this[this.tableФурнитура.НаименованиеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_фурнитурыRow[] GetМодели_фурнитурыRows() {
                if ((this.Table.ChildRelations["FK__Модели_фу__ID_Фу__756D6ECB"] == null)) {
                    return new Модели_фурнитурыRow[0];
                }
                else {
                    return ((Модели_фурнитурыRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Модели_фу__ID_Фу__756D6ECB"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ЦехаRow : global::System.Data.DataRow {
            
            private ЦехаDataTable tableЦеха;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ЦехаRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableЦеха = ((ЦехаDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Цеха {
                get {
                    return ((int)(this[this.tableЦеха.ID_ЦехаColumn]));
                }
                set {
                    this[this.tableЦеха.ID_ЦехаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Наименование {
                get {
                    return ((string)(this[this.tableЦеха.НаименованиеColumn]));
                }
                set {
                    this[this.tableЦеха.НаименованиеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public БригадыRow[] GetБригадыRows() {
                if ((this.Table.ChildRelations["FK__Бригады__ID_Цеха__5FB337D6"] == null)) {
                    return new БригадыRow[0];
                }
                else {
                    return ((БригадыRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Бригады__ID_Цеха__5FB337D6"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Модели_фурнитурыRow : global::System.Data.DataRow {
            
            private Модели_фурнитурыDataTable tableМодели_фурнитуры;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Модели_фурнитурыRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableМодели_фурнитуры = ((Модели_фурнитурыDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Модели_фурнитуры {
                get {
                    return ((int)(this[this.tableМодели_фурнитуры.ID_Модели_фурнитурыColumn]));
                }
                set {
                    this[this.tableМодели_фурнитуры.ID_Модели_фурнитурыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Фурнитуры {
                get {
                    return ((int)(this[this.tableМодели_фурнитуры.ID_ФурнитурыColumn]));
                }
                set {
                    this[this.tableМодели_фурнитуры.ID_ФурнитурыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Модель_фурнитуры {
                get {
                    return ((string)(this[this.tableМодели_фурнитуры.Модель_фурнитурыColumn]));
                }
                set {
                    this[this.tableМодели_фурнитуры.Модель_фурнитурыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Наименование {
                get {
                    return ((string)(this[this.tableМодели_фурнитуры.НаименованиеColumn]));
                }
                set {
                    this[this.tableМодели_фурнитуры.НаименованиеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ФурнитураRow ФурнитураRow {
                get {
                    return ((ФурнитураRow)(this.GetParentRow(this.Table.ParentRelations["FK__Модели_фу__ID_Фу__756D6ECB"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Модели_фу__ID_Фу__756D6ECB"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Материальные_ценности_по_ордеру_на_фурнитуруRow[] GetМатериальные_ценности_по_ордеру_на_фурнитуруRows() {
                if ((this.Table.ChildRelations["FK__Материаль__ID_Мо__1E6F845E"] == null)) {
                    return new Материальные_ценности_по_ордеру_на_фурнитуруRow[0];
                }
                else {
                    return ((Материальные_ценности_по_ордеру_на_фурнитуруRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Материаль__ID_Мо__1E6F845E"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Склад_фурнитурыRow[] GetСклад_фурнитурыRows() {
                if ((this.Table.ChildRelations["FK__Склад_фур__ID_Мо__7720AD13"] == null)) {
                    return new Склад_фурнитурыRow[0];
                }
                else {
                    return ((Склад_фурнитурыRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Склад_фур__ID_Мо__7720AD13"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class АвтомобилиRow : global::System.Data.DataRow {
            
            private АвтомобилиDataTable tableАвтомобили;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal АвтомобилиRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableАвтомобили = ((АвтомобилиDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Автомобиля {
                get {
                    return ((int)(this[this.tableАвтомобили.ID_АвтомобиляColumn]));
                }
                set {
                    this[this.tableАвтомобили.ID_АвтомобиляColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Марка {
                get {
                    return ((string)(this[this.tableАвтомобили.МаркаColumn]));
                }
                set {
                    this[this.tableАвтомобили.МаркаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Модель {
                get {
                    return ((string)(this[this.tableАвтомобили.МодельColumn]));
                }
                set {
                    this[this.tableАвтомобили.МодельColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Владелец {
                get {
                    return ((string)(this[this.tableАвтомобили.ВладелецColumn]));
                }
                set {
                    this[this.tableАвтомобили.ВладелецColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Регистрационный_номер {
                get {
                    return ((string)(this[this.tableАвтомобили.Регистрационный_номерColumn]));
                }
                set {
                    this[this.tableАвтомобили.Регистрационный_номерColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарно_транспортные_накладныеRow[] GetТоварно_транспортные_накладныеRows() {
                if ((this.Table.ChildRelations["FK__Товарно_т__ID_Ав__3F9B6DFF"] == null)) {
                    return new Товарно_транспортные_накладныеRow[0];
                }
                else {
                    return ((Товарно_транспортные_накладныеRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Товарно_т__ID_Ав__3F9B6DFF"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Материальные_ценности_по_ордеру_на_фурнитуруRow : global::System.Data.DataRow {
            
            private Материальные_ценности_по_ордеру_на_фурнитуруDataTable tableМатериальные_ценности_по_ордеру_на_фурнитуру;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Материальные_ценности_по_ордеру_на_фурнитуруRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableМатериальные_ценности_по_ордеру_на_фурнитуру = ((Материальные_ценности_по_ордеру_на_фурнитуруDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Материальной_ценности {
                get {
                    return ((int)(this[this.tableМатериальные_ценности_по_ордеру_на_фурнитуру.ID_Материальной_ценностиColumn]));
                }
                set {
                    this[this.tableМатериальные_ценности_по_ордеру_на_фурнитуру.ID_Материальной_ценностиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Модели_фурнитуры {
                get {
                    return ((int)(this[this.tableМатериальные_ценности_по_ордеру_на_фурнитуру.ID_Модели_фурнитурыColumn]));
                }
                set {
                    this[this.tableМатериальные_ценности_по_ордеру_на_фурнитуру.ID_Модели_фурнитурыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Приходного_ордера {
                get {
                    return ((int)(this[this.tableМатериальные_ценности_по_ордеру_на_фурнитуру.ID_Приходного_ордераColumn]));
                }
                set {
                    this[this.tableМатериальные_ценности_по_ордеру_на_фурнитуру.ID_Приходного_ордераColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Количество {
                get {
                    return ((int)(this[this.tableМатериальные_ценности_по_ордеру_на_фурнитуру.КоличествоColumn]));
                }
                set {
                    this[this.tableМатериальные_ценности_по_ордеру_на_фурнитуру.КоличествоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Единица_измерения {
                get {
                    return ((string)(this[this.tableМатериальные_ценности_по_ордеру_на_фурнитуру.Единица_измеренияColumn]));
                }
                set {
                    this[this.tableМатериальные_ценности_по_ордеру_на_фурнитуру.Единица_измеренияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Цена {
                get {
                    return ((decimal)(this[this.tableМатериальные_ценности_по_ордеру_на_фурнитуру.ЦенаColumn]));
                }
                set {
                    this[this.tableМатериальные_ценности_по_ордеру_на_фурнитуру.ЦенаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Сумма {
                get {
                    return ((decimal)(this[this.tableМатериальные_ценности_по_ордеру_на_фурнитуру.СуммаColumn]));
                }
                set {
                    this[this.tableМатериальные_ценности_по_ордеру_на_фурнитуру.СуммаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Материальные_ценности {
                get {
                    try {
                        return ((string)(this[this.tableМатериальные_ценности_по_ордеру_на_фурнитуру.Материальные_ценностиColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Материальные_ценности\' в таблице \'Материальные_ценности_по_" +
                                "ордеру_на_фурнитуру\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМатериальные_ценности_по_ордеру_на_фурнитуру.Материальные_ценностиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Фурнитуры {
                get {
                    return ((int)(this[this.tableМатериальные_ценности_по_ордеру_на_фурнитуру.ID_ФурнитурыColumn]));
                }
                set {
                    this[this.tableМатериальные_ценности_по_ордеру_на_фурнитуру.ID_ФурнитурыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_фурнитурыRow Модели_фурнитурыRow {
                get {
                    return ((Модели_фурнитурыRow)(this.GetParentRow(this.Table.ParentRelations["FK__Материаль__ID_Мо__1E6F845E"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Материаль__ID_Мо__1E6F845E"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Приходные_ордера_на_фурнитуруRow Приходные_ордера_на_фурнитуруRow {
                get {
                    return ((Приходные_ордера_на_фурнитуруRow)(this.GetParentRow(this.Table.ParentRelations["FK__Материаль__ID_Пр__1F63A897"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Материаль__ID_Пр__1F63A897"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsМатериальные_ценностиNull() {
                return this.IsNull(this.tableМатериальные_ценности_по_ордеру_на_фурнитуру.Материальные_ценностиColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetМатериальные_ценностиNull() {
                this[this.tableМатериальные_ценности_по_ордеру_на_фурнитуру.Материальные_ценностиColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Склад_фурнитурыRow : global::System.Data.DataRow {
            
            private Склад_фурнитурыDataTable tableСклад_фурнитуры;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Склад_фурнитурыRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableСклад_фурнитуры = ((Склад_фурнитурыDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Фурнитуры_на_складе {
                get {
                    return ((int)(this[this.tableСклад_фурнитуры.ID_Фурнитуры_на_складеColumn]));
                }
                set {
                    this[this.tableСклад_фурнитуры.ID_Фурнитуры_на_складеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Модели_фурнитуры {
                get {
                    return ((int)(this[this.tableСклад_фурнитуры.ID_Модели_фурнитурыColumn]));
                }
                set {
                    this[this.tableСклад_фурнитуры.ID_Модели_фурнитурыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Единица_измерения {
                get {
                    return ((string)(this[this.tableСклад_фурнитуры.Единица_измеренияColumn]));
                }
                set {
                    this[this.tableСклад_фурнитуры.Единица_измеренияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Количество {
                get {
                    return ((int)(this[this.tableСклад_фурнитуры.КоличествоColumn]));
                }
                set {
                    this[this.tableСклад_фурнитуры.КоличествоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Цена {
                get {
                    return ((decimal)(this[this.tableСклад_фурнитуры.ЦенаColumn]));
                }
                set {
                    this[this.tableСклад_фурнитуры.ЦенаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Фурнитуры {
                get {
                    return ((int)(this[this.tableСклад_фурнитуры.ID_ФурнитурыColumn]));
                }
                set {
                    this[this.tableСклад_фурнитуры.ID_ФурнитурыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Наименование {
                get {
                    return ((string)(this[this.tableСклад_фурнитуры.НаименованиеColumn]));
                }
                set {
                    this[this.tableСклад_фурнитуры.НаименованиеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Модель_фурнитуры {
                get {
                    return ((string)(this[this.tableСклад_фурнитуры.Модель_фурнитурыColumn]));
                }
                set {
                    this[this.tableСклад_фурнитуры.Модель_фурнитурыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_фурнитурыRow Модели_фурнитурыRow {
                get {
                    return ((Модели_фурнитурыRow)(this.GetParentRow(this.Table.ParentRelations["FK__Склад_фур__ID_Мо__7720AD13"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Склад_фур__ID_Мо__7720AD13"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Фурнитура_по_лимитно_заборной_картеRow[] GetФурнитура_по_лимитно_заборной_картеRows() {
                if ((this.Table.ChildRelations["FK__Фурнитура__ID_Фу__7AF13DF7"] == null)) {
                    return new Фурнитура_по_лимитно_заборной_картеRow[0];
                }
                else {
                    return ((Фурнитура_по_лимитно_заборной_картеRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Фурнитура__ID_Фу__7AF13DF7"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Фурнитура_по_лимитно_заборной_картеRow : global::System.Data.DataRow {
            
            private Фурнитура_по_лимитно_заборной_картеDataTable tableФурнитура_по_лимитно_заборной_карте;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Фурнитура_по_лимитно_заборной_картеRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableФурнитура_по_лимитно_заборной_карте = ((Фурнитура_по_лимитно_заборной_картеDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Фурнитруы_по_лимитно_заборной_карте {
                get {
                    return ((int)(this[this.tableФурнитура_по_лимитно_заборной_карте.ID_Фурнитруы_по_лимитно_заборной_картеColumn]));
                }
                set {
                    this[this.tableФурнитура_по_лимитно_заборной_карте.ID_Фурнитруы_по_лимитно_заборной_картеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Лимитно_заборной_карты {
                get {
                    return ((int)(this[this.tableФурнитура_по_лимитно_заборной_карте.ID_Лимитно_заборной_картыColumn]));
                }
                set {
                    this[this.tableФурнитура_по_лимитно_заборной_карте.ID_Лимитно_заборной_картыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Фурнитуры_на_складе {
                get {
                    return ((int)(this[this.tableФурнитура_по_лимитно_заборной_карте.ID_Фурнитуры_на_складеColumn]));
                }
                set {
                    this[this.tableФурнитура_по_лимитно_заборной_карте.ID_Фурнитуры_на_складеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Норма_на_единицу_изделия {
                get {
                    return ((int)(this[this.tableФурнитура_по_лимитно_заборной_карте.Норма_на_единицу_изделияColumn]));
                }
                set {
                    this[this.tableФурнитура_по_лимитно_заборной_карте.Норма_на_единицу_изделияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Единица_измерения {
                get {
                    return ((string)(this[this.tableФурнитура_по_лимитно_заборной_карте.Единица_измеренияColumn]));
                }
                set {
                    this[this.tableФурнитура_по_лимитно_заборной_карте.Единица_измеренияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Количество {
                get {
                    return ((int)(this[this.tableФурнитура_по_лимитно_заборной_карте.КоличествоColumn]));
                }
                set {
                    this[this.tableФурнитура_по_лимитно_заборной_карте.КоличествоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Цена {
                get {
                    return ((decimal)(this[this.tableФурнитура_по_лимитно_заборной_карте.ЦенаColumn]));
                }
                set {
                    this[this.tableФурнитура_по_лимитно_заборной_карте.ЦенаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Сумма {
                get {
                    return ((decimal)(this[this.tableФурнитура_по_лимитно_заборной_карте.СуммаColumn]));
                }
                set {
                    this[this.tableФурнитура_по_лимитно_заборной_карте.СуммаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Наименование_фурнитуры {
                get {
                    try {
                        return ((string)(this[this.tableФурнитура_по_лимитно_заборной_карте.Наименование_фурнитурыColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Наименование_фурнитуры\' в таблице \'Фурнитура_по_лимитно_заб" +
                                "орной_карте\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableФурнитура_по_лимитно_заборной_карте.Наименование_фурнитурыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Склад_фурнитурыRow Склад_фурнитурыRow {
                get {
                    return ((Склад_фурнитурыRow)(this.GetParentRow(this.Table.ParentRelations["FK__Фурнитура__ID_Фу__7AF13DF7"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Фурнитура__ID_Фу__7AF13DF7"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Лимитно_заборные_картыRow Лимитно_заборные_картыRow {
                get {
                    return ((Лимитно_заборные_картыRow)(this.GetParentRow(this.Table.ParentRelations["FK__Фурнитура__ID_Ли__13BCEBC1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Фурнитура__ID_Ли__13BCEBC1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsНаименование_фурнитурыNull() {
                return this.IsNull(this.tableФурнитура_по_лимитно_заборной_карте.Наименование_фурнитурыColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetНаименование_фурнитурыNull() {
                this[this.tableФурнитура_по_лимитно_заборной_карте.Наименование_фурнитурыColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Склад_тканиRow : global::System.Data.DataRow {
            
            private Склад_тканиDataTable tableСклад_ткани;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Склад_тканиRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableСклад_ткани = ((Склад_тканиDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Ткани_на_складе {
                get {
                    return ((int)(this[this.tableСклад_ткани.ID_Ткани_на_складеColumn]));
                }
                set {
                    this[this.tableСклад_ткани.ID_Ткани_на_складеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Модели_ткани {
                get {
                    return ((int)(this[this.tableСклад_ткани.ID_Модели_тканиColumn]));
                }
                set {
                    this[this.tableСклад_ткани.ID_Модели_тканиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Единица_измерения {
                get {
                    return ((string)(this[this.tableСклад_ткани.Единица_измеренияColumn]));
                }
                set {
                    this[this.tableСклад_ткани.Единица_измеренияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Количество {
                get {
                    return ((int)(this[this.tableСклад_ткани.КоличествоColumn]));
                }
                set {
                    this[this.tableСклад_ткани.КоличествоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Цена {
                get {
                    return ((decimal)(this[this.tableСклад_ткани.ЦенаColumn]));
                }
                set {
                    this[this.tableСклад_ткани.ЦенаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Ткани {
                get {
                    return ((int)(this[this.tableСклад_ткани.ID_ТканиColumn]));
                }
                set {
                    this[this.tableСклад_ткани.ID_ТканиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Наименование {
                get {
                    return ((string)(this[this.tableСклад_ткани.НаименованиеColumn]));
                }
                set {
                    this[this.tableСклад_ткани.НаименованиеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Модель_ткани {
                get {
                    return ((string)(this[this.tableСклад_ткани.Модель_тканиColumn]));
                }
                set {
                    this[this.tableСклад_ткани.Модель_тканиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_тканиRow Модели_тканиRow {
                get {
                    return ((Модели_тканиRow)(this.GetParentRow(this.Table.ParentRelations["FK__Склад_тка__ID_Мо__084B3915"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Склад_тка__ID_Мо__084B3915"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Ткань_для_расчётной_картыRow[] GetТкань_для_расчётной_картыRows() {
                if ((this.Table.ChildRelations["FK__Ткань_для__ID_Тк__0D0FEE32"] == null)) {
                    return new Ткань_для_расчётной_картыRow[0];
                }
                else {
                    return ((Ткань_для_расчётной_картыRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Ткань_для__ID_Тк__0D0FEE32"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Ткань_для_расчётной_картыRow : global::System.Data.DataRow {
            
            private Ткань_для_расчётной_картыDataTable tableТкань_для_расчётной_карты;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Ткань_для_расчётной_картыRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableТкань_для_расчётной_карты = ((Ткань_для_расчётной_картыDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Ткани_для_карты {
                get {
                    return ((int)(this[this.tableТкань_для_расчётной_карты.ID_Ткани_для_картыColumn]));
                }
                set {
                    this[this.tableТкань_для_расчётной_карты.ID_Ткани_для_картыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Расчётной_карты {
                get {
                    return ((int)(this[this.tableТкань_для_расчётной_карты.ID_Расчётной_картыColumn]));
                }
                set {
                    this[this.tableТкань_для_расчётной_карты.ID_Расчётной_картыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Ткани_на_складе {
                get {
                    return ((int)(this[this.tableТкань_для_расчётной_карты.ID_Ткани_на_складеColumn]));
                }
                set {
                    this[this.tableТкань_для_расчётной_карты.ID_Ткани_на_складеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Количество {
                get {
                    return ((int)(this[this.tableТкань_для_расчётной_карты.КоличествоColumn]));
                }
                set {
                    this[this.tableТкань_для_расчётной_карты.КоличествоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Единица_измерения {
                get {
                    return ((string)(this[this.tableТкань_для_расчётной_карты.Единица_измеренияColumn]));
                }
                set {
                    this[this.tableТкань_для_расчётной_карты.Единица_измеренияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Наименование {
                get {
                    return ((string)(this[this.tableТкань_для_расчётной_карты.НаименованиеColumn]));
                }
                set {
                    this[this.tableТкань_для_расчётной_карты.НаименованиеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Модель_ткани {
                get {
                    return ((string)(this[this.tableТкань_для_расчётной_карты.Модель_тканиColumn]));
                }
                set {
                    this[this.tableТкань_для_расчётной_карты.Модель_тканиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Склад_тканиRow Склад_тканиRow {
                get {
                    return ((Склад_тканиRow)(this.GetParentRow(this.Table.ParentRelations["FK__Ткань_для__ID_Тк__0D0FEE32"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Ткань_для__ID_Тк__0D0FEE32"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Расчётные_картыRow Расчётные_картыRow {
                get {
                    return ((Расчётные_картыRow)(this.GetParentRow(this.Table.ParentRelations["FK__Ткань_для__ID_Ра__0C1BC9F9"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Ткань_для__ID_Ра__0C1BC9F9"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Лимитно_заборные_картыRow : global::System.Data.DataRow {
            
            private Лимитно_заборные_картыDataTable tableЛимитно_заборные_карты;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Лимитно_заборные_картыRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableЛимитно_заборные_карты = ((Лимитно_заборные_картыDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Лимитно_заборной_карты {
                get {
                    return ((int)(this[this.tableЛимитно_заборные_карты.ID_Лимитно_заборной_картыColumn]));
                }
                set {
                    this[this.tableЛимитно_заборные_карты.ID_Лимитно_заборной_картыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Бригады {
                get {
                    return ((int)(this[this.tableЛимитно_заборные_карты.ID_БригадыColumn]));
                }
                set {
                    this[this.tableЛимитно_заборные_карты.ID_БригадыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Модели_изделия {
                get {
                    return ((int)(this[this.tableЛимитно_заборные_карты.ID_Модели_изделияColumn]));
                }
                set {
                    this[this.tableЛимитно_заборные_карты.ID_Модели_изделияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Дата_составления {
                get {
                    return ((global::System.DateTime)(this[this.tableЛимитно_заборные_карты.Дата_составленияColumn]));
                }
                set {
                    this[this.tableЛимитно_заборные_карты.Дата_составленияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Количество_изделий {
                get {
                    return ((int)(this[this.tableЛимитно_заборные_карты.Количество_изделийColumn]));
                }
                set {
                    this[this.tableЛимитно_заборные_карты.Количество_изделийColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Бригада {
                get {
                    return ((string)(this[this.tableЛимитно_заборные_карты.БригадаColumn]));
                }
                set {
                    this[this.tableЛимитно_заборные_карты.БригадаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Изделие {
                get {
                    return ((string)(this[this.tableЛимитно_заборные_карты.ИзделиеColumn]));
                }
                set {
                    this[this.tableЛимитно_заборные_карты.ИзделиеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Модель_изделия {
                get {
                    return ((string)(this[this.tableЛимитно_заборные_карты.Модель_изделияColumn]));
                }
                set {
                    this[this.tableЛимитно_заборные_карты.Модель_изделияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Цех {
                get {
                    return ((string)(this[this.tableЛимитно_заборные_карты.ЦехColumn]));
                }
                set {
                    this[this.tableЛимитно_заборные_карты.ЦехColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Цеха {
                get {
                    return ((int)(this[this.tableЛимитно_заборные_карты.ID_ЦехаColumn]));
                }
                set {
                    this[this.tableЛимитно_заборные_карты.ID_ЦехаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Изделия {
                get {
                    return ((int)(this[this.tableЛимитно_заборные_карты.ID_ИзделияColumn]));
                }
                set {
                    this[this.tableЛимитно_заборные_карты.ID_ИзделияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_изделияRow Модели_изделияRow {
                get {
                    return ((Модели_изделияRow)(this.GetParentRow(this.Table.ParentRelations["FK__Лимитно_з__ID_Мо__10E07F16"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Лимитно_з__ID_Мо__10E07F16"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Фурнитура_по_лимитно_заборной_картеRow[] GetФурнитура_по_лимитно_заборной_картеRows() {
                if ((this.Table.ChildRelations["FK__Фурнитура__ID_Ли__13BCEBC1"] == null)) {
                    return new Фурнитура_по_лимитно_заборной_картеRow[0];
                }
                else {
                    return ((Фурнитура_по_лимитно_заборной_картеRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Фурнитура__ID_Ли__13BCEBC1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public БригадыRow[] GetБригадыRows() {
                if ((this.Table.ChildRelations["Лимитно_заборные_карты_Бригады"] == null)) {
                    return new БригадыRow[0];
                }
                else {
                    return ((БригадыRow[])(base.GetChildRows(this.Table.ChildRelations["Лимитно_заборные_карты_Бригады"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ВодителиRow : global::System.Data.DataRow {
            
            private ВодителиDataTable tableВодители;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ВодителиRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableВодители = ((ВодителиDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Водителя {
                get {
                    return ((int)(this[this.tableВодители.ID_ВодителяColumn]));
                }
                set {
                    this[this.tableВодители.ID_ВодителяColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ФИО {
                get {
                    return ((string)(this[this.tableВодители.ФИОColumn]));
                }
                set {
                    this[this.tableВодители.ФИОColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Номер_водительского_удостоверения {
                get {
                    return ((string)(this[this.tableВодители.Номер_водительского_удостоверенияColumn]));
                }
                set {
                    this[this.tableВодители.Номер_водительского_удостоверенияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Дата_выдачи_удостоверения {
                get {
                    return ((global::System.DateTime)(this[this.tableВодители.Дата_выдачи_удостоверенияColumn]));
                }
                set {
                    this[this.tableВодители.Дата_выдачи_удостоверенияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарно_транспортные_накладныеRow[] GetТоварно_транспортные_накладныеRows() {
                if ((this.Table.ChildRelations["FK__Товарно_т__ID_Во__408F9238"] == null)) {
                    return new Товарно_транспортные_накладныеRow[0];
                }
                else {
                    return ((Товарно_транспортные_накладныеRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Товарно_т__ID_Во__408F9238"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Товарные_накладныеRow : global::System.Data.DataRow {
            
            private Товарные_накладныеDataTable tableТоварные_накладные;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Товарные_накладныеRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableТоварные_накладные = ((Товарные_накладныеDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Товарной_накладной {
                get {
                    return ((int)(this[this.tableТоварные_накладные.ID_Товарной_накладнойColumn]));
                }
                set {
                    this[this.tableТоварные_накладные.ID_Товарной_накладнойColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Дата_отпуска {
                get {
                    return ((global::System.DateTime)(this[this.tableТоварные_накладные.Дата_отпускаColumn]));
                }
                set {
                    this[this.tableТоварные_накладные.Дата_отпускаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Контрагенты_товарной_накладнойRow[] GetКонтрагенты_товарной_накладнойRows() {
                if ((this.Table.ChildRelations["FK__Контраген__ID_То__4CF5691D"] == null)) {
                    return new Контрагенты_товарной_накладнойRow[0];
                }
                else {
                    return ((Контрагенты_товарной_накладнойRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Контраген__ID_То__4CF5691D"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарный_раздел_товарной_накладнойRow[] GetТоварный_раздел_товарной_накладнойRows() {
                if ((this.Table.ChildRelations["FK__Товарный___ID_То__1B29035F"] == null)) {
                    return new Товарный_раздел_товарной_накладнойRow[0];
                }
                else {
                    return ((Товарный_раздел_товарной_накладнойRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Товарный___ID_То__1B29035F"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Расчётные_картыRow : global::System.Data.DataRow {
            
            private Расчётные_картыDataTable tableРасчётные_карты;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Расчётные_картыRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableРасчётные_карты = ((Расчётные_картыDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Расчётной_карты {
                get {
                    return ((int)(this[this.tableРасчётные_карты.ID_Расчётной_картыColumn]));
                }
                set {
                    this[this.tableРасчётные_карты.ID_Расчётной_картыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Бригады {
                get {
                    return ((int)(this[this.tableРасчётные_карты.ID_БригадыColumn]));
                }
                set {
                    this[this.tableРасчётные_карты.ID_БригадыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Модели_изделия {
                get {
                    return ((int)(this[this.tableРасчётные_карты.ID_Модели_изделияColumn]));
                }
                set {
                    this[this.tableРасчётные_карты.ID_Модели_изделияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Номер_заказа {
                get {
                    return ((string)(this[this.tableРасчётные_карты.Номер_заказаColumn]));
                }
                set {
                    this[this.tableРасчётные_карты.Номер_заказаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Дата_отпуска_ткани {
                get {
                    return ((global::System.DateTime)(this[this.tableРасчётные_карты.Дата_отпуска_тканиColumn]));
                }
                set {
                    this[this.tableРасчётные_карты.Дата_отпуска_тканиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Изделие {
                get {
                    return ((string)(this[this.tableРасчётные_карты.ИзделиеColumn]));
                }
                set {
                    this[this.tableРасчётные_карты.ИзделиеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Модель_изделия {
                get {
                    return ((string)(this[this.tableРасчётные_карты.Модель_изделияColumn]));
                }
                set {
                    this[this.tableРасчётные_карты.Модель_изделияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Цех {
                get {
                    return ((string)(this[this.tableРасчётные_карты.ЦехColumn]));
                }
                set {
                    this[this.tableРасчётные_карты.ЦехColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Бригада {
                get {
                    return ((string)(this[this.tableРасчётные_карты.БригадаColumn]));
                }
                set {
                    this[this.tableРасчётные_карты.БригадаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Изделия {
                get {
                    return ((int)(this[this.tableРасчётные_карты.ID_ИзделияColumn]));
                }
                set {
                    this[this.tableРасчётные_карты.ID_ИзделияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Цеха {
                get {
                    return ((int)(this[this.tableРасчётные_карты.ID_ЦехаColumn]));
                }
                set {
                    this[this.tableРасчётные_карты.ID_ЦехаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_изделияRow Модели_изделияRow {
                get {
                    return ((Модели_изделияRow)(this.GetParentRow(this.Table.ParentRelations["FK__Расчётные__ID_Мо__5B78929E"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Расчётные__ID_Мо__5B78929E"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Ткань_для_расчётной_картыRow[] GetТкань_для_расчётной_картыRows() {
                if ((this.Table.ChildRelations["FK__Ткань_для__ID_Ра__0C1BC9F9"] == null)) {
                    return new Ткань_для_расчётной_картыRow[0];
                }
                else {
                    return ((Ткань_для_расчётной_картыRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Ткань_для__ID_Ра__0C1BC9F9"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public БригадыRow[] GetБригадыRows() {
                if ((this.Table.ChildRelations["Расчётные_карты_Бригады"] == null)) {
                    return new БригадыRow[0];
                }
                else {
                    return ((БригадыRow[])(base.GetChildRows(this.Table.ChildRelations["Расчётные_карты_Бригады"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class КонтрагентыRow : global::System.Data.DataRow {
            
            private КонтрагентыDataTable tableКонтрагенты;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal КонтрагентыRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableКонтрагенты = ((КонтрагентыDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Контрагента {
                get {
                    return ((int)(this[this.tableКонтрагенты.ID_КонтрагентаColumn]));
                }
                set {
                    this[this.tableКонтрагенты.ID_КонтрагентаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string УНП {
                get {
                    return ((string)(this[this.tableКонтрагенты.УНПColumn]));
                }
                set {
                    this[this.tableКонтрагенты.УНПColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Адрес {
                get {
                    return ((string)(this[this.tableКонтрагенты.АдресColumn]));
                }
                set {
                    this[this.tableКонтрагенты.АдресColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Наименование {
                get {
                    return ((string)(this[this.tableКонтрагенты.НаименованиеColumn]));
                }
                set {
                    this[this.tableКонтрагенты.НаименованиеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Контрагенты_товарно_транспортной_накладнойRow[] GetКонтрагенты_товарно_транспортной_накладнойRows() {
                if ((this.Table.ChildRelations["FK__Контраген__ID_Ко__51BA1E3A"] == null)) {
                    return new Контрагенты_товарно_транспортной_накладнойRow[0];
                }
                else {
                    return ((Контрагенты_товарно_транспортной_накладнойRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Контраген__ID_Ко__51BA1E3A"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Контрагенты_товарной_накладнойRow[] GetКонтрагенты_товарной_накладнойRows() {
                if ((this.Table.ChildRelations["FK__Контраген__ID_Ко__4DE98D56"] == null)) {
                    return new Контрагенты_товарной_накладнойRow[0];
                }
                else {
                    return ((Контрагенты_товарной_накладнойRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Контраген__ID_Ко__4DE98D56"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Контрагенты_товарно_транспортной_накладнойRow : global::System.Data.DataRow {
            
            private Контрагенты_товарно_транспортной_накладнойDataTable tableКонтрагенты_товарно_транспортной_накладной;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Контрагенты_товарно_транспортной_накладнойRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableКонтрагенты_товарно_транспортной_накладной = ((Контрагенты_товарно_транспортной_накладнойDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Контрагента_товарно_транспортной_накладной {
                get {
                    return ((int)(this[this.tableКонтрагенты_товарно_транспортной_накладной.ID_Контрагента_товарно_транспортной_накладнойColumn]));
                }
                set {
                    this[this.tableКонтрагенты_товарно_транспортной_накладной.ID_Контрагента_товарно_транспортной_накладнойColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Товарно_транспортной_накладной {
                get {
                    return ((int)(this[this.tableКонтрагенты_товарно_транспортной_накладной.ID_Товарно_транспортной_накладнойColumn]));
                }
                set {
                    this[this.tableКонтрагенты_товарно_транспортной_накладной.ID_Товарно_транспортной_накладнойColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Контрагента {
                get {
                    return ((int)(this[this.tableКонтрагенты_товарно_транспортной_накладной.ID_КонтрагентаColumn]));
                }
                set {
                    this[this.tableКонтрагенты_товарно_транспортной_накладной.ID_КонтрагентаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Тип_контрагента {
                get {
                    return ((string)(this[this.tableКонтрагенты_товарно_транспортной_накладной.Тип_контрагентаColumn]));
                }
                set {
                    this[this.tableКонтрагенты_товарно_транспортной_накладной.Тип_контрагентаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string УНП {
                get {
                    return ((string)(this[this.tableКонтрагенты_товарно_транспортной_накладной.УНПColumn]));
                }
                set {
                    this[this.tableКонтрагенты_товарно_транспортной_накладной.УНПColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Адрес {
                get {
                    return ((string)(this[this.tableКонтрагенты_товарно_транспортной_накладной.АдресColumn]));
                }
                set {
                    this[this.tableКонтрагенты_товарно_транспортной_накладной.АдресColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Наименование {
                get {
                    return ((string)(this[this.tableКонтрагенты_товарно_транспортной_накладной.НаименованиеColumn]));
                }
                set {
                    this[this.tableКонтрагенты_товарно_транспортной_накладной.НаименованиеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КонтрагентыRow КонтрагентыRow {
                get {
                    return ((КонтрагентыRow)(this.GetParentRow(this.Table.ParentRelations["FK__Контраген__ID_Ко__51BA1E3A"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Контраген__ID_Ко__51BA1E3A"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарно_транспортные_накладныеRow Товарно_транспортные_накладныеRow {
                get {
                    return ((Товарно_транспортные_накладныеRow)(this.GetParentRow(this.Table.ParentRelations["FK__Контраген__ID_То__50C5FA01"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Контраген__ID_То__50C5FA01"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Контрагенты_товарной_накладнойRow : global::System.Data.DataRow {
            
            private Контрагенты_товарной_накладнойDataTable tableКонтрагенты_товарной_накладной;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Контрагенты_товарной_накладнойRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableКонтрагенты_товарной_накладной = ((Контрагенты_товарной_накладнойDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Контрагента_товарной_накладной {
                get {
                    return ((int)(this[this.tableКонтрагенты_товарной_накладной.ID_Контрагента_товарной_накладнойColumn]));
                }
                set {
                    this[this.tableКонтрагенты_товарной_накладной.ID_Контрагента_товарной_накладнойColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Товарной_накладной {
                get {
                    return ((int)(this[this.tableКонтрагенты_товарной_накладной.ID_Товарной_накладнойColumn]));
                }
                set {
                    this[this.tableКонтрагенты_товарной_накладной.ID_Товарной_накладнойColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Контрагента {
                get {
                    return ((int)(this[this.tableКонтрагенты_товарной_накладной.ID_КонтрагентаColumn]));
                }
                set {
                    this[this.tableКонтрагенты_товарной_накладной.ID_КонтрагентаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Тип_контрагента {
                get {
                    return ((string)(this[this.tableКонтрагенты_товарной_накладной.Тип_контрагентаColumn]));
                }
                set {
                    this[this.tableКонтрагенты_товарной_накладной.Тип_контрагентаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string УНП {
                get {
                    return ((string)(this[this.tableКонтрагенты_товарной_накладной.УНПColumn]));
                }
                set {
                    this[this.tableКонтрагенты_товарной_накладной.УНПColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Адрес {
                get {
                    return ((string)(this[this.tableКонтрагенты_товарной_накладной.АдресColumn]));
                }
                set {
                    this[this.tableКонтрагенты_товарной_накладной.АдресColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Наименование {
                get {
                    return ((string)(this[this.tableКонтрагенты_товарной_накладной.НаименованиеColumn]));
                }
                set {
                    this[this.tableКонтрагенты_товарной_накладной.НаименованиеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КонтрагентыRow КонтрагентыRow {
                get {
                    return ((КонтрагентыRow)(this.GetParentRow(this.Table.ParentRelations["FK__Контраген__ID_Ко__4DE98D56"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Контраген__ID_Ко__4DE98D56"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарные_накладныеRow Товарные_накладныеRow {
                get {
                    return ((Товарные_накладныеRow)(this.GetParentRow(this.Table.ParentRelations["FK__Контраген__ID_То__4CF5691D"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Контраген__ID_То__4CF5691D"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Товарно_транспортные_накладныеRow : global::System.Data.DataRow {
            
            private Товарно_транспортные_накладныеDataTable tableТоварно_транспортные_накладные;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Товарно_транспортные_накладныеRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableТоварно_транспортные_накладные = ((Товарно_транспортные_накладныеDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Товарно_транспортной_накладной {
                get {
                    return ((int)(this[this.tableТоварно_транспортные_накладные.ID_Товарно_транспортной_накладнойColumn]));
                }
                set {
                    this[this.tableТоварно_транспортные_накладные.ID_Товарно_транспортной_накладнойColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Автомобиля {
                get {
                    return ((int)(this[this.tableТоварно_транспортные_накладные.ID_АвтомобиляColumn]));
                }
                set {
                    this[this.tableТоварно_транспортные_накладные.ID_АвтомобиляColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Водителя {
                get {
                    return ((int)(this[this.tableТоварно_транспортные_накладные.ID_ВодителяColumn]));
                }
                set {
                    this[this.tableТоварно_транспортные_накладные.ID_ВодителяColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Дата_отпуска {
                get {
                    return ((global::System.DateTime)(this[this.tableТоварно_транспортные_накладные.Дата_отпускаColumn]));
                }
                set {
                    this[this.tableТоварно_транспортные_накладные.Дата_отпускаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Основание_отпуска {
                get {
                    return ((string)(this[this.tableТоварно_транспортные_накладные.Основание_отпускаColumn]));
                }
                set {
                    this[this.tableТоварно_транспортные_накладные.Основание_отпускаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Переадресовка {
                get {
                    try {
                        return ((string)(this[this.tableТоварно_транспортные_накладные.ПереадресовкаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Переадресовка\' в таблице \'Товарно_транспортные_накладные\' р" +
                                "авно DBNull.", e);
                    }
                }
                set {
                    this[this.tableТоварно_транспортные_накладные.ПереадресовкаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Способ_погрузки {
                get {
                    return ((string)(this[this.tableТоварно_транспортные_накладные.Способ_погрузкиColumn]));
                }
                set {
                    this[this.tableТоварно_транспортные_накладные.Способ_погрузкиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Способ_разгрузки {
                get {
                    return ((string)(this[this.tableТоварно_транспортные_накладные.Способ_разгрузкиColumn]));
                }
                set {
                    this[this.tableТоварно_транспортные_накладные.Способ_разгрузкиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Марка {
                get {
                    return ((string)(this[this.tableТоварно_транспортные_накладные.МаркаColumn]));
                }
                set {
                    this[this.tableТоварно_транспортные_накладные.МаркаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Модель {
                get {
                    return ((string)(this[this.tableТоварно_транспортные_накладные.МодельColumn]));
                }
                set {
                    this[this.tableТоварно_транспортные_накладные.МодельColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Регистрационный_номер {
                get {
                    return ((string)(this[this.tableТоварно_транспортные_накладные.Регистрационный_номерColumn]));
                }
                set {
                    this[this.tableТоварно_транспортные_накладные.Регистрационный_номерColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Владелец {
                get {
                    return ((string)(this[this.tableТоварно_транспортные_накладные.ВладелецColumn]));
                }
                set {
                    this[this.tableТоварно_транспортные_накладные.ВладелецColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Водитель {
                get {
                    try {
                        return ((string)(this[this.tableТоварно_транспортные_накладные.ВодительColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Водитель\' в таблице \'Товарно_транспортные_накладные\' равно " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableТоварно_транспортные_накладные.ВодительColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public АвтомобилиRow АвтомобилиRow {
                get {
                    return ((АвтомобилиRow)(this.GetParentRow(this.Table.ParentRelations["FK__Товарно_т__ID_Ав__3F9B6DFF"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Товарно_т__ID_Ав__3F9B6DFF"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВодителиRow ВодителиRow {
                get {
                    return ((ВодителиRow)(this.GetParentRow(this.Table.ParentRelations["FK__Товарно_т__ID_Во__408F9238"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Товарно_т__ID_Во__408F9238"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsПереадресовкаNull() {
                return this.IsNull(this.tableТоварно_транспортные_накладные.ПереадресовкаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetПереадресовкаNull() {
                this[this.tableТоварно_транспортные_накладные.ПереадресовкаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsВодительNull() {
                return this.IsNull(this.tableТоварно_транспортные_накладные.ВодительColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetВодительNull() {
                this[this.tableТоварно_транспортные_накладные.ВодительColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Контрагенты_товарно_транспортной_накладнойRow[] GetКонтрагенты_товарно_транспортной_накладнойRows() {
                if ((this.Table.ChildRelations["FK__Контраген__ID_То__50C5FA01"] == null)) {
                    return new Контрагенты_товарно_транспортной_накладнойRow[0];
                }
                else {
                    return ((Контрагенты_товарно_транспортной_накладнойRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Контраген__ID_То__50C5FA01"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарный_раздел_товарно_транспортной_накладнойRow[] GetТоварный_раздел_товарно_транспортной_накладнойRows() {
                if ((this.Table.ChildRelations["FK__Товарный___Масса__473C8FC7"] == null)) {
                    return new Товарный_раздел_товарно_транспортной_накладнойRow[0];
                }
                else {
                    return ((Товарный_раздел_товарно_транспортной_накладнойRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Товарный___Масса__473C8FC7"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Товарный_раздел_товарно_транспортной_накладнойRow : global::System.Data.DataRow {
            
            private Товарный_раздел_товарно_транспортной_накладнойDataTable tableТоварный_раздел_товарно_транспортной_накладной;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Товарный_раздел_товарно_транспортной_накладнойRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableТоварный_раздел_товарно_транспортной_накладной = ((Товарный_раздел_товарно_транспортной_накладнойDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Товарного_раздела {
                get {
                    return ((int)(this[this.tableТоварный_раздел_товарно_транспортной_накладной.ID_Товарного_разделаColumn]));
                }
                set {
                    this[this.tableТоварный_раздел_товарно_транспортной_накладной.ID_Товарного_разделаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Товарно_транспортной_накладной {
                get {
                    return ((int)(this[this.tableТоварный_раздел_товарно_транспортной_накладной.ID_Товарно_транспортной_накладнойColumn]));
                }
                set {
                    this[this.tableТоварный_раздел_товарно_транспортной_накладной.ID_Товарно_транспортной_накладнойColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Готовой_продукции_на_складе {
                get {
                    return ((int)(this[this.tableТоварный_раздел_товарно_транспортной_накладной.ID_Готовой_продукции_на_складеColumn]));
                }
                set {
                    this[this.tableТоварный_раздел_товарно_транспортной_накладной.ID_Готовой_продукции_на_складеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Единица_измерения {
                get {
                    return ((string)(this[this.tableТоварный_раздел_товарно_транспортной_накладной.Единица_измеренияColumn]));
                }
                set {
                    this[this.tableТоварный_раздел_товарно_транспортной_накладной.Единица_измеренияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Количество {
                get {
                    return ((int)(this[this.tableТоварный_раздел_товарно_транспортной_накладной.КоличествоColumn]));
                }
                set {
                    this[this.tableТоварный_раздел_товарно_транспортной_накладной.КоличествоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Цена {
                get {
                    return ((decimal)(this[this.tableТоварный_раздел_товарно_транспортной_накладной.ЦенаColumn]));
                }
                set {
                    this[this.tableТоварный_раздел_товарно_транспортной_накладной.ЦенаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Стоимость {
                get {
                    return ((decimal)(this[this.tableТоварный_раздел_товарно_транспортной_накладной.СтоимостьColumn]));
                }
                set {
                    this[this.tableТоварный_раздел_товарно_транспортной_накладной.СтоимостьColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Ставка_НДС {
                get {
                    try {
                        return ((int)(this[this.tableТоварный_раздел_товарно_транспортной_накладной.Ставка_НДСColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Ставка_НДС\' в таблице \'Товарный_раздел_товарно_транспортной" +
                                "_накладной\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableТоварный_раздел_товарно_транспортной_накладной.Ставка_НДСColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Сумма_НДС {
                get {
                    try {
                        return ((int)(this[this.tableТоварный_раздел_товарно_транспортной_накладной.Сумма_НДСColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Сумма_НДС\' в таблице \'Товарный_раздел_товарно_транспортной_" +
                                "накладной\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableТоварный_раздел_товарно_транспортной_накладной.Сумма_НДСColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Стоимость_с_НДС {
                get {
                    return ((int)(this[this.tableТоварный_раздел_товарно_транспортной_накладной.Стоимость_с_НДСColumn]));
                }
                set {
                    this[this.tableТоварный_раздел_товарно_транспортной_накладной.Стоимость_с_НДСColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Количество_грузовых_мест {
                get {
                    return ((int)(this[this.tableТоварный_раздел_товарно_транспортной_накладной.Количество_грузовых_местColumn]));
                }
                set {
                    this[this.tableТоварный_раздел_товарно_транспортной_накладной.Количество_грузовых_местColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Масса_груза {
                get {
                    try {
                        return ((int)(this[this.tableТоварный_раздел_товарно_транспортной_накладной.Масса_грузаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Масса_груза\' в таблице \'Товарный_раздел_товарно_транспортно" +
                                "й_накладной\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableТоварный_раздел_товарно_транспортной_накладной.Масса_грузаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Модели_изделия {
                get {
                    return ((int)(this[this.tableТоварный_раздел_товарно_транспортной_накладной.ID_Модели_изделияColumn]));
                }
                set {
                    this[this.tableТоварный_раздел_товарно_транспортной_накладной.ID_Модели_изделияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Изделия {
                get {
                    return ((int)(this[this.tableТоварный_раздел_товарно_транспортной_накладной.ID_ИзделияColumn]));
                }
                set {
                    this[this.tableТоварный_раздел_товарно_транспортной_накладной.ID_ИзделияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Модель_изделия {
                get {
                    return ((string)(this[this.tableТоварный_раздел_товарно_транспортной_накладной.Модель_изделияColumn]));
                }
                set {
                    this[this.tableТоварный_раздел_товарно_транспортной_накладной.Модель_изделияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Наименование {
                get {
                    return ((string)(this[this.tableТоварный_раздел_товарно_транспортной_накладной.НаименованиеColumn]));
                }
                set {
                    this[this.tableТоварный_раздел_товарно_транспортной_накладной.НаименованиеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарно_транспортные_накладныеRow Товарно_транспортные_накладныеRow {
                get {
                    return ((Товарно_транспортные_накладныеRow)(this.GetParentRow(this.Table.ParentRelations["FK__Товарный___Масса__473C8FC7"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Товарный___Масса__473C8FC7"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Склад_готовой_продукцииRow Склад_готовой_продукцииRow {
                get {
                    return ((Склад_готовой_продукцииRow)(this.GetParentRow(this.Table.ParentRelations["Склад_готовой_продукции_Товарный_раздел_товарно_транспортной_накладной"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Склад_готовой_продукции_Товарный_раздел_товарно_транспортной_накладной"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsСтавка_НДСNull() {
                return this.IsNull(this.tableТоварный_раздел_товарно_транспортной_накладной.Ставка_НДСColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetСтавка_НДСNull() {
                this[this.tableТоварный_раздел_товарно_транспортной_накладной.Ставка_НДСColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsСумма_НДСNull() {
                return this.IsNull(this.tableТоварный_раздел_товарно_транспортной_накладной.Сумма_НДСColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetСумма_НДСNull() {
                this[this.tableТоварный_раздел_товарно_транспортной_накладной.Сумма_НДСColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsМасса_грузаNull() {
                return this.IsNull(this.tableТоварный_раздел_товарно_транспортной_накладной.Масса_грузаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetМасса_грузаNull() {
                this[this.tableТоварный_раздел_товарно_транспортной_накладной.Масса_грузаColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class БригадыRow : global::System.Data.DataRow {
            
            private БригадыDataTable tableБригады;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal БригадыRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableБригады = ((БригадыDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Бригады {
                get {
                    return ((int)(this[this.tableБригады.ID_БригадыColumn]));
                }
                set {
                    this[this.tableБригады.ID_БригадыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Цеха {
                get {
                    return ((int)(this[this.tableБригады.ID_ЦехаColumn]));
                }
                set {
                    this[this.tableБригады.ID_ЦехаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Цех {
                get {
                    return ((string)(this[this.tableБригады.ЦехColumn]));
                }
                set {
                    this[this.tableБригады.ЦехColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Наименование {
                get {
                    return ((string)(this[this.tableБригады.НаименованиеColumn]));
                }
                set {
                    this[this.tableБригады.НаименованиеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ЦехаRow ЦехаRow {
                get {
                    return ((ЦехаRow)(this.GetParentRow(this.Table.ParentRelations["FK__Бригады__ID_Цеха__5FB337D6"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Бригады__ID_Цеха__5FB337D6"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Расчётные_картыRow Расчётные_картыRow {
                get {
                    return ((Расчётные_картыRow)(this.GetParentRow(this.Table.ParentRelations["Расчётные_карты_Бригады"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Расчётные_карты_Бригады"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Лимитно_заборные_картыRow Лимитно_заборные_картыRow {
                get {
                    return ((Лимитно_заборные_картыRow)(this.GetParentRow(this.Table.ParentRelations["Лимитно_заборные_карты_Бригады"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Лимитно_заборные_карты_Бригады"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Маршрутные_листыRow : global::System.Data.DataRow {
            
            private Маршрутные_листыDataTable tableМаршрутные_листы;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Маршрутные_листыRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableМаршрутные_листы = ((Маршрутные_листыDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Маршрутного_листа {
                get {
                    return ((int)(this[this.tableМаршрутные_листы.ID_Маршрутного_листаColumn]));
                }
                set {
                    this[this.tableМаршрутные_листы.ID_Маршрутного_листаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Модели_изделия {
                get {
                    return ((int)(this[this.tableМаршрутные_листы.ID_Модели_изделияColumn]));
                }
                set {
                    this[this.tableМаршрутные_листы.ID_Модели_изделияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Номер_заказа {
                get {
                    return ((int)(this[this.tableМаршрутные_листы.Номер_заказаColumn]));
                }
                set {
                    this[this.tableМаршрутные_листы.Номер_заказаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Рост {
                get {
                    return ((int)(this[this.tableМаршрутные_листы.РостColumn]));
                }
                set {
                    this[this.tableМаршрутные_листы.РостColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Размер {
                get {
                    return ((int)(this[this.tableМаршрутные_листы.РазмерColumn]));
                }
                set {
                    this[this.tableМаршрутные_листы.РазмерColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Полнота {
                get {
                    return ((int)(this[this.tableМаршрутные_листы.ПолнотаColumn]));
                }
                set {
                    this[this.tableМаршрутные_листы.ПолнотаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Код_цвета {
                get {
                    return ((int)(this[this.tableМаршрутные_листы.Код_цветаColumn]));
                }
                set {
                    this[this.tableМаршрутные_листы.Код_цветаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Модель_изделия {
                get {
                    return ((string)(this[this.tableМаршрутные_листы.Модель_изделияColumn]));
                }
                set {
                    this[this.tableМаршрутные_листы.Модель_изделияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Изделия {
                get {
                    return ((int)(this[this.tableМаршрутные_листы.ID_ИзделияColumn]));
                }
                set {
                    this[this.tableМаршрутные_листы.ID_ИзделияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Наименование {
                get {
                    return ((string)(this[this.tableМаршрутные_листы.НаименованиеColumn]));
                }
                set {
                    this[this.tableМаршрутные_листы.НаименованиеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_изделияRow Модели_изделияRow {
                get {
                    return ((Модели_изделияRow)(this.GetParentRow(this.Table.ParentRelations["Модели_изделия_Маршрутные_листы"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Модели_изделия_Маршрутные_листы"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Изделия_принятые_на_складRow[] GetИзделия_принятые_на_складRows() {
                if ((this.Table.ChildRelations["Маршрутные_листы_Изделия_принятые_на_склад"] == null)) {
                    return new Изделия_принятые_на_складRow[0];
                }
                else {
                    return ((Изделия_принятые_на_складRow[])(base.GetChildRows(this.Table.ChildRelations["Маршрутные_листы_Изделия_принятые_на_склад"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Материальные_ценности_по_ордеру_на_тканьRow : global::System.Data.DataRow {
            
            private Материальные_ценности_по_ордеру_на_тканьDataTable tableМатериальные_ценности_по_ордеру_на_ткань;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Материальные_ценности_по_ордеру_на_тканьRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableМатериальные_ценности_по_ордеру_на_ткань = ((Материальные_ценности_по_ордеру_на_тканьDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Материальной_ценности {
                get {
                    return ((int)(this[this.tableМатериальные_ценности_по_ордеру_на_ткань.ID_Материальной_ценностиColumn]));
                }
                set {
                    this[this.tableМатериальные_ценности_по_ордеру_на_ткань.ID_Материальной_ценностиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Приходного_ордера {
                get {
                    return ((int)(this[this.tableМатериальные_ценности_по_ордеру_на_ткань.ID_Приходного_ордераColumn]));
                }
                set {
                    this[this.tableМатериальные_ценности_по_ордеру_на_ткань.ID_Приходного_ордераColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Модели_ткани {
                get {
                    return ((int)(this[this.tableМатериальные_ценности_по_ордеру_на_ткань.ID_Модели_тканиColumn]));
                }
                set {
                    this[this.tableМатериальные_ценности_по_ордеру_на_ткань.ID_Модели_тканиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Единица_измерения {
                get {
                    return ((string)(this[this.tableМатериальные_ценности_по_ордеру_на_ткань.Единица_измеренияColumn]));
                }
                set {
                    this[this.tableМатериальные_ценности_по_ордеру_на_ткань.Единица_измеренияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Количество {
                get {
                    return ((int)(this[this.tableМатериальные_ценности_по_ордеру_на_ткань.КоличествоColumn]));
                }
                set {
                    this[this.tableМатериальные_ценности_по_ордеру_на_ткань.КоличествоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Цена {
                get {
                    return ((decimal)(this[this.tableМатериальные_ценности_по_ордеру_на_ткань.ЦенаColumn]));
                }
                set {
                    this[this.tableМатериальные_ценности_по_ордеру_на_ткань.ЦенаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Сумма_НДС {
                get {
                    try {
                        return ((decimal)(this[this.tableМатериальные_ценности_по_ордеру_на_ткань.Сумма_НДСColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Сумма_НДС\' в таблице \'Материальные_ценности_по_ордеру_на_тк" +
                                "ань\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМатериальные_ценности_по_ордеру_на_ткань.Сумма_НДСColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Сумма_без_НДС {
                get {
                    return ((decimal)(this[this.tableМатериальные_ценности_по_ордеру_на_ткань.Сумма_без_НДСColumn]));
                }
                set {
                    this[this.tableМатериальные_ценности_по_ордеру_на_ткань.Сумма_без_НДСColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Всего_с_НДС {
                get {
                    return ((decimal)(this[this.tableМатериальные_ценности_по_ордеру_на_ткань.Всего_с_НДСColumn]));
                }
                set {
                    this[this.tableМатериальные_ценности_по_ордеру_на_ткань.Всего_с_НДСColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Ткани {
                get {
                    return ((int)(this[this.tableМатериальные_ценности_по_ордеру_на_ткань.ID_ТканиColumn]));
                }
                set {
                    this[this.tableМатериальные_ценности_по_ордеру_на_ткань.ID_ТканиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Материальные_ценности {
                get {
                    try {
                        return ((string)(this[this.tableМатериальные_ценности_по_ордеру_на_ткань.Материальные_ценностиColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Материальные_ценности\' в таблице \'Материальные_ценности_по_" +
                                "ордеру_на_ткань\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМатериальные_ценности_по_ордеру_на_ткань.Материальные_ценностиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Приходные_ордера_на_тканьRow Приходные_ордера_на_тканьRow {
                get {
                    return ((Приходные_ордера_на_тканьRow)(this.GetParentRow(this.Table.ParentRelations["FK__Материаль__ID_Пр__0CDAE408"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Материаль__ID_Пр__0CDAE408"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsСумма_НДСNull() {
                return this.IsNull(this.tableМатериальные_ценности_по_ордеру_на_ткань.Сумма_НДСColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetСумма_НДСNull() {
                this[this.tableМатериальные_ценности_по_ордеру_на_ткань.Сумма_НДСColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsМатериальные_ценностиNull() {
                return this.IsNull(this.tableМатериальные_ценности_по_ордеру_на_ткань.Материальные_ценностиColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetМатериальные_ценностиNull() {
                this[this.tableМатериальные_ценности_по_ордеру_на_ткань.Материальные_ценностиColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_тканиRow[] GetМодели_тканиRows() {
                if ((this.Table.ChildRelations["Материальные_ценности_по_ордеру_на_ткань_Модели_ткани"] == null)) {
                    return new Модели_тканиRow[0];
                }
                else {
                    return ((Модели_тканиRow[])(base.GetChildRows(this.Table.ChildRelations["Материальные_ценности_по_ордеру_на_ткань_Модели_ткани"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Склад_готовой_продукцииRow : global::System.Data.DataRow {
            
            private Склад_готовой_продукцииDataTable tableСклад_готовой_продукции;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Склад_готовой_продукцииRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableСклад_готовой_продукции = ((Склад_готовой_продукцииDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Готовой_продукции_на_складе {
                get {
                    return ((int)(this[this.tableСклад_готовой_продукции.ID_Готовой_продукции_на_складеColumn]));
                }
                set {
                    this[this.tableСклад_готовой_продукции.ID_Готовой_продукции_на_складеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Модели_изделия {
                get {
                    return ((int)(this[this.tableСклад_готовой_продукции.ID_Модели_изделияColumn]));
                }
                set {
                    this[this.tableСклад_готовой_продукции.ID_Модели_изделияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Сорт {
                get {
                    return ((int)(this[this.tableСклад_готовой_продукции.СортColumn]));
                }
                set {
                    this[this.tableСклад_готовой_продукции.СортColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Единица_измерения {
                get {
                    return ((string)(this[this.tableСклад_готовой_продукции.Единица_измеренияColumn]));
                }
                set {
                    this[this.tableСклад_готовой_продукции.Единица_измеренияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Количество {
                get {
                    return ((int)(this[this.tableСклад_готовой_продукции.КоличествоColumn]));
                }
                set {
                    this[this.tableСклад_готовой_продукции.КоличествоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Изделия {
                get {
                    return ((int)(this[this.tableСклад_готовой_продукции.ID_ИзделияColumn]));
                }
                set {
                    this[this.tableСклад_готовой_продукции.ID_ИзделияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Наименование {
                get {
                    return ((string)(this[this.tableСклад_готовой_продукции.НаименованиеColumn]));
                }
                set {
                    this[this.tableСклад_готовой_продукции.НаименованиеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Модель_изделия {
                get {
                    return ((string)(this[this.tableСклад_готовой_продукции.Модель_изделияColumn]));
                }
                set {
                    this[this.tableСклад_готовой_продукции.Модель_изделияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_изделияRow Модели_изделияRow {
                get {
                    return ((Модели_изделияRow)(this.GetParentRow(this.Table.ParentRelations["Модели_изделия_Склад_готовой_продукции"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Модели_изделия_Склад_готовой_продукции"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарный_раздел_товарной_накладнойRow[] GetТоварный_раздел_товарной_накладнойRows() {
                if ((this.Table.ChildRelations["FK__Товарный___ID_Го__1C1D2798"] == null)) {
                    return new Товарный_раздел_товарной_накладнойRow[0];
                }
                else {
                    return ((Товарный_раздел_товарной_накладнойRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Товарный___ID_Го__1C1D2798"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарный_раздел_товарно_транспортной_накладнойRow[] GetТоварный_раздел_товарно_транспортной_накладнойRows() {
                if ((this.Table.ChildRelations["Склад_готовой_продукции_Товарный_раздел_товарно_транспортной_накладной"] == null)) {
                    return new Товарный_раздел_товарно_транспортной_накладнойRow[0];
                }
                else {
                    return ((Товарный_раздел_товарно_транспортной_накладнойRow[])(base.GetChildRows(this.Table.ChildRelations["Склад_готовой_продукции_Товарный_раздел_товарно_транспортной_накладной"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Товарный_раздел_товарной_накладнойRow : global::System.Data.DataRow {
            
            private Товарный_раздел_товарной_накладнойDataTable tableТоварный_раздел_товарной_накладной;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Товарный_раздел_товарной_накладнойRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableТоварный_раздел_товарной_накладной = ((Товарный_раздел_товарной_накладнойDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Товарного_раздела {
                get {
                    return ((int)(this[this.tableТоварный_раздел_товарной_накладной.ID_Товарного_разделаColumn]));
                }
                set {
                    this[this.tableТоварный_раздел_товарной_накладной.ID_Товарного_разделаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Товарной_накладной {
                get {
                    return ((int)(this[this.tableТоварный_раздел_товарной_накладной.ID_Товарной_накладнойColumn]));
                }
                set {
                    this[this.tableТоварный_раздел_товарной_накладной.ID_Товарной_накладнойColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Готовой_продукции_на_складе {
                get {
                    return ((int)(this[this.tableТоварный_раздел_товарной_накладной.ID_Готовой_продукции_на_складеColumn]));
                }
                set {
                    this[this.tableТоварный_раздел_товарной_накладной.ID_Готовой_продукции_на_складеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Единица_измерения {
                get {
                    return ((string)(this[this.tableТоварный_раздел_товарной_накладной.Единица_измеренияColumn]));
                }
                set {
                    this[this.tableТоварный_раздел_товарной_накладной.Единица_измеренияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Количество {
                get {
                    return ((int)(this[this.tableТоварный_раздел_товарной_накладной.КоличествоColumn]));
                }
                set {
                    this[this.tableТоварный_раздел_товарной_накладной.КоличествоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Цена {
                get {
                    return ((decimal)(this[this.tableТоварный_раздел_товарной_накладной.ЦенаColumn]));
                }
                set {
                    this[this.tableТоварный_раздел_товарной_накладной.ЦенаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Стоимость_продукции {
                get {
                    return ((decimal)(this[this.tableТоварный_раздел_товарной_накладной.Стоимость_продукцииColumn]));
                }
                set {
                    this[this.tableТоварный_раздел_товарной_накладной.Стоимость_продукцииColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Ставка_НДС {
                get {
                    try {
                        return ((int)(this[this.tableТоварный_раздел_товарной_накладной.Ставка_НДСColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Ставка_НДС\' в таблице \'Товарный_раздел_товарной_накладной\' " +
                                "равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableТоварный_раздел_товарной_накладной.Ставка_НДСColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Сумма_НДС {
                get {
                    try {
                        return ((int)(this[this.tableТоварный_раздел_товарной_накладной.Сумма_НДСColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Сумма_НДС\' в таблице \'Товарный_раздел_товарной_накладной\' р" +
                                "авно DBNull.", e);
                    }
                }
                set {
                    this[this.tableТоварный_раздел_товарной_накладной.Сумма_НДСColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Всего_с_НДС {
                get {
                    return ((int)(this[this.tableТоварный_раздел_товарной_накладной.Всего_с_НДСColumn]));
                }
                set {
                    this[this.tableТоварный_раздел_товарной_накладной.Всего_с_НДСColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Материальные_ценности {
                get {
                    try {
                        return ((string)(this[this.tableТоварный_раздел_товарной_накладной.Материальные_ценностиColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Материальные_ценности\' в таблице \'Товарный_раздел_товарной_" +
                                "накладной\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableТоварный_раздел_товарной_накладной.Материальные_ценностиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Склад_готовой_продукцииRow Склад_готовой_продукцииRow {
                get {
                    return ((Склад_готовой_продукцииRow)(this.GetParentRow(this.Table.ParentRelations["FK__Товарный___ID_Го__1C1D2798"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Товарный___ID_Го__1C1D2798"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарные_накладныеRow Товарные_накладныеRow {
                get {
                    return ((Товарные_накладныеRow)(this.GetParentRow(this.Table.ParentRelations["FK__Товарный___ID_То__1B29035F"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Товарный___ID_То__1B29035F"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsСтавка_НДСNull() {
                return this.IsNull(this.tableТоварный_раздел_товарной_накладной.Ставка_НДСColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetСтавка_НДСNull() {
                this[this.tableТоварный_раздел_товарной_накладной.Ставка_НДСColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsСумма_НДСNull() {
                return this.IsNull(this.tableТоварный_раздел_товарной_накладной.Сумма_НДСColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetСумма_НДСNull() {
                this[this.tableТоварный_раздел_товарной_накладной.Сумма_НДСColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsМатериальные_ценностиNull() {
                return this.IsNull(this.tableТоварный_раздел_товарной_накладной.Материальные_ценностиColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetМатериальные_ценностиNull() {
                this[this.tableТоварный_раздел_товарной_накладной.Материальные_ценностиColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Изделия_принятые_на_складRow : global::System.Data.DataRow {
            
            private Изделия_принятые_на_складDataTable tableИзделия_принятые_на_склад;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Изделия_принятые_на_складRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableИзделия_принятые_на_склад = ((Изделия_принятые_на_складDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Принятого_изделия {
                get {
                    return ((int)(this[this.tableИзделия_принятые_на_склад.ID_Принятого_изделияColumn]));
                }
                set {
                    this[this.tableИзделия_принятые_на_склад.ID_Принятого_изделияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Маршрутного_листа {
                get {
                    return ((int)(this[this.tableИзделия_принятые_на_склад.ID_Маршрутного_листаColumn]));
                }
                set {
                    this[this.tableИзделия_принятые_на_склад.ID_Маршрутного_листаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Количество {
                get {
                    return ((int)(this[this.tableИзделия_принятые_на_склад.КоличествоColumn]));
                }
                set {
                    this[this.tableИзделия_принятые_на_склад.КоличествоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Сорт {
                get {
                    return ((int)(this[this.tableИзделия_принятые_на_склад.СортColumn]));
                }
                set {
                    this[this.tableИзделия_принятые_на_склад.СортColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Модели_изделия {
                get {
                    return ((int)(this[this.tableИзделия_принятые_на_склад.ID_Модели_изделияColumn]));
                }
                set {
                    this[this.tableИзделия_принятые_на_склад.ID_Модели_изделияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_Изделия {
                get {
                    return ((int)(this[this.tableИзделия_принятые_на_склад.ID_ИзделияColumn]));
                }
                set {
                    this[this.tableИзделия_принятые_на_склад.ID_ИзделияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Наименование {
                get {
                    return ((string)(this[this.tableИзделия_принятые_на_склад.НаименованиеColumn]));
                }
                set {
                    this[this.tableИзделия_принятые_на_склад.НаименованиеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Модель_изделия {
                get {
                    return ((string)(this[this.tableИзделия_принятые_на_склад.Модель_изделияColumn]));
                }
                set {
                    this[this.tableИзделия_принятые_на_склад.Модель_изделияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Маршрутные_листыRow Маршрутные_листыRow {
                get {
                    return ((Маршрутные_листыRow)(this.GetParentRow(this.Table.ParentRelations["Маршрутные_листы_Изделия_принятые_на_склад"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Маршрутные_листы_Изделия_принятые_на_склад"]);
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ИзделияRowChangeEvent : global::System.EventArgs {
            
            private ИзделияRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ИзделияRowChangeEvent(ИзделияRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ИзделияRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Модели_изделияRowChangeEvent : global::System.EventArgs {
            
            private Модели_изделияRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_изделияRowChangeEvent(Модели_изделияRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_изделияRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Модели_тканиRowChangeEvent : global::System.EventArgs {
            
            private Модели_тканиRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_тканиRowChangeEvent(Модели_тканиRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_тканиRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ПоставщикиRowChangeEvent : global::System.EventArgs {
            
            private ПоставщикиRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПоставщикиRowChangeEvent(ПоставщикиRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПоставщикиRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Приходные_ордера_на_тканьRowChangeEvent : global::System.EventArgs {
            
            private Приходные_ордера_на_тканьRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Приходные_ордера_на_тканьRowChangeEvent(Приходные_ордера_на_тканьRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Приходные_ордера_на_тканьRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Приходные_ордера_на_фурнитуруRowChangeEvent : global::System.EventArgs {
            
            private Приходные_ордера_на_фурнитуруRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Приходные_ордера_на_фурнитуруRowChangeEvent(Приходные_ордера_на_фурнитуруRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Приходные_ордера_на_фурнитуруRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ТканиRowChangeEvent : global::System.EventArgs {
            
            private ТканиRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ТканиRowChangeEvent(ТканиRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ТканиRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ФурнитураRowChangeEvent : global::System.EventArgs {
            
            private ФурнитураRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ФурнитураRowChangeEvent(ФурнитураRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ФурнитураRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ЦехаRowChangeEvent : global::System.EventArgs {
            
            private ЦехаRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ЦехаRowChangeEvent(ЦехаRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ЦехаRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Модели_фурнитурыRowChangeEvent : global::System.EventArgs {
            
            private Модели_фурнитурыRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_фурнитурыRowChangeEvent(Модели_фурнитурыRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Модели_фурнитурыRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class АвтомобилиRowChangeEvent : global::System.EventArgs {
            
            private АвтомобилиRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public АвтомобилиRowChangeEvent(АвтомобилиRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public АвтомобилиRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Материальные_ценности_по_ордеру_на_фурнитуруRowChangeEvent : global::System.EventArgs {
            
            private Материальные_ценности_по_ордеру_на_фурнитуруRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Материальные_ценности_по_ордеру_на_фурнитуруRowChangeEvent(Материальные_ценности_по_ордеру_на_фурнитуруRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Материальные_ценности_по_ордеру_на_фурнитуруRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Склад_фурнитурыRowChangeEvent : global::System.EventArgs {
            
            private Склад_фурнитурыRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Склад_фурнитурыRowChangeEvent(Склад_фурнитурыRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Склад_фурнитурыRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Фурнитура_по_лимитно_заборной_картеRowChangeEvent : global::System.EventArgs {
            
            private Фурнитура_по_лимитно_заборной_картеRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Фурнитура_по_лимитно_заборной_картеRowChangeEvent(Фурнитура_по_лимитно_заборной_картеRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Фурнитура_по_лимитно_заборной_картеRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Склад_тканиRowChangeEvent : global::System.EventArgs {
            
            private Склад_тканиRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Склад_тканиRowChangeEvent(Склад_тканиRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Склад_тканиRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Ткань_для_расчётной_картыRowChangeEvent : global::System.EventArgs {
            
            private Ткань_для_расчётной_картыRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Ткань_для_расчётной_картыRowChangeEvent(Ткань_для_расчётной_картыRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Ткань_для_расчётной_картыRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Лимитно_заборные_картыRowChangeEvent : global::System.EventArgs {
            
            private Лимитно_заборные_картыRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Лимитно_заборные_картыRowChangeEvent(Лимитно_заборные_картыRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Лимитно_заборные_картыRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ВодителиRowChangeEvent : global::System.EventArgs {
            
            private ВодителиRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВодителиRowChangeEvent(ВодителиRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ВодителиRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Товарные_накладныеRowChangeEvent : global::System.EventArgs {
            
            private Товарные_накладныеRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарные_накладныеRowChangeEvent(Товарные_накладныеRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарные_накладныеRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Расчётные_картыRowChangeEvent : global::System.EventArgs {
            
            private Расчётные_картыRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Расчётные_картыRowChangeEvent(Расчётные_картыRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Расчётные_картыRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class КонтрагентыRowChangeEvent : global::System.EventArgs {
            
            private КонтрагентыRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КонтрагентыRowChangeEvent(КонтрагентыRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КонтрагентыRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Контрагенты_товарно_транспортной_накладнойRowChangeEvent : global::System.EventArgs {
            
            private Контрагенты_товарно_транспортной_накладнойRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Контрагенты_товарно_транспортной_накладнойRowChangeEvent(Контрагенты_товарно_транспортной_накладнойRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Контрагенты_товарно_транспортной_накладнойRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Контрагенты_товарной_накладнойRowChangeEvent : global::System.EventArgs {
            
            private Контрагенты_товарной_накладнойRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Контрагенты_товарной_накладнойRowChangeEvent(Контрагенты_товарной_накладнойRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Контрагенты_товарной_накладнойRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Товарно_транспортные_накладныеRowChangeEvent : global::System.EventArgs {
            
            private Товарно_транспортные_накладныеRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарно_транспортные_накладныеRowChangeEvent(Товарно_транспортные_накладныеRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарно_транспортные_накладныеRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Товарный_раздел_товарно_транспортной_накладнойRowChangeEvent : global::System.EventArgs {
            
            private Товарный_раздел_товарно_транспортной_накладнойRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарный_раздел_товарно_транспортной_накладнойRowChangeEvent(Товарный_раздел_товарно_транспортной_накладнойRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарный_раздел_товарно_транспортной_накладнойRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class БригадыRowChangeEvent : global::System.EventArgs {
            
            private БригадыRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public БригадыRowChangeEvent(БригадыRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public БригадыRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Маршрутные_листыRowChangeEvent : global::System.EventArgs {
            
            private Маршрутные_листыRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Маршрутные_листыRowChangeEvent(Маршрутные_листыRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Маршрутные_листыRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Материальные_ценности_по_ордеру_на_тканьRowChangeEvent : global::System.EventArgs {
            
            private Материальные_ценности_по_ордеру_на_тканьRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Материальные_ценности_по_ордеру_на_тканьRowChangeEvent(Материальные_ценности_по_ордеру_на_тканьRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Материальные_ценности_по_ордеру_на_тканьRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Склад_готовой_продукцииRowChangeEvent : global::System.EventArgs {
            
            private Склад_готовой_продукцииRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Склад_готовой_продукцииRowChangeEvent(Склад_готовой_продукцииRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Склад_готовой_продукцииRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Товарный_раздел_товарной_накладнойRowChangeEvent : global::System.EventArgs {
            
            private Товарный_раздел_товарной_накладнойRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарный_раздел_товарной_накладнойRowChangeEvent(Товарный_раздел_товарной_накладнойRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Товарный_раздел_товарной_накладнойRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Изделия_принятые_на_складRowChangeEvent : global::System.EventArgs {
            
            private Изделия_принятые_на_складRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Изделия_принятые_на_складRowChangeEvent(Изделия_принятые_на_складRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Изделия_принятые_на_складRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace AutomationApp.AutomationAppDBDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ИзделияTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ИзделияTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Изделия";
            tableMapping.ColumnMappings.Add("ID_Изделия", "ID_Изделия");
            tableMapping.ColumnMappings.Add("Наименование", "Наименование");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Изделия] WHERE (([ID_Изделия] = @Original_ID_Изделия) AND ([На" +
                "именование] = @Original_Наименование))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Изделия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Изделия", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Изделия] ([Наименование]) VALUES (@Наименование);\r\nSELECT ID_И" +
                "зделия, Наименование FROM Изделия WHERE (ID_Изделия = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Изделия] SET [Наименование] = @Наименование WHERE (([ID_Изделия] = " +
                "@Original_ID_Изделия) AND ([Наименование] = @Original_Наименование));\r\nSELECT ID" +
                "_Изделия, Наименование FROM Изделия WHERE (ID_Изделия = @ID_Изделия)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Изделия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Изделия", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Изделия", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Изделия", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutomationApp.Properties.Settings.Default.AutomationAppDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_Изделия, Наименование FROM dbo.Изделия";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutomationAppDBDataSet.ИзделияDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutomationAppDBDataSet.ИзделияDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutomationAppDBDataSet.ИзделияDataTable dataTable = new AutomationAppDBDataSet.ИзделияDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet.ИзделияDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Изделия");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Изделия, string Original_Наименование) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Изделия));
            if ((Original_Наименование == null)) {
                throw new global::System.ArgumentNullException("Original_Наименование");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Наименование));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Наименование) {
            if ((Наименование == null)) {
                throw new global::System.ArgumentNullException("Наименование");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Наименование));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Наименование, int Original_ID_Изделия, string Original_Наименование, int ID_Изделия) {
            if ((Наименование == null)) {
                throw new global::System.ArgumentNullException("Наименование");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Наименование));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_ID_Изделия));
            if ((Original_Наименование == null)) {
                throw new global::System.ArgumentNullException("Original_Наименование");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_Наименование));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ID_Изделия));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Наименование, int Original_ID_Изделия, string Original_Наименование) {
            return this.Update(Наименование, Original_ID_Изделия, Original_Наименование, Original_ID_Изделия);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Модели_изделияTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Модели_изделияTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Модели_изделия";
            tableMapping.ColumnMappings.Add("ID_Модели_изделия", "ID_Модели_изделия");
            tableMapping.ColumnMappings.Add("ID_Изделия", "ID_Изделия");
            tableMapping.ColumnMappings.Add("Модель_изделия", "Модель_изделия");
            tableMapping.ColumnMappings.Add("Наименование", "Наименование");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Модели_изделия] WHERE (([ID_Модели_изделия] = @Original_ID_Мод" +
                "ели_изделия) AND ([ID_Изделия] = @Original_ID_Изделия) AND ([Модель_изделия] = @" +
                "Original_Модель_изделия))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Модели_изделия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_изделия", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Изделия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Изделия", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Модель_изделия", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Модель_изделия", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Модели_изделия] ([ID_Изделия], [Модель_изделия]) VALUES (@ID_И" +
                "зделия, @Модель_изделия);\r\nSELECT ID_Модели_изделия, ID_Изделия, Модель_изделия " +
                "FROM Модели_изделия WHERE (ID_Модели_изделия = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Изделия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Изделия", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Модель_изделия", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Модель_изделия", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Модели_изделия] SET [ID_Изделия] = @ID_Изделия, [Модель_изделия] = @Модель_изделия WHERE (([ID_Модели_изделия] = @Original_ID_Модели_изделия) AND ([ID_Изделия] = @Original_ID_Изделия) AND ([Модель_изделия] = @Original_Модель_изделия));
SELECT ID_Модели_изделия, ID_Изделия, Модель_изделия FROM Модели_изделия WHERE (ID_Модели_изделия = @ID_Модели_изделия)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Изделия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Изделия", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Модель_изделия", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Модель_изделия", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Модели_изделия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_изделия", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Изделия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Изделия", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Модель_изделия", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Модель_изделия", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Модели_изделия", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_изделия", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutomationApp.Properties.Settings.Default.AutomationAppDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Модели_изделия.ID_Модели_изделия, Модели_изделия.ID_Изделия, Издели" +
                "я.Наименование, Модели_изделия.Модель_изделия\r\nFROM            Модели_изделия IN" +
                "NER JOIN\r\n                         Изделия ON Модели_изделия.ID_Изделия = Издели" +
                "я.ID_Изделия";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutomationAppDBDataSet.Модели_изделияDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutomationAppDBDataSet.Модели_изделияDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutomationAppDBDataSet.Модели_изделияDataTable dataTable = new AutomationAppDBDataSet.Модели_изделияDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet.Модели_изделияDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Модели_изделия");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Модели_изделия, int Original_ID_Изделия, string Original_Модель_изделия) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Модели_изделия));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_Изделия));
            if ((Original_Модель_изделия == null)) {
                throw new global::System.ArgumentNullException("Original_Модель_изделия");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Модель_изделия));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_Изделия, string Модель_изделия) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Изделия));
            if ((Модель_изделия == null)) {
                throw new global::System.ArgumentNullException("Модель_изделия");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Модель_изделия));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Изделия, string Модель_изделия, int Original_ID_Модели_изделия, int Original_ID_Изделия, string Original_Модель_изделия, int ID_Модели_изделия) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Изделия));
            if ((Модель_изделия == null)) {
                throw new global::System.ArgumentNullException("Модель_изделия");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Модель_изделия));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_ID_Модели_изделия));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID_Изделия));
            if ((Original_Модель_изделия == null)) {
                throw new global::System.ArgumentNullException("Original_Модель_изделия");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_Модель_изделия));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(ID_Модели_изделия));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Изделия, string Модель_изделия, int Original_ID_Модели_изделия, int Original_ID_Изделия, string Original_Модель_изделия) {
            return this.Update(ID_Изделия, Модель_изделия, Original_ID_Модели_изделия, Original_ID_Изделия, Original_Модель_изделия, Original_ID_Модели_изделия);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Модели_тканиTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Модели_тканиTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Модели_ткани";
            tableMapping.ColumnMappings.Add("ID_Модели_ткани", "ID_Модели_ткани");
            tableMapping.ColumnMappings.Add("ID_Ткани", "ID_Ткани");
            tableMapping.ColumnMappings.Add("Модель_ткани", "Модель_ткани");
            tableMapping.ColumnMappings.Add("Наименование", "Наименование");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Модели_ткани] WHERE (([ID_Модели_ткани] = @Original_ID_Модели_ткани)" +
                " AND ([ID_Ткани] = @Original_ID_Ткани) AND ([Модель_ткани] = @Original_Модель_тк" +
                "ани))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Модели_ткани", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_ткани", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Ткани", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Ткани", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Модель_ткани", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Модель_ткани", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [Модели_ткани] ([ID_Ткани], [Модель_ткани]) VALUES (@ID_Ткани, @Модел" +
                "ь_ткани);\r\nSELECT ID_Модели_ткани, ID_Ткани, Модель_ткани FROM Модели_ткани WHER" +
                "E (ID_Модели_ткани = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Ткани", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Ткани", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Модель_ткани", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Модель_ткани", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Модели_ткани] SET [ID_Ткани] = @ID_Ткани, [Модель_ткани] = @Модель_ткани WHERE (([ID_Модели_ткани] = @Original_ID_Модели_ткани) AND ([ID_Ткани] = @Original_ID_Ткани) AND ([Модель_ткани] = @Original_Модель_ткани));
SELECT ID_Модели_ткани, ID_Ткани, Модель_ткани FROM Модели_ткани WHERE (ID_Модели_ткани = @ID_Модели_ткани)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Ткани", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Ткани", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Модель_ткани", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Модель_ткани", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Модели_ткани", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_ткани", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Ткани", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Ткани", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Модель_ткани", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Модель_ткани", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Модели_ткани", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_ткани", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutomationApp.Properties.Settings.Default.AutomationAppDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Модели_ткани.ID_Модели_ткани, Модели_ткани.ID_Ткани, Ткани.Наименов" +
                "ание, Модели_ткани.Модель_ткани\r\nFROM            Модели_ткани INNER JOIN\r\n      " +
                "                   Ткани ON Модели_ткани.ID_Ткани = Ткани.ID_Ткани";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutomationAppDBDataSet.Модели_тканиDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutomationAppDBDataSet.Модели_тканиDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutomationAppDBDataSet.Модели_тканиDataTable dataTable = new AutomationAppDBDataSet.Модели_тканиDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet.Модели_тканиDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Модели_ткани");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Модели_ткани, int Original_ID_Ткани, string Original_Модель_ткани) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Модели_ткани));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_Ткани));
            if ((Original_Модель_ткани == null)) {
                throw new global::System.ArgumentNullException("Original_Модель_ткани");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Модель_ткани));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_Ткани, string Модель_ткани) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Ткани));
            if ((Модель_ткани == null)) {
                throw new global::System.ArgumentNullException("Модель_ткани");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Модель_ткани));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Ткани, string Модель_ткани, int Original_ID_Модели_ткани, int Original_ID_Ткани, string Original_Модель_ткани, int ID_Модели_ткани) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Ткани));
            if ((Модель_ткани == null)) {
                throw new global::System.ArgumentNullException("Модель_ткани");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Модель_ткани));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_ID_Модели_ткани));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID_Ткани));
            if ((Original_Модель_ткани == null)) {
                throw new global::System.ArgumentNullException("Original_Модель_ткани");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_Модель_ткани));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(ID_Модели_ткани));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Ткани, string Модель_ткани, int Original_ID_Модели_ткани, int Original_ID_Ткани, string Original_Модель_ткани) {
            return this.Update(ID_Ткани, Модель_ткани, Original_ID_Модели_ткани, Original_ID_Ткани, Original_Модель_ткани, Original_ID_Модели_ткани);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ПоставщикиTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ПоставщикиTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Поставщики";
            tableMapping.ColumnMappings.Add("ID_Поставщика", "ID_Поставщика");
            tableMapping.ColumnMappings.Add("Поставщик", "Поставщик");
            tableMapping.ColumnMappings.Add("Наименование", "Наименование");
            tableMapping.ColumnMappings.Add("Адрес", "Адрес");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Поставщики] WHERE (([ID_Поставщика] = @Original_ID_Поставщика)" +
                " AND ([Наименование] = @Original_Наименование) AND ([Адрес] = @Original_Адрес))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Поставщика", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Поставщика", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Адрес", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Адрес", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Поставщики] ([Наименование], [Адрес]) VALUES (@Наименование, @" +
                "Адрес);\r\nSELECT ID_Поставщика, Наименование, Адрес FROM Поставщики WHERE (ID_Пос" +
                "тавщика = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Адрес", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Адрес", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Поставщики] SET [Наименование] = @Наименование, [Адрес] = @Адрес WHERE (([ID_Поставщика] = @Original_ID_Поставщика) AND ([Наименование] = @Original_Наименование) AND ([Адрес] = @Original_Адрес));
SELECT ID_Поставщика, Наименование, Адрес FROM Поставщики WHERE (ID_Поставщика = @ID_Поставщика)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Адрес", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Адрес", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Поставщика", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Поставщика", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Адрес", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Адрес", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Поставщика", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Поставщика", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutomationApp.Properties.Settings.Default.AutomationAppDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        ID_Поставщика, Наименование + \' \' + Адрес AS Поставщик, Наименовани" +
                "е, Адрес\r\nFROM            Поставщики";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutomationAppDBDataSet.ПоставщикиDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutomationAppDBDataSet.ПоставщикиDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutomationAppDBDataSet.ПоставщикиDataTable dataTable = new AutomationAppDBDataSet.ПоставщикиDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet.ПоставщикиDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Поставщики");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Поставщика, string Original_Наименование, string Original_Адрес) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Поставщика));
            if ((Original_Наименование == null)) {
                throw new global::System.ArgumentNullException("Original_Наименование");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Наименование));
            }
            if ((Original_Адрес == null)) {
                throw new global::System.ArgumentNullException("Original_Адрес");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Адрес));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Наименование, string Адрес) {
            if ((Наименование == null)) {
                throw new global::System.ArgumentNullException("Наименование");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Наименование));
            }
            if ((Адрес == null)) {
                throw new global::System.ArgumentNullException("Адрес");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Адрес));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Наименование, string Адрес, int Original_ID_Поставщика, string Original_Наименование, string Original_Адрес, int ID_Поставщика) {
            if ((Наименование == null)) {
                throw new global::System.ArgumentNullException("Наименование");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Наименование));
            }
            if ((Адрес == null)) {
                throw new global::System.ArgumentNullException("Адрес");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Адрес));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_ID_Поставщика));
            if ((Original_Наименование == null)) {
                throw new global::System.ArgumentNullException("Original_Наименование");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_Наименование));
            }
            if ((Original_Адрес == null)) {
                throw new global::System.ArgumentNullException("Original_Адрес");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_Адрес));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(ID_Поставщика));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Наименование, string Адрес, int Original_ID_Поставщика, string Original_Наименование, string Original_Адрес) {
            return this.Update(Наименование, Адрес, Original_ID_Поставщика, Original_Наименование, Original_Адрес, Original_ID_Поставщика);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Приходные_ордера_на_тканьTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Приходные_ордера_на_тканьTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Приходные_ордера_на_ткань";
            tableMapping.ColumnMappings.Add("ID_Приходного_ордера", "ID_Приходного_ордера");
            tableMapping.ColumnMappings.Add("ID_Поставщика", "ID_Поставщика");
            tableMapping.ColumnMappings.Add("Дата_составления", "Дата_составления");
            tableMapping.ColumnMappings.Add("Склад", "Склад");
            tableMapping.ColumnMappings.Add("Корреспондирующий_счет", "Корреспондирующий_счет");
            tableMapping.ColumnMappings.Add("Сопроводительный_документ", "Сопроводительный_документ");
            tableMapping.ColumnMappings.Add("Сумма", "Сумма");
            tableMapping.ColumnMappings.Add("Поставщик", "Поставщик");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Приходные_ордера_на_ткань] WHERE (([ID_Приходного_ордера] = @Original_ID_Приходного_ордера) AND ([ID_Поставщика] = @Original_ID_Поставщика) AND ([Дата_составления] = @Original_Дата_составления) AND ([Склад] = @Original_Склад) AND ([Корреспондирующий_счет] = @Original_Корреспондирующий_счет) AND ([Сопроводительный_документ] = @Original_Сопроводительный_документ) AND ([Сумма] = @Original_Сумма))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Приходного_ордера", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Приходного_ордера", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Поставщика", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Поставщика", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_составления", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_составления", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Склад", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Склад", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Корреспондирующий_счет", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Корреспондирующий_счет", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Сопроводительный_документ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сопроводительный_документ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Сумма", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Приходные_ордера_на_ткань] ([ID_Поставщика], [Дата_составления], [Склад], [Корреспондирующий_счет], [Сопроводительный_документ], [Сумма]) VALUES (@ID_Поставщика, @Дата_составления, @Склад, @Корреспондирующий_счет, @Сопроводительный_документ, @Сумма);
SELECT ID_Приходного_ордера, ID_Поставщика, Дата_составления, Склад, Корреспондирующий_счет, Сопроводительный_документ, Сумма FROM Приходные_ордера_на_ткань WHERE (ID_Приходного_ордера = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Поставщика", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Поставщика", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_составления", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_составления", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Склад", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Склад", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Корреспондирующий_счет", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Корреспондирующий_счет", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Сопроводительный_документ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сопроводительный_документ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Сумма", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Приходные_ордера_на_ткань] SET [ID_Поставщика] = @ID_Поставщика, [Дата_составления] = @Дата_составления, [Склад] = @Склад, [Корреспондирующий_счет] = @Корреспондирующий_счет, [Сопроводительный_документ] = @Сопроводительный_документ, [Сумма] = @Сумма WHERE (([ID_Приходного_ордера] = @Original_ID_Приходного_ордера) AND ([ID_Поставщика] = @Original_ID_Поставщика) AND ([Дата_составления] = @Original_Дата_составления) AND ([Склад] = @Original_Склад) AND ([Корреспондирующий_счет] = @Original_Корреспондирующий_счет) AND ([Сопроводительный_документ] = @Original_Сопроводительный_документ) AND ([Сумма] = @Original_Сумма));
SELECT ID_Приходного_ордера, ID_Поставщика, Дата_составления, Склад, Корреспондирующий_счет, Сопроводительный_документ, Сумма FROM Приходные_ордера_на_ткань WHERE (ID_Приходного_ордера = @ID_Приходного_ордера)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Поставщика", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Поставщика", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_составления", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_составления", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Склад", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Склад", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Корреспондирующий_счет", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Корреспондирующий_счет", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Сопроводительный_документ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сопроводительный_документ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Сумма", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Приходного_ордера", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Приходного_ордера", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Поставщика", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Поставщика", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_составления", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_составления", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Склад", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Склад", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Корреспондирующий_счет", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Корреспондирующий_счет", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Сопроводительный_документ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сопроводительный_документ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Сумма", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Приходного_ордера", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Приходного_ордера", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutomationApp.Properties.Settings.Default.AutomationAppDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Приходные_ордера_на_ткань.ID_Приходного_ордера, Приходные_ордера_на_ткань.ID_Поставщика, Приходные_ордера_на_ткань.Дата_составления, Приходные_ордера_на_ткань.Склад, 
                         Приходные_ордера_на_ткань.Корреспондирующий_счет, Приходные_ордера_на_ткань.Сопроводительный_документ, Приходные_ордера_на_ткань.Сумма, 
                         Поставщики.Наименование + ' ' + Поставщики.Адрес AS Поставщик
FROM            Приходные_ордера_на_ткань INNER JOIN
                         Поставщики ON Приходные_ордера_на_ткань.ID_Поставщика = Поставщики.ID_Поставщика";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutomationAppDBDataSet.Приходные_ордера_на_тканьDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutomationAppDBDataSet.Приходные_ордера_на_тканьDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutomationAppDBDataSet.Приходные_ордера_на_тканьDataTable dataTable = new AutomationAppDBDataSet.Приходные_ордера_на_тканьDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet.Приходные_ордера_на_тканьDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Приходные_ордера_на_ткань");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Приходного_ордера, int Original_ID_Поставщика, System.DateTime Original_Дата_составления, string Original_Склад, string Original_Корреспондирующий_счет, string Original_Сопроводительный_документ, decimal Original_Сумма) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Приходного_ордера));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_Поставщика));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_Дата_составления));
            if ((Original_Склад == null)) {
                throw new global::System.ArgumentNullException("Original_Склад");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Склад));
            }
            if ((Original_Корреспондирующий_счет == null)) {
                throw new global::System.ArgumentNullException("Original_Корреспондирующий_счет");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Корреспондирующий_счет));
            }
            if ((Original_Сопроводительный_документ == null)) {
                throw new global::System.ArgumentNullException("Original_Сопроводительный_документ");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Сопроводительный_документ));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_Сумма));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_Поставщика, System.DateTime Дата_составления, string Склад, string Корреспондирующий_счет, string Сопроводительный_документ, decimal Сумма) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Поставщика));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(Дата_составления));
            if ((Склад == null)) {
                throw new global::System.ArgumentNullException("Склад");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Склад));
            }
            if ((Корреспондирующий_счет == null)) {
                throw new global::System.ArgumentNullException("Корреспондирующий_счет");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Корреспондирующий_счет));
            }
            if ((Сопроводительный_документ == null)) {
                throw new global::System.ArgumentNullException("Сопроводительный_документ");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Сопроводительный_документ));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(Сумма));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Поставщика, System.DateTime Дата_составления, string Склад, string Корреспондирующий_счет, string Сопроводительный_документ, decimal Сумма, int Original_ID_Приходного_ордера, int Original_ID_Поставщика, System.DateTime Original_Дата_составления, string Original_Склад, string Original_Корреспондирующий_счет, string Original_Сопроводительный_документ, decimal Original_Сумма, int ID_Приходного_ордера) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Поставщика));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(Дата_составления));
            if ((Склад == null)) {
                throw new global::System.ArgumentNullException("Склад");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Склад));
            }
            if ((Корреспондирующий_счет == null)) {
                throw new global::System.ArgumentNullException("Корреспондирующий_счет");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Корреспондирующий_счет));
            }
            if ((Сопроводительный_документ == null)) {
                throw new global::System.ArgumentNullException("Сопроводительный_документ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Сопроводительный_документ));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Сумма));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ID_Приходного_ордера));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_ID_Поставщика));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Original_Дата_составления));
            if ((Original_Склад == null)) {
                throw new global::System.ArgumentNullException("Original_Склад");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Склад));
            }
            if ((Original_Корреспондирующий_счет == null)) {
                throw new global::System.ArgumentNullException("Original_Корреспондирующий_счет");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Корреспондирующий_счет));
            }
            if ((Original_Сопроводительный_документ == null)) {
                throw new global::System.ArgumentNullException("Original_Сопроводительный_документ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Сопроводительный_документ));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_Сумма));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(ID_Приходного_ордера));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Поставщика, System.DateTime Дата_составления, string Склад, string Корреспондирующий_счет, string Сопроводительный_документ, decimal Сумма, int Original_ID_Приходного_ордера, int Original_ID_Поставщика, System.DateTime Original_Дата_составления, string Original_Склад, string Original_Корреспондирующий_счет, string Original_Сопроводительный_документ, decimal Original_Сумма) {
            return this.Update(ID_Поставщика, Дата_составления, Склад, Корреспондирующий_счет, Сопроводительный_документ, Сумма, Original_ID_Приходного_ордера, Original_ID_Поставщика, Original_Дата_составления, Original_Склад, Original_Корреспондирующий_счет, Original_Сопроводительный_документ, Original_Сумма, Original_ID_Приходного_ордера);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Приходные_ордера_на_фурнитуруTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Приходные_ордера_на_фурнитуруTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Приходные_ордера_на_фурнитуру";
            tableMapping.ColumnMappings.Add("ID_Приходного_ордера", "ID_Приходного_ордера");
            tableMapping.ColumnMappings.Add("ID_Поставщика", "ID_Поставщика");
            tableMapping.ColumnMappings.Add("Дата_составления", "Дата_составления");
            tableMapping.ColumnMappings.Add("Склад", "Склад");
            tableMapping.ColumnMappings.Add("Корреспондирующий_счет", "Корреспондирующий_счет");
            tableMapping.ColumnMappings.Add("Сопроводительный_документ", "Сопроводительный_документ");
            tableMapping.ColumnMappings.Add("Сумма", "Сумма");
            tableMapping.ColumnMappings.Add("Поставщик", "Поставщик");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Приходные_ордера_на_фурнитуру] WHERE (([ID_Приходного_ордера] = @Original_ID_Приходного_ордера) AND ([ID_Поставщика] = @Original_ID_Поставщика) AND ([Дата_составления] = @Original_Дата_составления) AND ([Склад] = @Original_Склад) AND ([Корреспондирующий_счет] = @Original_Корреспондирующий_счет) AND ([Сопроводительный_документ] = @Original_Сопроводительный_документ) AND ([Сумма] = @Original_Сумма))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Приходного_ордера", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Приходного_ордера", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Поставщика", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Поставщика", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_составления", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_составления", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Склад", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Склад", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Корреспондирующий_счет", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Корреспондирующий_счет", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Сопроводительный_документ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сопроводительный_документ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Сумма", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Приходные_ордера_на_фурнитуру] ([ID_Поставщика], [Дата_составления], [Склад], [Корреспондирующий_счет], [Сопроводительный_документ], [Сумма]) VALUES (@ID_Поставщика, @Дата_составления, @Склад, @Корреспондирующий_счет, @Сопроводительный_документ, @Сумма);
SELECT ID_Приходного_ордера, ID_Поставщика, Дата_составления, Склад, Корреспондирующий_счет, Сопроводительный_документ, Сумма FROM Приходные_ордера_на_фурнитуру WHERE (ID_Приходного_ордера = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Поставщика", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Поставщика", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_составления", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_составления", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Склад", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Склад", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Корреспондирующий_счет", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Корреспондирующий_счет", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Сопроводительный_документ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сопроводительный_документ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Сумма", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Приходные_ордера_на_фурнитуру] SET [ID_Поставщика] = @ID_Поставщика, [Дата_составления] = @Дата_составления, [Склад] = @Склад, [Корреспондирующий_счет] = @Корреспондирующий_счет, [Сопроводительный_документ] = @Сопроводительный_документ, [Сумма] = @Сумма WHERE (([ID_Приходного_ордера] = @Original_ID_Приходного_ордера) AND ([ID_Поставщика] = @Original_ID_Поставщика) AND ([Дата_составления] = @Original_Дата_составления) AND ([Склад] = @Original_Склад) AND ([Корреспондирующий_счет] = @Original_Корреспондирующий_счет) AND ([Сопроводительный_документ] = @Original_Сопроводительный_документ) AND ([Сумма] = @Original_Сумма));
SELECT ID_Приходного_ордера, ID_Поставщика, Дата_составления, Склад, Корреспондирующий_счет, Сопроводительный_документ, Сумма FROM Приходные_ордера_на_фурнитуру WHERE (ID_Приходного_ордера = @ID_Приходного_ордера)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Поставщика", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Поставщика", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_составления", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_составления", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Склад", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Склад", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Корреспондирующий_счет", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Корреспондирующий_счет", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Сопроводительный_документ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сопроводительный_документ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Сумма", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Приходного_ордера", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Приходного_ордера", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Поставщика", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Поставщика", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_составления", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_составления", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Склад", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Склад", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Корреспондирующий_счет", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Корреспондирующий_счет", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Сопроводительный_документ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сопроводительный_документ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Сумма", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Приходного_ордера", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Приходного_ордера", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutomationApp.Properties.Settings.Default.AutomationAppDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Приходные_ордера_на_фурнитуру.ID_Приходного_ордера, Приходные_ордера_на_фурнитуру.ID_Поставщика, Приходные_ордера_на_фурнитуру.Дата_составления, 
                         Поставщики.Наименование + Поставщики.Адрес AS Поставщик, Приходные_ордера_на_фурнитуру.Склад, Приходные_ордера_на_фурнитуру.Корреспондирующий_счет, 
                         Приходные_ордера_на_фурнитуру.Сопроводительный_документ, Приходные_ордера_на_фурнитуру.Сумма
FROM            Приходные_ордера_на_фурнитуру INNER JOIN
                         Поставщики ON Приходные_ордера_на_фурнитуру.ID_Поставщика = Поставщики.ID_Поставщика";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutomationAppDBDataSet.Приходные_ордера_на_фурнитуруDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutomationAppDBDataSet.Приходные_ордера_на_фурнитуруDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutomationAppDBDataSet.Приходные_ордера_на_фурнитуруDataTable dataTable = new AutomationAppDBDataSet.Приходные_ордера_на_фурнитуруDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet.Приходные_ордера_на_фурнитуруDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Приходные_ордера_на_фурнитуру");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Приходного_ордера, int Original_ID_Поставщика, System.DateTime Original_Дата_составления, string Original_Склад, string Original_Корреспондирующий_счет, string Original_Сопроводительный_документ, decimal Original_Сумма) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Приходного_ордера));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_Поставщика));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_Дата_составления));
            if ((Original_Склад == null)) {
                throw new global::System.ArgumentNullException("Original_Склад");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Склад));
            }
            if ((Original_Корреспондирующий_счет == null)) {
                throw new global::System.ArgumentNullException("Original_Корреспондирующий_счет");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Корреспондирующий_счет));
            }
            if ((Original_Сопроводительный_документ == null)) {
                throw new global::System.ArgumentNullException("Original_Сопроводительный_документ");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Сопроводительный_документ));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_Сумма));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_Поставщика, System.DateTime Дата_составления, string Склад, string Корреспондирующий_счет, string Сопроводительный_документ, decimal Сумма) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Поставщика));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(Дата_составления));
            if ((Склад == null)) {
                throw new global::System.ArgumentNullException("Склад");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Склад));
            }
            if ((Корреспондирующий_счет == null)) {
                throw new global::System.ArgumentNullException("Корреспондирующий_счет");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Корреспондирующий_счет));
            }
            if ((Сопроводительный_документ == null)) {
                throw new global::System.ArgumentNullException("Сопроводительный_документ");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Сопроводительный_документ));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(Сумма));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Поставщика, System.DateTime Дата_составления, string Склад, string Корреспондирующий_счет, string Сопроводительный_документ, decimal Сумма, int Original_ID_Приходного_ордера, int Original_ID_Поставщика, System.DateTime Original_Дата_составления, string Original_Склад, string Original_Корреспондирующий_счет, string Original_Сопроводительный_документ, decimal Original_Сумма, int ID_Приходного_ордера) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Поставщика));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(Дата_составления));
            if ((Склад == null)) {
                throw new global::System.ArgumentNullException("Склад");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Склад));
            }
            if ((Корреспондирующий_счет == null)) {
                throw new global::System.ArgumentNullException("Корреспондирующий_счет");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Корреспондирующий_счет));
            }
            if ((Сопроводительный_документ == null)) {
                throw new global::System.ArgumentNullException("Сопроводительный_документ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Сопроводительный_документ));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Сумма));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ID_Приходного_ордера));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_ID_Поставщика));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Original_Дата_составления));
            if ((Original_Склад == null)) {
                throw new global::System.ArgumentNullException("Original_Склад");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Склад));
            }
            if ((Original_Корреспондирующий_счет == null)) {
                throw new global::System.ArgumentNullException("Original_Корреспондирующий_счет");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Корреспондирующий_счет));
            }
            if ((Original_Сопроводительный_документ == null)) {
                throw new global::System.ArgumentNullException("Original_Сопроводительный_документ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Сопроводительный_документ));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_Сумма));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(ID_Приходного_ордера));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Поставщика, System.DateTime Дата_составления, string Склад, string Корреспондирующий_счет, string Сопроводительный_документ, decimal Сумма, int Original_ID_Приходного_ордера, int Original_ID_Поставщика, System.DateTime Original_Дата_составления, string Original_Склад, string Original_Корреспондирующий_счет, string Original_Сопроводительный_документ, decimal Original_Сумма) {
            return this.Update(ID_Поставщика, Дата_составления, Склад, Корреспондирующий_счет, Сопроводительный_документ, Сумма, Original_ID_Приходного_ордера, Original_ID_Поставщика, Original_Дата_составления, Original_Склад, Original_Корреспондирующий_счет, Original_Сопроводительный_документ, Original_Сумма, Original_ID_Приходного_ордера);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ТканиTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ТканиTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Ткани";
            tableMapping.ColumnMappings.Add("ID_Ткани", "ID_Ткани");
            tableMapping.ColumnMappings.Add("Наименование", "Наименование");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Ткани] WHERE (([ID_Ткани] = @Original_ID_Ткани) AND ([Наименов" +
                "ание] = @Original_Наименование))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Ткани", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Ткани", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Ткани] ([Наименование]) VALUES (@Наименование);\r\nSELECT ID_Тка" +
                "ни, Наименование FROM Ткани WHERE (ID_Ткани = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Ткани] SET [Наименование] = @Наименование WHERE (([ID_Ткани] = @Ori" +
                "ginal_ID_Ткани) AND ([Наименование] = @Original_Наименование));\r\nSELECT ID_Ткани" +
                ", Наименование FROM Ткани WHERE (ID_Ткани = @ID_Ткани)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Ткани", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Ткани", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Ткани", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Ткани", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutomationApp.Properties.Settings.Default.AutomationAppDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_Ткани, Наименование FROM dbo.Ткани";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutomationAppDBDataSet.ТканиDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutomationAppDBDataSet.ТканиDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutomationAppDBDataSet.ТканиDataTable dataTable = new AutomationAppDBDataSet.ТканиDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet.ТканиDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Ткани");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Ткани, string Original_Наименование) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Ткани));
            if ((Original_Наименование == null)) {
                throw new global::System.ArgumentNullException("Original_Наименование");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Наименование));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Наименование) {
            if ((Наименование == null)) {
                throw new global::System.ArgumentNullException("Наименование");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Наименование));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Наименование, int Original_ID_Ткани, string Original_Наименование, int ID_Ткани) {
            if ((Наименование == null)) {
                throw new global::System.ArgumentNullException("Наименование");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Наименование));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_ID_Ткани));
            if ((Original_Наименование == null)) {
                throw new global::System.ArgumentNullException("Original_Наименование");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_Наименование));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ID_Ткани));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Наименование, int Original_ID_Ткани, string Original_Наименование) {
            return this.Update(Наименование, Original_ID_Ткани, Original_Наименование, Original_ID_Ткани);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ФурнитураTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ФурнитураTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Фурнитура";
            tableMapping.ColumnMappings.Add("ID_Фурнитуры", "ID_Фурнитуры");
            tableMapping.ColumnMappings.Add("Наименование", "Наименование");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Фурнитура] WHERE (([ID_Фурнитуры] = @Original_ID_Фурнитуры) AN" +
                "D ([Наименование] = @Original_Наименование))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Фурнитуры", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Фурнитуры", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Фурнитура] ([Наименование]) VALUES (@Наименование);\r\nSELECT ID" +
                "_Фурнитуры, Наименование FROM Фурнитура WHERE (ID_Фурнитуры = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Фурнитура] SET [Наименование] = @Наименование WHERE (([ID_Фурнитуры" +
                "] = @Original_ID_Фурнитуры) AND ([Наименование] = @Original_Наименование));\r\nSEL" +
                "ECT ID_Фурнитуры, Наименование FROM Фурнитура WHERE (ID_Фурнитуры = @ID_Фурнитур" +
                "ы)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Фурнитуры", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Фурнитуры", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Фурнитуры", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Фурнитуры", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutomationApp.Properties.Settings.Default.AutomationAppDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_Фурнитуры, Наименование FROM dbo.Фурнитура";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutomationAppDBDataSet.ФурнитураDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutomationAppDBDataSet.ФурнитураDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutomationAppDBDataSet.ФурнитураDataTable dataTable = new AutomationAppDBDataSet.ФурнитураDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet.ФурнитураDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Фурнитура");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Фурнитуры, string Original_Наименование) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Фурнитуры));
            if ((Original_Наименование == null)) {
                throw new global::System.ArgumentNullException("Original_Наименование");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Наименование));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Наименование) {
            if ((Наименование == null)) {
                throw new global::System.ArgumentNullException("Наименование");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Наименование));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Наименование, int Original_ID_Фурнитуры, string Original_Наименование, int ID_Фурнитуры) {
            if ((Наименование == null)) {
                throw new global::System.ArgumentNullException("Наименование");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Наименование));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_ID_Фурнитуры));
            if ((Original_Наименование == null)) {
                throw new global::System.ArgumentNullException("Original_Наименование");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_Наименование));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ID_Фурнитуры));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Наименование, int Original_ID_Фурнитуры, string Original_Наименование) {
            return this.Update(Наименование, Original_ID_Фурнитуры, Original_Наименование, Original_ID_Фурнитуры);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ЦехаTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ЦехаTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Цеха";
            tableMapping.ColumnMappings.Add("ID_Цеха", "ID_Цеха");
            tableMapping.ColumnMappings.Add("Наименование", "Наименование");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Цеха] WHERE (([ID_Цеха] = @Original_ID_Цеха) AND ([Наименовани" +
                "е] = @Original_Наименование))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Цеха", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Цеха", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Цеха] ([Наименование]) VALUES (@Наименование);\r\nSELECT ID_Цеха" +
                ", Наименование FROM Цеха WHERE (ID_Цеха = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Цеха] SET [Наименование] = @Наименование WHERE (([ID_Цеха] = @Origi" +
                "nal_ID_Цеха) AND ([Наименование] = @Original_Наименование));\r\nSELECT ID_Цеха, На" +
                "именование FROM Цеха WHERE (ID_Цеха = @ID_Цеха)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Цеха", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Цеха", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Цеха", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Цеха", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutomationApp.Properties.Settings.Default.AutomationAppDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_Цеха, Наименование FROM dbo.Цеха";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutomationAppDBDataSet.ЦехаDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutomationAppDBDataSet.ЦехаDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutomationAppDBDataSet.ЦехаDataTable dataTable = new AutomationAppDBDataSet.ЦехаDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet.ЦехаDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Цеха");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Цеха, string Original_Наименование) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Цеха));
            if ((Original_Наименование == null)) {
                throw new global::System.ArgumentNullException("Original_Наименование");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Наименование));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Наименование) {
            if ((Наименование == null)) {
                throw new global::System.ArgumentNullException("Наименование");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Наименование));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Наименование, int Original_ID_Цеха, string Original_Наименование, int ID_Цеха) {
            if ((Наименование == null)) {
                throw new global::System.ArgumentNullException("Наименование");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Наименование));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_ID_Цеха));
            if ((Original_Наименование == null)) {
                throw new global::System.ArgumentNullException("Original_Наименование");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_Наименование));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ID_Цеха));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Наименование, int Original_ID_Цеха, string Original_Наименование) {
            return this.Update(Наименование, Original_ID_Цеха, Original_Наименование, Original_ID_Цеха);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Модели_фурнитурыTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Модели_фурнитурыTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Модели_фурнитуры";
            tableMapping.ColumnMappings.Add("ID_Модели_фурнитуры", "ID_Модели_фурнитуры");
            tableMapping.ColumnMappings.Add("ID_Фурнитуры", "ID_Фурнитуры");
            tableMapping.ColumnMappings.Add("Модель_фурнитуры", "Модель_фурнитуры");
            tableMapping.ColumnMappings.Add("Наименование", "Наименование");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Модели_фурнитуры] WHERE (([ID_Модели_фурнитуры] = @Original_ID_Модел" +
                "и_фурнитуры) AND ([ID_Фурнитуры] = @Original_ID_Фурнитуры) AND ([Модель_фурнитур" +
                "ы] = @Original_Модель_фурнитуры))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Модели_фурнитуры", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_фурнитуры", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Фурнитуры", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Фурнитуры", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Модель_фурнитуры", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Модель_фурнитуры", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [Модели_фурнитуры] ([ID_Фурнитуры], [Модель_фурнитуры]) VALUES (@ID_Ф" +
                "урнитуры, @Модель_фурнитуры);\r\nSELECT ID_Модели_фурнитуры, ID_Фурнитуры, Модель_" +
                "фурнитуры FROM Модели_фурнитуры WHERE (ID_Модели_фурнитуры = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Фурнитуры", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Фурнитуры", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Модель_фурнитуры", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Модель_фурнитуры", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Модели_фурнитуры] SET [ID_Фурнитуры] = @ID_Фурнитуры, [Модель_фурнитуры] = @Модель_фурнитуры WHERE (([ID_Модели_фурнитуры] = @Original_ID_Модели_фурнитуры) AND ([ID_Фурнитуры] = @Original_ID_Фурнитуры) AND ([Модель_фурнитуры] = @Original_Модель_фурнитуры));
SELECT ID_Модели_фурнитуры, ID_Фурнитуры, Модель_фурнитуры FROM Модели_фурнитуры WHERE (ID_Модели_фурнитуры = @ID_Модели_фурнитуры)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Фурнитуры", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Фурнитуры", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Модель_фурнитуры", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Модель_фурнитуры", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Модели_фурнитуры", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_фурнитуры", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Фурнитуры", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Фурнитуры", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Модель_фурнитуры", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Модель_фурнитуры", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Модели_фурнитуры", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_фурнитуры", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutomationApp.Properties.Settings.Default.AutomationAppDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Модели_фурнитуры.ID_Модели_фурнитуры, Модели_фурнитуры.ID_Фурнитуры, Фурнитура.Наименование, Модели_фурнитуры.Модель_фурнитуры
FROM            Модели_фурнитуры INNER JOIN
                         Фурнитура ON Модели_фурнитуры.ID_Фурнитуры = Фурнитура.ID_Фурнитуры";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutomationAppDBDataSet.Модели_фурнитурыDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutomationAppDBDataSet.Модели_фурнитурыDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutomationAppDBDataSet.Модели_фурнитурыDataTable dataTable = new AutomationAppDBDataSet.Модели_фурнитурыDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet.Модели_фурнитурыDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Модели_фурнитуры");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Модели_фурнитуры, int Original_ID_Фурнитуры, string Original_Модель_фурнитуры) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Модели_фурнитуры));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_Фурнитуры));
            if ((Original_Модель_фурнитуры == null)) {
                throw new global::System.ArgumentNullException("Original_Модель_фурнитуры");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Модель_фурнитуры));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_Фурнитуры, string Модель_фурнитуры) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Фурнитуры));
            if ((Модель_фурнитуры == null)) {
                throw new global::System.ArgumentNullException("Модель_фурнитуры");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Модель_фурнитуры));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Фурнитуры, string Модель_фурнитуры, int Original_ID_Модели_фурнитуры, int Original_ID_Фурнитуры, string Original_Модель_фурнитуры, int ID_Модели_фурнитуры) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Фурнитуры));
            if ((Модель_фурнитуры == null)) {
                throw new global::System.ArgumentNullException("Модель_фурнитуры");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Модель_фурнитуры));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_ID_Модели_фурнитуры));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID_Фурнитуры));
            if ((Original_Модель_фурнитуры == null)) {
                throw new global::System.ArgumentNullException("Original_Модель_фурнитуры");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_Модель_фурнитуры));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(ID_Модели_фурнитуры));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Фурнитуры, string Модель_фурнитуры, int Original_ID_Модели_фурнитуры, int Original_ID_Фурнитуры, string Original_Модель_фурнитуры) {
            return this.Update(ID_Фурнитуры, Модель_фурнитуры, Original_ID_Модели_фурнитуры, Original_ID_Фурнитуры, Original_Модель_фурнитуры, Original_ID_Модели_фурнитуры);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class АвтомобилиTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public АвтомобилиTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Автомобили";
            tableMapping.ColumnMappings.Add("ID_Автомобиля", "ID_Автомобиля");
            tableMapping.ColumnMappings.Add("Марка", "Марка");
            tableMapping.ColumnMappings.Add("Модель", "Модель");
            tableMapping.ColumnMappings.Add("Владелец", "Владелец");
            tableMapping.ColumnMappings.Add("Регистрационный_номер", "Регистрационный_номер");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Автомобили] WHERE (([ID_Автомобиля] = @Original_ID_Автомобиля) AND (" +
                "[Марка] = @Original_Марка) AND ([Модель] = @Original_Модель) AND ([Владелец] = @" +
                "Original_Владелец) AND ([Регистрационный_номер] = @Original_Регистрационный_номе" +
                "р))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Автомобиля", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Автомобиля", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Марка", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Модель", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Модель", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Владелец", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Владелец", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Регистрационный_номер", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Регистрационный_номер", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Автомобили] ([Марка], [Модель], [Владелец], [Регистрационный_номер]) VALUES (@Марка, @Модель, @Владелец, @Регистрационный_номер);
SELECT ID_Автомобиля, Марка, Модель, Владелец, Регистрационный_номер FROM Автомобили WHERE (ID_Автомобиля = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Марка", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Модель", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Модель", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Владелец", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Владелец", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Регистрационный_номер", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Регистрационный_номер", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Автомобили] SET [Марка] = @Марка, [Модель] = @Модель, [Владелец] = @Владелец, [Регистрационный_номер] = @Регистрационный_номер WHERE (([ID_Автомобиля] = @Original_ID_Автомобиля) AND ([Марка] = @Original_Марка) AND ([Модель] = @Original_Модель) AND ([Владелец] = @Original_Владелец) AND ([Регистрационный_номер] = @Original_Регистрационный_номер));
SELECT ID_Автомобиля, Марка, Модель, Владелец, Регистрационный_номер FROM Автомобили WHERE (ID_Автомобиля = @ID_Автомобиля)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Марка", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Модель", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Модель", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Владелец", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Владелец", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Регистрационный_номер", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Регистрационный_номер", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Автомобиля", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Автомобиля", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Марка", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Марка", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Модель", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Модель", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Владелец", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Владелец", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Регистрационный_номер", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Регистрационный_номер", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Автомобиля", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Автомобиля", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutomationApp.Properties.Settings.Default.AutomationAppDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        ID_Автомобиля, Марка, Модель, Владелец, Регистрационный_номер\r\nFROM" +
                "            Автомобили";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutomationAppDBDataSet.АвтомобилиDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutomationAppDBDataSet.АвтомобилиDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutomationAppDBDataSet.АвтомобилиDataTable dataTable = new AutomationAppDBDataSet.АвтомобилиDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet.АвтомобилиDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Автомобили");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Автомобиля, string Original_Марка, string Original_Модель, string Original_Владелец, string Original_Регистрационный_номер) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Автомобиля));
            if ((Original_Марка == null)) {
                throw new global::System.ArgumentNullException("Original_Марка");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Марка));
            }
            if ((Original_Модель == null)) {
                throw new global::System.ArgumentNullException("Original_Модель");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Модель));
            }
            if ((Original_Владелец == null)) {
                throw new global::System.ArgumentNullException("Original_Владелец");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Владелец));
            }
            if ((Original_Регистрационный_номер == null)) {
                throw new global::System.ArgumentNullException("Original_Регистрационный_номер");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Регистрационный_номер));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Марка, string Модель, string Владелец, string Регистрационный_номер) {
            if ((Марка == null)) {
                throw new global::System.ArgumentNullException("Марка");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Марка));
            }
            if ((Модель == null)) {
                throw new global::System.ArgumentNullException("Модель");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Модель));
            }
            if ((Владелец == null)) {
                throw new global::System.ArgumentNullException("Владелец");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Владелец));
            }
            if ((Регистрационный_номер == null)) {
                throw new global::System.ArgumentNullException("Регистрационный_номер");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Регистрационный_номер));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Марка, string Модель, string Владелец, string Регистрационный_номер, int Original_ID_Автомобиля, string Original_Марка, string Original_Модель, string Original_Владелец, string Original_Регистрационный_номер, int ID_Автомобиля) {
            if ((Марка == null)) {
                throw new global::System.ArgumentNullException("Марка");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Марка));
            }
            if ((Модель == null)) {
                throw new global::System.ArgumentNullException("Модель");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Модель));
            }
            if ((Владелец == null)) {
                throw new global::System.ArgumentNullException("Владелец");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Владелец));
            }
            if ((Регистрационный_номер == null)) {
                throw new global::System.ArgumentNullException("Регистрационный_номер");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Регистрационный_номер));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_Автомобиля));
            if ((Original_Марка == null)) {
                throw new global::System.ArgumentNullException("Original_Марка");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_Марка));
            }
            if ((Original_Модель == null)) {
                throw new global::System.ArgumentNullException("Original_Модель");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Модель));
            }
            if ((Original_Владелец == null)) {
                throw new global::System.ArgumentNullException("Original_Владелец");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Владелец));
            }
            if ((Original_Регистрационный_номер == null)) {
                throw new global::System.ArgumentNullException("Original_Регистрационный_номер");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Регистрационный_номер));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(ID_Автомобиля));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Марка, string Модель, string Владелец, string Регистрационный_номер, int Original_ID_Автомобиля, string Original_Марка, string Original_Модель, string Original_Владелец, string Original_Регистрационный_номер) {
            return this.Update(Марка, Модель, Владелец, Регистрационный_номер, Original_ID_Автомобиля, Original_Марка, Original_Модель, Original_Владелец, Original_Регистрационный_номер, Original_ID_Автомобиля);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Материальные_ценности_по_ордеру_на_фурнитуруTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Материальные_ценности_по_ордеру_на_фурнитуруTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Материальные_ценности_по_ордеру_на_фурнитуру";
            tableMapping.ColumnMappings.Add("ID_Материальной_ценности", "ID_Материальной_ценности");
            tableMapping.ColumnMappings.Add("ID_Модели_фурнитуры", "ID_Модели_фурнитуры");
            tableMapping.ColumnMappings.Add("ID_Приходного_ордера", "ID_Приходного_ордера");
            tableMapping.ColumnMappings.Add("Количество", "Количество");
            tableMapping.ColumnMappings.Add("Единица_измерения", "Единица_измерения");
            tableMapping.ColumnMappings.Add("Цена", "Цена");
            tableMapping.ColumnMappings.Add("Сумма", "Сумма");
            tableMapping.ColumnMappings.Add("Материальные_ценности", "Материальные_ценности");
            tableMapping.ColumnMappings.Add("ID_Фурнитуры", "ID_Фурнитуры");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Материальные_ценности_по_ордеру_на_фурнитуру] WHERE (([ID_Материальной_ценности] = @Original_ID_Материальной_ценности) AND ([ID_Модели_фурнитуры] = @Original_ID_Модели_фурнитуры) AND ([ID_Приходного_ордера] = @Original_ID_Приходного_ордера) AND ([Количество] = @Original_Количество) AND ([Единица_измерения] = @Original_Единица_измерения) AND ([Цена] = @Original_Цена) AND ([Сумма] = @Original_Сумма))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Материальной_ценности", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Материальной_ценности", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Модели_фурнитуры", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_фурнитуры", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Приходного_ордера", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Приходного_ордера", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Цена", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Сумма", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Материальные_ценности_по_ордеру_на_фурнитуру] ([ID_Модели_фурнитуры], [ID_Приходного_ордера], [Количество], [Единица_измерения], [Цена], [Сумма]) VALUES (@ID_Модели_фурнитуры, @ID_Приходного_ордера, @Количество, @Единица_измерения, @Цена, @Сумма);
SELECT ID_Материальной_ценности, ID_Модели_фурнитуры, ID_Приходного_ордера, Количество, Единица_измерения, Цена, Сумма FROM Материальные_ценности_по_ордеру_на_фурнитуру WHERE (ID_Материальной_ценности = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Модели_фурнитуры", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_фурнитуры", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Приходного_ордера", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Приходного_ордера", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Цена", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Сумма", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Материальные_ценности_по_ордеру_на_фурнитуру] SET [ID_Модели_фурнитуры] = @ID_Модели_фурнитуры, [ID_Приходного_ордера] = @ID_Приходного_ордера, [Количество] = @Количество, [Единица_измерения] = @Единица_измерения, [Цена] = @Цена, [Сумма] = @Сумма WHERE (([ID_Материальной_ценности] = @Original_ID_Материальной_ценности) AND ([ID_Модели_фурнитуры] = @Original_ID_Модели_фурнитуры) AND ([ID_Приходного_ордера] = @Original_ID_Приходного_ордера) AND ([Количество] = @Original_Количество) AND ([Единица_измерения] = @Original_Единица_измерения) AND ([Цена] = @Original_Цена) AND ([Сумма] = @Original_Сумма));
SELECT ID_Материальной_ценности, ID_Модели_фурнитуры, ID_Приходного_ордера, Количество, Единица_измерения, Цена, Сумма FROM Материальные_ценности_по_ордеру_на_фурнитуру WHERE (ID_Материальной_ценности = @ID_Материальной_ценности)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Модели_фурнитуры", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_фурнитуры", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Приходного_ордера", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Приходного_ордера", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Цена", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Сумма", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Материальной_ценности", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Материальной_ценности", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Модели_фурнитуры", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_фурнитуры", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Приходного_ордера", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Приходного_ордера", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Цена", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Сумма", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Материальной_ценности", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Материальной_ценности", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutomationApp.Properties.Settings.Default.AutomationAppDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Материальные_ценности_по_ордеру_на_фурнитуру.ID_Материальной_ценности, Материальные_ценности_по_ордеру_на_фурнитуру.ID_Модели_фурнитуры, Фурнитура.ID_Фурнитуры, 
                         Материальные_ценности_по_ордеру_на_фурнитуру.ID_Приходного_ордера, Материальные_ценности_по_ордеру_на_фурнитуру.Количество, 
                         Материальные_ценности_по_ордеру_на_фурнитуру.Единица_измерения, Материальные_ценности_по_ордеру_на_фурнитуру.Цена, Материальные_ценности_по_ордеру_на_фурнитуру.Сумма, 
                         Фурнитура.Наименование + ' ' + Модели_фурнитуры.Модель_фурнитуры AS Материальные_ценности
FROM            Материальные_ценности_по_ордеру_на_фурнитуру INNER JOIN
                         Модели_фурнитуры ON Материальные_ценности_по_ордеру_на_фурнитуру.ID_Модели_фурнитуры = Модели_фурнитуры.ID_Модели_фурнитуры INNER JOIN
                         Фурнитура ON Модели_фурнитуры.ID_Фурнитуры = Фурнитура.ID_Фурнитуры";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutomationAppDBDataSet.Материальные_ценности_по_ордеру_на_фурнитуруDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutomationAppDBDataSet.Материальные_ценности_по_ордеру_на_фурнитуруDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutomationAppDBDataSet.Материальные_ценности_по_ордеру_на_фурнитуруDataTable dataTable = new AutomationAppDBDataSet.Материальные_ценности_по_ордеру_на_фурнитуруDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet.Материальные_ценности_по_ордеру_на_фурнитуруDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Материальные_ценности_по_ордеру_на_фурнитуру");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Материальной_ценности, int Original_ID_Модели_фурнитуры, int Original_ID_Приходного_ордера, int Original_Количество, string Original_Единица_измерения, decimal Original_Цена, decimal Original_Сумма) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Материальной_ценности));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_Модели_фурнитуры));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ID_Приходного_ордера));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Количество));
            if ((Original_Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Original_Единица_измерения");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Единица_измерения));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_Цена));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_Сумма));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_Модели_фурнитуры, int ID_Приходного_ордера, int Количество, string Единица_измерения, decimal Цена, decimal Сумма) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Модели_фурнитуры));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_Приходного_ордера));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Количество));
            if ((Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Единица_измерения");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Единица_измерения));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(Цена));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(Сумма));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Модели_фурнитуры, int ID_Приходного_ордера, int Количество, string Единица_измерения, decimal Цена, decimal Сумма, int Original_ID_Материальной_ценности, int Original_ID_Модели_фурнитуры, int Original_ID_Приходного_ордера, int Original_Количество, string Original_Единица_измерения, decimal Original_Цена, decimal Original_Сумма, int ID_Материальной_ценности) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Модели_фурнитуры));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_Приходного_ордера));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Количество));
            if ((Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Единица_измерения");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Единица_измерения));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Цена));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Сумма));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ID_Материальной_ценности));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_ID_Модели_фурнитуры));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_ID_Приходного_ордера));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_Количество));
            if ((Original_Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Original_Единица_измерения");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Единица_измерения));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(Original_Цена));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_Сумма));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(ID_Материальной_ценности));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Модели_фурнитуры, int ID_Приходного_ордера, int Количество, string Единица_измерения, decimal Цена, decimal Сумма, int Original_ID_Материальной_ценности, int Original_ID_Модели_фурнитуры, int Original_ID_Приходного_ордера, int Original_Количество, string Original_Единица_измерения, decimal Original_Цена, decimal Original_Сумма) {
            return this.Update(ID_Модели_фурнитуры, ID_Приходного_ордера, Количество, Единица_измерения, Цена, Сумма, Original_ID_Материальной_ценности, Original_ID_Модели_фурнитуры, Original_ID_Приходного_ордера, Original_Количество, Original_Единица_измерения, Original_Цена, Original_Сумма, Original_ID_Материальной_ценности);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Склад_фурнитурыTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Склад_фурнитурыTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Склад_фурнитуры";
            tableMapping.ColumnMappings.Add("ID_Фурнитуры_на_складе", "ID_Фурнитуры_на_складе");
            tableMapping.ColumnMappings.Add("ID_Модели_фурнитуры", "ID_Модели_фурнитуры");
            tableMapping.ColumnMappings.Add("Единица_измерения", "Единица_измерения");
            tableMapping.ColumnMappings.Add("Количество", "Количество");
            tableMapping.ColumnMappings.Add("Цена", "Цена");
            tableMapping.ColumnMappings.Add("ID_Фурнитуры", "ID_Фурнитуры");
            tableMapping.ColumnMappings.Add("Наименование", "Наименование");
            tableMapping.ColumnMappings.Add("Модель_фурнитуры", "Модель_фурнитуры");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Склад_фурнитуры] WHERE (([ID_Фурнитуры_на_складе] = @Original_ID_Фурнитуры_на_складе) AND ([ID_Модели_фурнитуры] = @Original_ID_Модели_фурнитуры) AND ([Единица_измерения] = @Original_Единица_измерения) AND ([Количество] = @Original_Количество) AND ([Цена] = @Original_Цена))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Фурнитуры_на_складе", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Фурнитуры_на_складе", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Модели_фурнитуры", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_фурнитуры", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Цена", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Склад_фурнитуры] ([ID_Модели_фурнитуры], [Единица_измерения], [Количество], [Цена]) VALUES (@ID_Модели_фурнитуры, @Единица_измерения, @Количество, @Цена);
SELECT ID_Фурнитуры_на_складе, ID_Модели_фурнитуры, Единица_измерения, Количество, Цена FROM Склад_фурнитуры WHERE (ID_Фурнитуры_на_складе = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Модели_фурнитуры", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_фурнитуры", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Цена", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Склад_фурнитуры] SET [ID_Модели_фурнитуры] = @ID_Модели_фурнитуры, [Единица_измерения] = @Единица_измерения, [Количество] = @Количество, [Цена] = @Цена WHERE (([ID_Фурнитуры_на_складе] = @Original_ID_Фурнитуры_на_складе) AND ([ID_Модели_фурнитуры] = @Original_ID_Модели_фурнитуры) AND ([Единица_измерения] = @Original_Единица_измерения) AND ([Количество] = @Original_Количество) AND ([Цена] = @Original_Цена));
SELECT ID_Фурнитуры_на_складе, ID_Модели_фурнитуры, Единица_измерения, Количество, Цена FROM Склад_фурнитуры WHERE (ID_Фурнитуры_на_складе = @ID_Фурнитуры_на_складе)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Модели_фурнитуры", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_фурнитуры", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Цена", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Фурнитуры_на_складе", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Фурнитуры_на_складе", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Модели_фурнитуры", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_фурнитуры", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Цена", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Фурнитуры_на_складе", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Фурнитуры_на_складе", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutomationApp.Properties.Settings.Default.AutomationAppDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Склад_фурнитуры.ID_Фурнитуры_на_складе, Склад_фурнитуры.ID_Модели_фурнитуры, Фурнитура.ID_Фурнитуры, Фурнитура.Наименование, Модели_фурнитуры.Модель_фурнитуры, 
                         Склад_фурнитуры.Единица_измерения, Склад_фурнитуры.Количество, Склад_фурнитуры.Цена
FROM            Склад_фурнитуры INNER JOIN
                         Модели_фурнитуры ON Склад_фурнитуры.ID_Модели_фурнитуры = Модели_фурнитуры.ID_Модели_фурнитуры INNER JOIN
                         Фурнитура ON Модели_фурнитуры.ID_Фурнитуры = Фурнитура.ID_Фурнитуры";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutomationAppDBDataSet.Склад_фурнитурыDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutomationAppDBDataSet.Склад_фурнитурыDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutomationAppDBDataSet.Склад_фурнитурыDataTable dataTable = new AutomationAppDBDataSet.Склад_фурнитурыDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet.Склад_фурнитурыDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Склад_фурнитуры");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Фурнитуры_на_складе, int Original_ID_Модели_фурнитуры, string Original_Единица_измерения, int Original_Количество, decimal Original_Цена) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Фурнитуры_на_складе));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_Модели_фурнитуры));
            if ((Original_Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Original_Единица_измерения");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Единица_измерения));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Количество));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_Цена));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_Модели_фурнитуры, string Единица_измерения, int Количество, decimal Цена) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Модели_фурнитуры));
            if ((Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Единица_измерения");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Единица_измерения));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Количество));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(Цена));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Модели_фурнитуры, string Единица_измерения, int Количество, decimal Цена, int Original_ID_Фурнитуры_на_складе, int Original_ID_Модели_фурнитуры, string Original_Единица_измерения, int Original_Количество, decimal Original_Цена, int ID_Фурнитуры_на_складе) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Модели_фурнитуры));
            if ((Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Единица_измерения");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Единица_измерения));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Количество));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Цена));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_Фурнитуры_на_складе));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID_Модели_фурнитуры));
            if ((Original_Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Original_Единица_измерения");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Единица_измерения));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_Количество));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Original_Цена));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(ID_Фурнитуры_на_складе));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Модели_фурнитуры, string Единица_измерения, int Количество, decimal Цена, int Original_ID_Фурнитуры_на_складе, int Original_ID_Модели_фурнитуры, string Original_Единица_измерения, int Original_Количество, decimal Original_Цена) {
            return this.Update(ID_Модели_фурнитуры, Единица_измерения, Количество, Цена, Original_ID_Фурнитуры_на_складе, Original_ID_Модели_фурнитуры, Original_Единица_измерения, Original_Количество, Original_Цена, Original_ID_Фурнитуры_на_складе);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Фурнитура_по_лимитно_заборной_картеTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Фурнитура_по_лимитно_заборной_картеTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Фурнитура_по_лимитно_заборной_карте";
            tableMapping.ColumnMappings.Add("ID_Фурнитруы_по_лимитно_заборной_карте", "ID_Фурнитруы_по_лимитно_заборной_карте");
            tableMapping.ColumnMappings.Add("ID_Лимитно_заборной_карты", "ID_Лимитно_заборной_карты");
            tableMapping.ColumnMappings.Add("ID_Фурнитуры_на_складе", "ID_Фурнитуры_на_складе");
            tableMapping.ColumnMappings.Add("Норма_на_единицу_изделия", "Норма_на_единицу_изделия");
            tableMapping.ColumnMappings.Add("Единица_измерения", "Единица_измерения");
            tableMapping.ColumnMappings.Add("Количество", "Количество");
            tableMapping.ColumnMappings.Add("Цена", "Цена");
            tableMapping.ColumnMappings.Add("Сумма", "Сумма");
            tableMapping.ColumnMappings.Add("Наименование_фурнитуры", "Наименование_фурнитуры");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Фурнитура_по_лимитно_заборной_карте] WHERE (([ID_Фурнитруы_по_лимитно_заборной_карте] = @Original_ID_Фурнитруы_по_лимитно_заборной_карте) AND ([ID_Лимитно_заборной_карты] = @Original_ID_Лимитно_заборной_карты) AND ([ID_Фурнитуры_на_складе] = @Original_ID_Фурнитуры_на_складе) AND ([Норма_на_единицу_изделия] = @Original_Норма_на_единицу_изделия) AND ([Единица_измерения] = @Original_Единица_измерения) AND ([Количество] = @Original_Количество) AND ([Цена] = @Original_Цена) AND ([Сумма] = @Original_Сумма))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Фурнитруы_по_лимитно_заборной_карте", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Фурнитруы_по_лимитно_заборной_карте", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Лимитно_заборной_карты", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Лимитно_заборной_карты", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Фурнитуры_на_складе", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Фурнитуры_на_складе", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Норма_на_единицу_изделия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Норма_на_единицу_изделия", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Цена", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Сумма", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Фурнитура_по_лимитно_заборной_карте] ([ID_Лимитно_заборной_карты], [ID_Фурнитуры_на_складе], [Норма_на_единицу_изделия], [Единица_измерения], [Количество], [Цена], [Сумма]) VALUES (@ID_Лимитно_заборной_карты, @ID_Фурнитуры_на_складе, @Норма_на_единицу_изделия, @Единица_измерения, @Количество, @Цена, @Сумма);
SELECT ID_Фурнитруы_по_лимитно_заборной_карте, ID_Лимитно_заборной_карты, ID_Фурнитуры_на_складе, Норма_на_единицу_изделия, Единица_измерения, Количество, Цена, Сумма FROM Фурнитура_по_лимитно_заборной_карте WHERE (ID_Фурнитруы_по_лимитно_заборной_карте = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Лимитно_заборной_карты", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Лимитно_заборной_карты", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Фурнитуры_на_складе", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Фурнитуры_на_складе", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Норма_на_единицу_изделия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Норма_на_единицу_изделия", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Цена", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Сумма", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Фурнитура_по_лимитно_заборной_карте] SET [ID_Лимитно_заборной_карты] = @ID_Лимитно_заборной_карты, [ID_Фурнитуры_на_складе] = @ID_Фурнитуры_на_складе, [Норма_на_единицу_изделия] = @Норма_на_единицу_изделия, [Единица_измерения] = @Единица_измерения, [Количество] = @Количество, [Цена] = @Цена, [Сумма] = @Сумма WHERE (([ID_Фурнитруы_по_лимитно_заборной_карте] = @Original_ID_Фурнитруы_по_лимитно_заборной_карте) AND ([ID_Лимитно_заборной_карты] = @Original_ID_Лимитно_заборной_карты) AND ([ID_Фурнитуры_на_складе] = @Original_ID_Фурнитуры_на_складе) AND ([Норма_на_единицу_изделия] = @Original_Норма_на_единицу_изделия) AND ([Единица_измерения] = @Original_Единица_измерения) AND ([Количество] = @Original_Количество) AND ([Цена] = @Original_Цена) AND ([Сумма] = @Original_Сумма));
SELECT ID_Фурнитруы_по_лимитно_заборной_карте, ID_Лимитно_заборной_карты, ID_Фурнитуры_на_складе, Норма_на_единицу_изделия, Единица_измерения, Количество, Цена, Сумма FROM Фурнитура_по_лимитно_заборной_карте WHERE (ID_Фурнитруы_по_лимитно_заборной_карте = @ID_Фурнитруы_по_лимитно_заборной_карте)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Лимитно_заборной_карты", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Лимитно_заборной_карты", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Фурнитуры_на_складе", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Фурнитуры_на_складе", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Норма_на_единицу_изделия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Норма_на_единицу_изделия", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Цена", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Сумма", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Фурнитруы_по_лимитно_заборной_карте", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Фурнитруы_по_лимитно_заборной_карте", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Лимитно_заборной_карты", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Лимитно_заборной_карты", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Фурнитуры_на_складе", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Фурнитуры_на_складе", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Норма_на_единицу_изделия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Норма_на_единицу_изделия", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Цена", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Сумма", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Фурнитруы_по_лимитно_заборной_карте", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Фурнитруы_по_лимитно_заборной_карте", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutomationApp.Properties.Settings.Default.AutomationAppDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Фурнитура_по_лимитно_заборной_карте.ID_Фурнитруы_по_лимитно_заборной_карте, Фурнитура_по_лимитно_заборной_карте.ID_Лимитно_заборной_карты, 
                         Фурнитура_по_лимитно_заборной_карте.ID_Фурнитуры_на_складе, Фурнитура.Наименование + ' ' + Модели_фурнитуры.Модель_фурнитуры AS Наименование_фурнитуры, 
                         Фурнитура_по_лимитно_заборной_карте.Норма_на_единицу_изделия, Фурнитура_по_лимитно_заборной_карте.Единица_измерения, Фурнитура_по_лимитно_заборной_карте.Количество, 
                         Фурнитура_по_лимитно_заборной_карте.Цена, Фурнитура_по_лимитно_заборной_карте.Сумма
FROM            Фурнитура INNER JOIN
                         Модели_фурнитуры ON Фурнитура.ID_Фурнитуры = Модели_фурнитуры.ID_Фурнитуры INNER JOIN
                         Склад_фурнитуры ON Модели_фурнитуры.ID_Модели_фурнитуры = Склад_фурнитуры.ID_Модели_фурнитуры INNER JOIN
                         Фурнитура_по_лимитно_заборной_карте ON Склад_фурнитуры.ID_Фурнитуры_на_складе = Фурнитура_по_лимитно_заборной_карте.ID_Фурнитуры_на_складе";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutomationAppDBDataSet.Фурнитура_по_лимитно_заборной_картеDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutomationAppDBDataSet.Фурнитура_по_лимитно_заборной_картеDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutomationAppDBDataSet.Фурнитура_по_лимитно_заборной_картеDataTable dataTable = new AutomationAppDBDataSet.Фурнитура_по_лимитно_заборной_картеDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet.Фурнитура_по_лимитно_заборной_картеDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Фурнитура_по_лимитно_заборной_карте");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Фурнитруы_по_лимитно_заборной_карте, int Original_ID_Лимитно_заборной_карты, int Original_ID_Фурнитуры_на_складе, int Original_Норма_на_единицу_изделия, string Original_Единица_измерения, int Original_Количество, decimal Original_Цена, decimal Original_Сумма) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Фурнитруы_по_лимитно_заборной_карте));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_Лимитно_заборной_карты));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ID_Фурнитуры_на_складе));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Норма_на_единицу_изделия));
            if ((Original_Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Original_Единица_измерения");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Единица_измерения));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_Количество));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_Цена));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_Сумма));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_Лимитно_заборной_карты, int ID_Фурнитуры_на_складе, int Норма_на_единицу_изделия, string Единица_измерения, int Количество, decimal Цена, decimal Сумма) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Лимитно_заборной_карты));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_Фурнитуры_на_складе));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Норма_на_единицу_изделия));
            if ((Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Единица_измерения");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Единица_измерения));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(Количество));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(Цена));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(Сумма));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ID_Лимитно_заборной_карты, 
                    int ID_Фурнитуры_на_складе, 
                    int Норма_на_единицу_изделия, 
                    string Единица_измерения, 
                    int Количество, 
                    decimal Цена, 
                    decimal Сумма, 
                    int Original_ID_Фурнитруы_по_лимитно_заборной_карте, 
                    int Original_ID_Лимитно_заборной_карты, 
                    int Original_ID_Фурнитуры_на_складе, 
                    int Original_Норма_на_единицу_изделия, 
                    string Original_Единица_измерения, 
                    int Original_Количество, 
                    decimal Original_Цена, 
                    decimal Original_Сумма, 
                    int ID_Фурнитруы_по_лимитно_заборной_карте) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Лимитно_заборной_карты));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_Фурнитуры_на_складе));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Норма_на_единицу_изделия));
            if ((Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Единица_измерения");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Единица_измерения));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Количество));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Цена));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Сумма));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_ID_Фурнитруы_по_лимитно_заборной_карте));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_ID_Лимитно_заборной_карты));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_ID_Фурнитуры_на_складе));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_Норма_на_единицу_изделия));
            if ((Original_Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Original_Единица_измерения");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Единица_измерения));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_Количество));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Original_Цена));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Original_Сумма));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(ID_Фурнитруы_по_лимитно_заборной_карте));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Лимитно_заборной_карты, int ID_Фурнитуры_на_складе, int Норма_на_единицу_изделия, string Единица_измерения, int Количество, decimal Цена, decimal Сумма, int Original_ID_Фурнитруы_по_лимитно_заборной_карте, int Original_ID_Лимитно_заборной_карты, int Original_ID_Фурнитуры_на_складе, int Original_Норма_на_единицу_изделия, string Original_Единица_измерения, int Original_Количество, decimal Original_Цена, decimal Original_Сумма) {
            return this.Update(ID_Лимитно_заборной_карты, ID_Фурнитуры_на_складе, Норма_на_единицу_изделия, Единица_измерения, Количество, Цена, Сумма, Original_ID_Фурнитруы_по_лимитно_заборной_карте, Original_ID_Лимитно_заборной_карты, Original_ID_Фурнитуры_на_складе, Original_Норма_на_единицу_изделия, Original_Единица_измерения, Original_Количество, Original_Цена, Original_Сумма, Original_ID_Фурнитруы_по_лимитно_заборной_карте);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Склад_тканиTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Склад_тканиTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Склад_ткани";
            tableMapping.ColumnMappings.Add("ID_Ткани_на_складе", "ID_Ткани_на_складе");
            tableMapping.ColumnMappings.Add("ID_Модели_ткани", "ID_Модели_ткани");
            tableMapping.ColumnMappings.Add("Единица_измерения", "Единица_измерения");
            tableMapping.ColumnMappings.Add("Количество", "Количество");
            tableMapping.ColumnMappings.Add("Цена", "Цена");
            tableMapping.ColumnMappings.Add("ID_Ткани", "ID_Ткани");
            tableMapping.ColumnMappings.Add("Наименование", "Наименование");
            tableMapping.ColumnMappings.Add("Модель_ткани", "Модель_ткани");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Склад_ткани] WHERE (([ID_Ткани_на_складе] = @Original_ID_Ткани_на_складе) AND ([ID_Модели_ткани] = @Original_ID_Модели_ткани) AND ([Единица_измерения] = @Original_Единица_измерения) AND ([Количество] = @Original_Количество) AND ([Цена] = @Original_Цена))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Ткани_на_складе", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Ткани_на_складе", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Модели_ткани", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_ткани", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Цена", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Склад_ткани] ([ID_Модели_ткани], [Единица_измерения], [Количество], [Цена]) VALUES (@ID_Модели_ткани, @Единица_измерения, @Количество, @Цена);
SELECT ID_Ткани_на_складе, ID_Модели_ткани, Единица_измерения, Количество, Цена FROM Склад_ткани WHERE (ID_Ткани_на_складе = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Модели_ткани", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_ткани", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Цена", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Склад_ткани] SET [ID_Модели_ткани] = @ID_Модели_ткани, [Единица_измерения] = @Единица_измерения, [Количество] = @Количество, [Цена] = @Цена WHERE (([ID_Ткани_на_складе] = @Original_ID_Ткани_на_складе) AND ([ID_Модели_ткани] = @Original_ID_Модели_ткани) AND ([Единица_измерения] = @Original_Единица_измерения) AND ([Количество] = @Original_Количество) AND ([Цена] = @Original_Цена));
SELECT ID_Ткани_на_складе, ID_Модели_ткани, Единица_измерения, Количество, Цена FROM Склад_ткани WHERE (ID_Ткани_на_складе = @ID_Ткани_на_складе)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Модели_ткани", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_ткани", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Цена", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Ткани_на_складе", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Ткани_на_складе", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Модели_ткани", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_ткани", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Цена", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Ткани_на_складе", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Ткани_на_складе", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutomationApp.Properties.Settings.Default.AutomationAppDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Склад_ткани.ID_Ткани_на_складе, Склад_ткани.ID_Модели_ткани, Склад_ткани.Единица_измерения, Склад_ткани.Количество, Склад_ткани.Цена, Ткани.Наименование, Модели_ткани.Модель_ткани, 
                         Ткани.ID_Ткани
FROM            Склад_ткани INNER JOIN
                         Модели_ткани ON Склад_ткани.ID_Модели_ткани = Модели_ткани.ID_Модели_ткани INNER JOIN
                         Ткани ON Модели_ткани.ID_Ткани = Ткани.ID_Ткани";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutomationAppDBDataSet.Склад_тканиDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutomationAppDBDataSet.Склад_тканиDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutomationAppDBDataSet.Склад_тканиDataTable dataTable = new AutomationAppDBDataSet.Склад_тканиDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet.Склад_тканиDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Склад_ткани");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Ткани_на_складе, int Original_ID_Модели_ткани, string Original_Единица_измерения, int Original_Количество, decimal Original_Цена) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Ткани_на_складе));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_Модели_ткани));
            if ((Original_Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Original_Единица_измерения");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Единица_измерения));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Количество));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_Цена));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_Модели_ткани, string Единица_измерения, int Количество, decimal Цена) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Модели_ткани));
            if ((Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Единица_измерения");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Единица_измерения));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Количество));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(Цена));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Модели_ткани, string Единица_измерения, int Количество, decimal Цена, int Original_ID_Ткани_на_складе, int Original_ID_Модели_ткани, string Original_Единица_измерения, int Original_Количество, decimal Original_Цена, int ID_Ткани_на_складе) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Модели_ткани));
            if ((Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Единица_измерения");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Единица_измерения));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Количество));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Цена));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_Ткани_на_складе));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID_Модели_ткани));
            if ((Original_Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Original_Единица_измерения");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Единица_измерения));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_Количество));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Original_Цена));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(ID_Ткани_на_складе));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Модели_ткани, string Единица_измерения, int Количество, decimal Цена, int Original_ID_Ткани_на_складе, int Original_ID_Модели_ткани, string Original_Единица_измерения, int Original_Количество, decimal Original_Цена) {
            return this.Update(ID_Модели_ткани, Единица_измерения, Количество, Цена, Original_ID_Ткани_на_складе, Original_ID_Модели_ткани, Original_Единица_измерения, Original_Количество, Original_Цена, Original_ID_Ткани_на_складе);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Ткань_для_расчётной_картыTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Ткань_для_расчётной_картыTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Ткань_для_расчётной_карты";
            tableMapping.ColumnMappings.Add("ID_Ткани_для_карты", "ID_Ткани_для_карты");
            tableMapping.ColumnMappings.Add("ID_Расчётной_карты", "ID_Расчётной_карты");
            tableMapping.ColumnMappings.Add("ID_Ткани_на_складе", "ID_Ткани_на_складе");
            tableMapping.ColumnMappings.Add("Количество", "Количество");
            tableMapping.ColumnMappings.Add("Единица_измерения", "Единица_измерения");
            tableMapping.ColumnMappings.Add("Наименование", "Наименование");
            tableMapping.ColumnMappings.Add("Модель_ткани", "Модель_ткани");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Ткань_для_расчётной_карты] WHERE (([ID_Ткани_для_карты] = @Original_ID_Ткани_для_карты) AND ([ID_Расчётной_карты] = @Original_ID_Расчётной_карты) AND ([ID_Ткани_на_складе] = @Original_ID_Ткани_на_складе) AND ([Количество] = @Original_Количество) AND ([Единица_измерения] = @Original_Единица_измерения))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Ткани_для_карты", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Ткани_для_карты", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Расчётной_карты", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Расчётной_карты", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Ткани_на_складе", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Ткани_на_складе", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Ткань_для_расчётной_карты] ([ID_Расчётной_карты], [ID_Ткани_на_складе], [Количество], [Единица_измерения]) VALUES (@ID_Расчётной_карты, @ID_Ткани_на_складе, @Количество, @Единица_измерения);
SELECT ID_Ткани_для_карты, ID_Расчётной_карты, ID_Ткани_на_складе, Количество, Единица_измерения FROM Ткань_для_расчётной_карты WHERE (ID_Ткани_для_карты = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Расчётной_карты", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Расчётной_карты", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Ткани_на_складе", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Ткани_на_складе", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Ткань_для_расчётной_карты] SET [ID_Расчётной_карты] = @ID_Расчётной_карты, [ID_Ткани_на_складе] = @ID_Ткани_на_складе, [Количество] = @Количество, [Единица_измерения] = @Единица_измерения WHERE (([ID_Ткани_для_карты] = @Original_ID_Ткани_для_карты) AND ([ID_Расчётной_карты] = @Original_ID_Расчётной_карты) AND ([ID_Ткани_на_складе] = @Original_ID_Ткани_на_складе) AND ([Количество] = @Original_Количество) AND ([Единица_измерения] = @Original_Единица_измерения));
SELECT ID_Ткани_для_карты, ID_Расчётной_карты, ID_Ткани_на_складе, Количество, Единица_измерения FROM Ткань_для_расчётной_карты WHERE (ID_Ткани_для_карты = @ID_Ткани_для_карты)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Расчётной_карты", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Расчётной_карты", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Ткани_на_складе", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Ткани_на_складе", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Ткани_для_карты", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Ткани_для_карты", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Расчётной_карты", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Расчётной_карты", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Ткани_на_складе", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Ткани_на_складе", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Ткани_для_карты", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Ткани_для_карты", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutomationApp.Properties.Settings.Default.AutomationAppDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Ткань_для_расчётной_карты.ID_Ткани_для_карты, Ткань_для_расчётной_карты.ID_Расчётной_карты, Ткань_для_расчётной_карты.ID_Ткани_на_складе, Ткань_для_расчётной_карты.Количество, 
                         Ткань_для_расчётной_карты.Единица_измерения, Ткани.Наименование, Модели_ткани.Модель_ткани
FROM            Ткани INNER JOIN
                         Модели_ткани ON Ткани.ID_Ткани = Модели_ткани.ID_Ткани INNER JOIN
                         Склад_ткани ON Модели_ткани.ID_Модели_ткани = Склад_ткани.ID_Модели_ткани INNER JOIN
                         Ткань_для_расчётной_карты ON Склад_ткани.ID_Ткани_на_складе = Ткань_для_расчётной_карты.ID_Ткани_на_складе";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutomationAppDBDataSet.Ткань_для_расчётной_картыDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutomationAppDBDataSet.Ткань_для_расчётной_картыDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutomationAppDBDataSet.Ткань_для_расчётной_картыDataTable dataTable = new AutomationAppDBDataSet.Ткань_для_расчётной_картыDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet.Ткань_для_расчётной_картыDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Ткань_для_расчётной_карты");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Ткани_для_карты, int Original_ID_Расчётной_карты, int Original_ID_Ткани_на_складе, int Original_Количество, string Original_Единица_измерения) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Ткани_для_карты));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_Расчётной_карты));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ID_Ткани_на_складе));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Количество));
            if ((Original_Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Original_Единица_измерения");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Единица_измерения));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_Расчётной_карты, int ID_Ткани_на_складе, int Количество, string Единица_измерения) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Расчётной_карты));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_Ткани_на_складе));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Количество));
            if ((Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Единица_измерения");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Единица_измерения));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Расчётной_карты, int ID_Ткани_на_складе, int Количество, string Единица_измерения, int Original_ID_Ткани_для_карты, int Original_ID_Расчётной_карты, int Original_ID_Ткани_на_складе, int Original_Количество, string Original_Единица_измерения, int ID_Ткани_для_карты) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Расчётной_карты));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_Ткани_на_складе));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Количество));
            if ((Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Единица_измерения");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Единица_измерения));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_Ткани_для_карты));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID_Расчётной_карты));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ID_Ткани_на_складе));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_Количество));
            if ((Original_Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Original_Единица_измерения");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Единица_измерения));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(ID_Ткани_для_карты));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Расчётной_карты, int ID_Ткани_на_складе, int Количество, string Единица_измерения, int Original_ID_Ткани_для_карты, int Original_ID_Расчётной_карты, int Original_ID_Ткани_на_складе, int Original_Количество, string Original_Единица_измерения) {
            return this.Update(ID_Расчётной_карты, ID_Ткани_на_складе, Количество, Единица_измерения, Original_ID_Ткани_для_карты, Original_ID_Расчётной_карты, Original_ID_Ткани_на_складе, Original_Количество, Original_Единица_измерения, Original_ID_Ткани_для_карты);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Лимитно_заборные_картыTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Лимитно_заборные_картыTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Лимитно_заборные_карты";
            tableMapping.ColumnMappings.Add("ID_Лимитно_заборной_карты", "ID_Лимитно_заборной_карты");
            tableMapping.ColumnMappings.Add("ID_Бригады", "ID_Бригады");
            tableMapping.ColumnMappings.Add("ID_Модели_изделия", "ID_Модели_изделия");
            tableMapping.ColumnMappings.Add("Дата_составления", "Дата_составления");
            tableMapping.ColumnMappings.Add("Количество_изделий", "Количество_изделий");
            tableMapping.ColumnMappings.Add("Бригада", "Бригада");
            tableMapping.ColumnMappings.Add("Изделие", "Изделие");
            tableMapping.ColumnMappings.Add("Модель_изделия", "Модель_изделия");
            tableMapping.ColumnMappings.Add("Цех", "Цех");
            tableMapping.ColumnMappings.Add("ID_Цеха", "ID_Цеха");
            tableMapping.ColumnMappings.Add("ID_Изделия", "ID_Изделия");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Лимитно_заборные_карты] WHERE (([ID_Лимитно_заборной_карты] = @Original_ID_Лимитно_заборной_карты) AND ([ID_Бригады] = @Original_ID_Бригады) AND ([ID_Модели_изделия] = @Original_ID_Модели_изделия) AND ([Дата_составления] = @Original_Дата_составления) AND ([Количество_изделий] = @Original_Количество_изделий))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Лимитно_заборной_карты", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Лимитно_заборной_карты", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Бригады", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Бригады", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Модели_изделия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_изделия", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_составления", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_составления", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество_изделий", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество_изделий", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Лимитно_заборные_карты] ([ID_Бригады], [ID_Модели_изделия], [Дата_составления], [Количество_изделий]) VALUES (@ID_Бригады, @ID_Модели_изделия, @Дата_составления, @Количество_изделий);
SELECT ID_Лимитно_заборной_карты, ID_Бригады, ID_Модели_изделия, Дата_составления, Количество_изделий FROM Лимитно_заборные_карты WHERE (ID_Лимитно_заборной_карты = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Бригады", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Бригады", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Модели_изделия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_изделия", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_составления", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_составления", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество_изделий", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество_изделий", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Лимитно_заборные_карты] SET [ID_Бригады] = @ID_Бригады, [ID_Модели_изделия] = @ID_Модели_изделия, [Дата_составления] = @Дата_составления, [Количество_изделий] = @Количество_изделий WHERE (([ID_Лимитно_заборной_карты] = @Original_ID_Лимитно_заборной_карты) AND ([ID_Бригады] = @Original_ID_Бригады) AND ([ID_Модели_изделия] = @Original_ID_Модели_изделия) AND ([Дата_составления] = @Original_Дата_составления) AND ([Количество_изделий] = @Original_Количество_изделий));
SELECT ID_Лимитно_заборной_карты, ID_Бригады, ID_Модели_изделия, Дата_составления, Количество_изделий FROM Лимитно_заборные_карты WHERE (ID_Лимитно_заборной_карты = @ID_Лимитно_заборной_карты)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Бригады", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Бригады", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Модели_изделия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_изделия", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_составления", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_составления", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество_изделий", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество_изделий", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Лимитно_заборной_карты", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Лимитно_заборной_карты", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Бригады", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Бригады", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Модели_изделия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_изделия", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_составления", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_составления", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество_изделий", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество_изделий", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Лимитно_заборной_карты", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Лимитно_заборной_карты", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutomationApp.Properties.Settings.Default.AutomationAppDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Лимитно_заборные_карты.ID_Лимитно_заборной_карты, Лимитно_заборные_карты.ID_Бригады, Лимитно_заборные_карты.ID_Модели_изделия, Лимитно_заборные_карты.Дата_составления, 
                         Лимитно_заборные_карты.Количество_изделий, Бригады.Наименование AS Бригада, Изделия.Наименование AS Изделие, Модели_изделия.Модель_изделия, Цеха.Наименование AS Цех, Цеха.ID_Цеха, 
                         Изделия.ID_Изделия
FROM            Лимитно_заборные_карты INNER JOIN
                         Бригады ON Лимитно_заборные_карты.ID_Бригады = Бригады.ID_Бригады INNER JOIN
                         Модели_изделия ON Лимитно_заборные_карты.ID_Модели_изделия = Модели_изделия.ID_Модели_изделия INNER JOIN
                         Изделия ON Модели_изделия.ID_Изделия = Изделия.ID_Изделия INNER JOIN
                         Цеха ON Бригады.ID_Цеха = Цеха.ID_Цеха";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutomationAppDBDataSet.Лимитно_заборные_картыDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutomationAppDBDataSet.Лимитно_заборные_картыDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutomationAppDBDataSet.Лимитно_заборные_картыDataTable dataTable = new AutomationAppDBDataSet.Лимитно_заборные_картыDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet.Лимитно_заборные_картыDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Лимитно_заборные_карты");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Лимитно_заборной_карты, int Original_ID_Бригады, int Original_ID_Модели_изделия, System.DateTime Original_Дата_составления, int Original_Количество_изделий) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Лимитно_заборной_карты));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_Бригады));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ID_Модели_изделия));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_Дата_составления));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Количество_изделий));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_Бригады, int ID_Модели_изделия, System.DateTime Дата_составления, int Количество_изделий) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Бригады));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_Модели_изделия));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(Дата_составления));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Количество_изделий));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Бригады, int ID_Модели_изделия, System.DateTime Дата_составления, int Количество_изделий, int Original_ID_Лимитно_заборной_карты, int Original_ID_Бригады, int Original_ID_Модели_изделия, System.DateTime Original_Дата_составления, int Original_Количество_изделий, int ID_Лимитно_заборной_карты) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Бригады));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_Модели_изделия));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Дата_составления));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Количество_изделий));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_Лимитно_заборной_карты));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID_Бригады));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ID_Модели_изделия));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Original_Дата_составления));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_Количество_изделий));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(ID_Лимитно_заборной_карты));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Бригады, int ID_Модели_изделия, System.DateTime Дата_составления, int Количество_изделий, int Original_ID_Лимитно_заборной_карты, int Original_ID_Бригады, int Original_ID_Модели_изделия, System.DateTime Original_Дата_составления, int Original_Количество_изделий) {
            return this.Update(ID_Бригады, ID_Модели_изделия, Дата_составления, Количество_изделий, Original_ID_Лимитно_заборной_карты, Original_ID_Бригады, Original_ID_Модели_изделия, Original_Дата_составления, Original_Количество_изделий, Original_ID_Лимитно_заборной_карты);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ВодителиTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ВодителиTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Водители";
            tableMapping.ColumnMappings.Add("ID_Водителя", "ID_Водителя");
            tableMapping.ColumnMappings.Add("ФИО", "ФИО");
            tableMapping.ColumnMappings.Add("Номер_водительского_удостоверения", "Номер_водительского_удостоверения");
            tableMapping.ColumnMappings.Add("Дата_выдачи_удостоверения", "Дата_выдачи_удостоверения");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Водители] WHERE (([ID_Водителя] = @Original_ID_Водителя) AND ([ФИО] = @Original_ФИО) AND ([Номер_водительского_удостоверения] = @Original_Номер_водительского_удостоверения) AND ([Дата_выдачи_удостоверения] = @Original_Дата_выдачи_удостоверения))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Водителя", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Водителя", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ФИО", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФИО", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Номер_водительского_удостоверения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер_водительского_удостоверения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_выдачи_удостоверения", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_выдачи_удостоверения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Водители] ([ФИО], [Номер_водительского_удостоверения], [Дата_выдачи_удостоверения]) VALUES (@ФИО, @Номер_водительского_удостоверения, @Дата_выдачи_удостоверения);
SELECT ID_Водителя, ФИО, Номер_водительского_удостоверения, Дата_выдачи_удостоверения FROM Водители WHERE (ID_Водителя = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ФИО", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФИО", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Номер_водительского_удостоверения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер_водительского_удостоверения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_выдачи_удостоверения", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_выдачи_удостоверения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Водители] SET [ФИО] = @ФИО, [Номер_водительского_удостоверения] = @Номер_водительского_удостоверения, [Дата_выдачи_удостоверения] = @Дата_выдачи_удостоверения WHERE (([ID_Водителя] = @Original_ID_Водителя) AND ([ФИО] = @Original_ФИО) AND ([Номер_водительского_удостоверения] = @Original_Номер_водительского_удостоверения) AND ([Дата_выдачи_удостоверения] = @Original_Дата_выдачи_удостоверения));
SELECT ID_Водителя, ФИО, Номер_водительского_удостоверения, Дата_выдачи_удостоверения FROM Водители WHERE (ID_Водителя = @ID_Водителя)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ФИО", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФИО", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Номер_водительского_удостоверения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер_водительского_удостоверения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_выдачи_удостоверения", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_выдачи_удостоверения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Водителя", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Водителя", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ФИО", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФИО", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Номер_водительского_удостоверения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер_водительского_удостоверения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_выдачи_удостоверения", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_выдачи_удостоверения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Водителя", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Водителя", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutomationApp.Properties.Settings.Default.AutomationAppDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        ID_Водителя, ФИО, Номер_водительского_удостоверения, Дата_выдачи_уд" +
                "остоверения\r\nFROM            Водители";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutomationAppDBDataSet.ВодителиDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutomationAppDBDataSet.ВодителиDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutomationAppDBDataSet.ВодителиDataTable dataTable = new AutomationAppDBDataSet.ВодителиDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet.ВодителиDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Водители");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Водителя, string Original_ФИО, string Original_Номер_водительского_удостоверения, System.DateTime Original_Дата_выдачи_удостоверения) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Водителя));
            if ((Original_ФИО == null)) {
                throw new global::System.ArgumentNullException("Original_ФИО");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ФИО));
            }
            if ((Original_Номер_водительского_удостоверения == null)) {
                throw new global::System.ArgumentNullException("Original_Номер_водительского_удостоверения");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Номер_водительского_удостоверения));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_Дата_выдачи_удостоверения));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ФИО, string Номер_водительского_удостоверения, System.DateTime Дата_выдачи_удостоверения) {
            if ((ФИО == null)) {
                throw new global::System.ArgumentNullException("ФИО");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ФИО));
            }
            if ((Номер_водительского_удостоверения == null)) {
                throw new global::System.ArgumentNullException("Номер_водительского_удостоверения");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Номер_водительского_удостоверения));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(Дата_выдачи_удостоверения));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ФИО, string Номер_водительского_удостоверения, System.DateTime Дата_выдачи_удостоверения, int Original_ID_Водителя, string Original_ФИО, string Original_Номер_водительского_удостоверения, System.DateTime Original_Дата_выдачи_удостоверения, int ID_Водителя) {
            if ((ФИО == null)) {
                throw new global::System.ArgumentNullException("ФИО");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ФИО));
            }
            if ((Номер_водительского_удостоверения == null)) {
                throw new global::System.ArgumentNullException("Номер_водительского_удостоверения");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Номер_водительского_удостоверения));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Дата_выдачи_удостоверения));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID_Водителя));
            if ((Original_ФИО == null)) {
                throw new global::System.ArgumentNullException("Original_ФИО");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_ФИО));
            }
            if ((Original_Номер_водительского_удостоверения == null)) {
                throw new global::System.ArgumentNullException("Original_Номер_водительского_удостоверения");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_Номер_водительского_удостоверения));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Original_Дата_выдачи_удостоверения));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(ID_Водителя));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ФИО, string Номер_водительского_удостоверения, System.DateTime Дата_выдачи_удостоверения, int Original_ID_Водителя, string Original_ФИО, string Original_Номер_водительского_удостоверения, System.DateTime Original_Дата_выдачи_удостоверения) {
            return this.Update(ФИО, Номер_водительского_удостоверения, Дата_выдачи_удостоверения, Original_ID_Водителя, Original_ФИО, Original_Номер_водительского_удостоверения, Original_Дата_выдачи_удостоверения, Original_ID_Водителя);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Товарные_накладныеTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Товарные_накладныеTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Товарные_накладные";
            tableMapping.ColumnMappings.Add("ID_Товарной_накладной", "ID_Товарной_накладной");
            tableMapping.ColumnMappings.Add("Дата_отпуска", "Дата_отпуска");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Товарные_накладные] WHERE (([ID_Товарной_накладной] = @Original_ID_Т" +
                "оварной_накладной) AND ([Дата_отпуска] = @Original_Дата_отпуска))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Товарной_накладной", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Товарной_накладной", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_отпуска", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_отпуска", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [Товарные_накладные] ([Дата_отпуска]) VALUES (@Дата_отпуска);\r\nSELECT" +
                " ID_Товарной_накладной, Дата_отпуска FROM Товарные_накладные WHERE (ID_Товарной_" +
                "накладной = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_отпуска", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_отпуска", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Товарные_накладные] SET [Дата_отпуска] = @Дата_отпуска WHERE (([ID_Товарной_накладной] = @Original_ID_Товарной_накладной) AND ([Дата_отпуска] = @Original_Дата_отпуска));
SELECT ID_Товарной_накладной, Дата_отпуска FROM Товарные_накладные WHERE (ID_Товарной_накладной = @ID_Товарной_накладной)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_отпуска", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_отпуска", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Товарной_накладной", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Товарной_накладной", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_отпуска", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_отпуска", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Товарной_накладной", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Товарной_накладной", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutomationApp.Properties.Settings.Default.AutomationAppDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        ID_Товарной_накладной, Дата_отпуска\r\nFROM            Товарные_накла" +
                "дные";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutomationAppDBDataSet.Товарные_накладныеDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutomationAppDBDataSet.Товарные_накладныеDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutomationAppDBDataSet.Товарные_накладныеDataTable dataTable = new AutomationAppDBDataSet.Товарные_накладныеDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet.Товарные_накладныеDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Товарные_накладные");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Товарной_накладной, System.DateTime Original_Дата_отпуска) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Товарной_накладной));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_Дата_отпуска));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime Дата_отпуска) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(Дата_отпуска));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime Дата_отпуска, int Original_ID_Товарной_накладной, System.DateTime Original_Дата_отпуска, int ID_Товарной_накладной) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(Дата_отпуска));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_ID_Товарной_накладной));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Original_Дата_отпуска));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ID_Товарной_накладной));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime Дата_отпуска, int Original_ID_Товарной_накладной, System.DateTime Original_Дата_отпуска) {
            return this.Update(Дата_отпуска, Original_ID_Товарной_накладной, Original_Дата_отпуска, Original_ID_Товарной_накладной);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Расчётные_картыTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Расчётные_картыTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Расчётные_карты";
            tableMapping.ColumnMappings.Add("ID_Расчётной_карты", "ID_Расчётной_карты");
            tableMapping.ColumnMappings.Add("ID_Бригады", "ID_Бригады");
            tableMapping.ColumnMappings.Add("ID_Модели_изделия", "ID_Модели_изделия");
            tableMapping.ColumnMappings.Add("Номер_заказа", "Номер_заказа");
            tableMapping.ColumnMappings.Add("Дата_отпуска_ткани", "Дата_отпуска_ткани");
            tableMapping.ColumnMappings.Add("Изделие", "Изделие");
            tableMapping.ColumnMappings.Add("Модель_изделия", "Модель_изделия");
            tableMapping.ColumnMappings.Add("Цех", "Цех");
            tableMapping.ColumnMappings.Add("Бригада", "Бригада");
            tableMapping.ColumnMappings.Add("ID_Изделия", "ID_Изделия");
            tableMapping.ColumnMappings.Add("ID_Цеха", "ID_Цеха");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Расчётные_карты] WHERE (([ID_Расчётной_карты] = @Original_ID_Расчётной_карты) AND ([ID_Бригады] = @Original_ID_Бригады) AND ([ID_Модели_изделия] = @Original_ID_Модели_изделия) AND ([Номер_заказа] = @Original_Номер_заказа) AND ([Дата_отпуска_ткани] = @Original_Дата_отпуска_ткани))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Расчётной_карты", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Расчётной_карты", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Бригады", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Бригады", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Модели_изделия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_изделия", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Номер_заказа", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер_заказа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_отпуска_ткани", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_отпуска_ткани", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Расчётные_карты] ([ID_Бригады], [ID_Модели_изделия], [Номер_заказа], [Дата_отпуска_ткани]) VALUES (@ID_Бригады, @ID_Модели_изделия, @Номер_заказа, @Дата_отпуска_ткани);
SELECT ID_Расчётной_карты, ID_Бригады, ID_Модели_изделия, Номер_заказа, Дата_отпуска_ткани FROM Расчётные_карты WHERE (ID_Расчётной_карты = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Бригады", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Бригады", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Модели_изделия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_изделия", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Номер_заказа", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер_заказа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_отпуска_ткани", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_отпуска_ткани", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Расчётные_карты] SET [ID_Бригады] = @ID_Бригады, [ID_Модели_изделия] = @ID_Модели_изделия, [Номер_заказа] = @Номер_заказа, [Дата_отпуска_ткани] = @Дата_отпуска_ткани WHERE (([ID_Расчётной_карты] = @Original_ID_Расчётной_карты) AND ([ID_Бригады] = @Original_ID_Бригады) AND ([ID_Модели_изделия] = @Original_ID_Модели_изделия) AND ([Номер_заказа] = @Original_Номер_заказа) AND ([Дата_отпуска_ткани] = @Original_Дата_отпуска_ткани));
SELECT ID_Расчётной_карты, ID_Бригады, ID_Модели_изделия, Номер_заказа, Дата_отпуска_ткани FROM Расчётные_карты WHERE (ID_Расчётной_карты = @ID_Расчётной_карты)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Бригады", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Бригады", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Модели_изделия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_изделия", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Номер_заказа", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер_заказа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_отпуска_ткани", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_отпуска_ткани", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Расчётной_карты", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Расчётной_карты", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Бригады", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Бригады", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Модели_изделия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_изделия", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Номер_заказа", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер_заказа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_отпуска_ткани", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_отпуска_ткани", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Расчётной_карты", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Расчётной_карты", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutomationApp.Properties.Settings.Default.AutomationAppDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Расчётные_карты.ID_Расчётной_карты, Расчётные_карты.ID_Бригады, Расчётные_карты.ID_Модели_изделия, Расчётные_карты.Номер_заказа, Расчётные_карты.Дата_отпуска_ткани, 
                         Изделия.Наименование AS Изделие, Модели_изделия.Модель_изделия, Цеха.Наименование AS Цех, Бригады.Наименование AS Бригада, Изделия.ID_Изделия, Цеха.ID_Цеха
FROM            Расчётные_карты INNER JOIN
                         Бригады ON Расчётные_карты.ID_Бригады = Бригады.ID_Бригады INNER JOIN
                         Цеха ON Бригады.ID_Цеха = Цеха.ID_Цеха INNER JOIN
                         Модели_изделия ON Расчётные_карты.ID_Модели_изделия = Модели_изделия.ID_Модели_изделия INNER JOIN
                         Изделия ON Модели_изделия.ID_Изделия = Изделия.ID_Изделия";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutomationAppDBDataSet.Расчётные_картыDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutomationAppDBDataSet.Расчётные_картыDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutomationAppDBDataSet.Расчётные_картыDataTable dataTable = new AutomationAppDBDataSet.Расчётные_картыDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet.Расчётные_картыDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Расчётные_карты");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Расчётной_карты, int Original_ID_Бригады, int Original_ID_Модели_изделия, string Original_Номер_заказа, System.DateTime Original_Дата_отпуска_ткани) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Расчётной_карты));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_Бригады));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ID_Модели_изделия));
            if ((Original_Номер_заказа == null)) {
                throw new global::System.ArgumentNullException("Original_Номер_заказа");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Номер_заказа));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_Дата_отпуска_ткани));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_Бригады, int ID_Модели_изделия, string Номер_заказа, System.DateTime Дата_отпуска_ткани) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Бригады));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_Модели_изделия));
            if ((Номер_заказа == null)) {
                throw new global::System.ArgumentNullException("Номер_заказа");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Номер_заказа));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Дата_отпуска_ткани));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Бригады, int ID_Модели_изделия, string Номер_заказа, System.DateTime Дата_отпуска_ткани, int Original_ID_Расчётной_карты, int Original_ID_Бригады, int Original_ID_Модели_изделия, string Original_Номер_заказа, System.DateTime Original_Дата_отпуска_ткани, int ID_Расчётной_карты) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Бригады));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_Модели_изделия));
            if ((Номер_заказа == null)) {
                throw new global::System.ArgumentNullException("Номер_заказа");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Номер_заказа));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Дата_отпуска_ткани));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_Расчётной_карты));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID_Бригады));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ID_Модели_изделия));
            if ((Original_Номер_заказа == null)) {
                throw new global::System.ArgumentNullException("Original_Номер_заказа");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Номер_заказа));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Original_Дата_отпуска_ткани));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(ID_Расчётной_карты));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Бригады, int ID_Модели_изделия, string Номер_заказа, System.DateTime Дата_отпуска_ткани, int Original_ID_Расчётной_карты, int Original_ID_Бригады, int Original_ID_Модели_изделия, string Original_Номер_заказа, System.DateTime Original_Дата_отпуска_ткани) {
            return this.Update(ID_Бригады, ID_Модели_изделия, Номер_заказа, Дата_отпуска_ткани, Original_ID_Расчётной_карты, Original_ID_Бригады, Original_ID_Модели_изделия, Original_Номер_заказа, Original_Дата_отпуска_ткани, Original_ID_Расчётной_карты);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class КонтрагентыTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public КонтрагентыTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Контрагенты";
            tableMapping.ColumnMappings.Add("ID_Контрагента", "ID_Контрагента");
            tableMapping.ColumnMappings.Add("УНП", "УНП");
            tableMapping.ColumnMappings.Add("Адрес", "Адрес");
            tableMapping.ColumnMappings.Add("Наименование", "Наименование");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Контрагенты] WHERE (([ID_Контрагента] = @Original_ID_Контрагента) AN" +
                "D ([УНП] = @Original_УНП) AND ([Наименование] = @Original_Наименование) AND ([Ад" +
                "рес] = @Original_Адрес))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Контрагента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Контрагента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_УНП", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "УНП", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Адрес", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Адрес", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [Контрагенты] ([УНП], [Наименование], [Адрес]) VALUES (@УНП, @Наимено" +
                "вание, @Адрес);\r\nSELECT ID_Контрагента, УНП, Наименование, Адрес FROM Контрагент" +
                "ы WHERE (ID_Контрагента = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@УНП", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "УНП", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Адрес", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Адрес", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Контрагенты] SET [УНП] = @УНП, [Наименование] = @Наименование, [Адрес] = @Адрес WHERE (([ID_Контрагента] = @Original_ID_Контрагента) AND ([УНП] = @Original_УНП) AND ([Наименование] = @Original_Наименование) AND ([Адрес] = @Original_Адрес));
SELECT ID_Контрагента, УНП, Наименование, Адрес FROM Контрагенты WHERE (ID_Контрагента = @ID_Контрагента)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@УНП", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "УНП", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Адрес", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Адрес", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Контрагента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Контрагента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_УНП", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "УНП", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Адрес", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Адрес", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Контрагента", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Контрагента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutomationApp.Properties.Settings.Default.AutomationAppDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        ID_Контрагента, УНП, Наименование, Адрес\r\nFROM            Контраген" +
                "ты";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutomationAppDBDataSet.КонтрагентыDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutomationAppDBDataSet.КонтрагентыDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutomationAppDBDataSet.КонтрагентыDataTable dataTable = new AutomationAppDBDataSet.КонтрагентыDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet.КонтрагентыDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Контрагенты");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Контрагента, string Original_УНП, string Original_Наименование, string Original_Адрес) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Контрагента));
            if ((Original_УНП == null)) {
                throw new global::System.ArgumentNullException("Original_УНП");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_УНП));
            }
            if ((Original_Наименование == null)) {
                throw new global::System.ArgumentNullException("Original_Наименование");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Наименование));
            }
            if ((Original_Адрес == null)) {
                throw new global::System.ArgumentNullException("Original_Адрес");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Адрес));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string УНП, string Наименование, string Адрес) {
            if ((УНП == null)) {
                throw new global::System.ArgumentNullException("УНП");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(УНП));
            }
            if ((Наименование == null)) {
                throw new global::System.ArgumentNullException("Наименование");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Наименование));
            }
            if ((Адрес == null)) {
                throw new global::System.ArgumentNullException("Адрес");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Адрес));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string УНП, string Наименование, string Адрес, int Original_ID_Контрагента, string Original_УНП, string Original_Наименование, string Original_Адрес, int ID_Контрагента) {
            if ((УНП == null)) {
                throw new global::System.ArgumentNullException("УНП");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(УНП));
            }
            if ((Наименование == null)) {
                throw new global::System.ArgumentNullException("Наименование");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Наименование));
            }
            if ((Адрес == null)) {
                throw new global::System.ArgumentNullException("Адрес");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Адрес));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID_Контрагента));
            if ((Original_УНП == null)) {
                throw new global::System.ArgumentNullException("Original_УНП");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_УНП));
            }
            if ((Original_Наименование == null)) {
                throw new global::System.ArgumentNullException("Original_Наименование");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_Наименование));
            }
            if ((Original_Адрес == null)) {
                throw new global::System.ArgumentNullException("Original_Адрес");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Адрес));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(ID_Контрагента));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string УНП, string Наименование, string Адрес, int Original_ID_Контрагента, string Original_УНП, string Original_Наименование, string Original_Адрес) {
            return this.Update(УНП, Наименование, Адрес, Original_ID_Контрагента, Original_УНП, Original_Наименование, Original_Адрес, Original_ID_Контрагента);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Контрагенты_товарно_транспортной_накладнойTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Контрагенты_товарно_транспортной_накладнойTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Контрагенты_товарно_транспортной_накладной";
            tableMapping.ColumnMappings.Add("ID_Контрагента_товарно_транспортной_накладной", "ID_Контрагента_товарно_транспортной_накладной");
            tableMapping.ColumnMappings.Add("ID_Товарно_транспортной_накладной", "ID_Товарно_транспортной_накладной");
            tableMapping.ColumnMappings.Add("ID_Контрагента", "ID_Контрагента");
            tableMapping.ColumnMappings.Add("Тип_контрагента", "Тип_контрагента");
            tableMapping.ColumnMappings.Add("УНП", "УНП");
            tableMapping.ColumnMappings.Add("Адрес", "Адрес");
            tableMapping.ColumnMappings.Add("Наименование", "Наименование");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Контрагенты_товарно_транспортной_накладной] WHERE (([ID_Контрагента_товарно_транспортной_накладной] = @Original_ID_Контрагента_товарно_транспортной_накладной) AND ([ID_Товарно_транспортной_накладной] = @Original_ID_Товарно_транспортной_накладной) AND ([ID_Контрагента] = @Original_ID_Контрагента) AND ([Тип_контрагента] = @Original_Тип_контрагента))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Контрагента_товарно_транспортной_накладной", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Контрагента_товарно_транспортной_накладной", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Товарно_транспортной_накладной", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Товарно_транспортной_накладной", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Контрагента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Контрагента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Тип_контрагента", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Тип_контрагента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Контрагенты_товарно_транспортной_накладной] ([ID_Товарно_транспортной_накладной], [ID_Контрагента], [Тип_контрагента]) VALUES (@ID_Товарно_транспортной_накладной, @ID_Контрагента, @Тип_контрагента);
SELECT ID_Контрагента_товарно_транспортной_накладной, ID_Товарно_транспортной_накладной, ID_Контрагента, Тип_контрагента FROM Контрагенты_товарно_транспортной_накладной WHERE (ID_Контрагента_товарно_транспортной_накладной = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Товарно_транспортной_накладной", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Товарно_транспортной_накладной", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Контрагента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Контрагента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Тип_контрагента", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Тип_контрагента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Контрагенты_товарно_транспортной_накладной] SET [ID_Товарно_транспортной_накладной] = @ID_Товарно_транспортной_накладной, [ID_Контрагента] = @ID_Контрагента, [Тип_контрагента] = @Тип_контрагента WHERE (([ID_Контрагента_товарно_транспортной_накладной] = @Original_ID_Контрагента_товарно_транспортной_накладной) AND ([ID_Товарно_транспортной_накладной] = @Original_ID_Товарно_транспортной_накладной) AND ([ID_Контрагента] = @Original_ID_Контрагента) AND ([Тип_контрагента] = @Original_Тип_контрагента));
SELECT ID_Контрагента_товарно_транспортной_накладной, ID_Товарно_транспортной_накладной, ID_Контрагента, Тип_контрагента FROM Контрагенты_товарно_транспортной_накладной WHERE (ID_Контрагента_товарно_транспортной_накладной = @ID_Контрагента_товарно_транспортной_накладной)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Товарно_транспортной_накладной", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Товарно_транспортной_накладной", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Контрагента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Контрагента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Тип_контрагента", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Тип_контрагента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Контрагента_товарно_транспортной_накладной", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Контрагента_товарно_транспортной_накладной", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Товарно_транспортной_накладной", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Товарно_транспортной_накладной", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Контрагента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Контрагента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Тип_контрагента", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Тип_контрагента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Контрагента_товарно_транспортной_накладной", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Контрагента_товарно_транспортной_накладной", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutomationApp.Properties.Settings.Default.AutomationAppDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Контрагенты_товарно_транспортной_накладной.ID_Контрагента_товарно_транспортной_накладной, Контрагенты_товарно_транспортной_накладной.ID_Товарно_транспортной_накладной, 
                         Контрагенты_товарно_транспортной_накладной.ID_Контрагента, Контрагенты_товарно_транспортной_накладной.Тип_контрагента, Контрагенты.УНП, Контрагенты.Наименование, Контрагенты.Адрес
FROM            Контрагенты_товарно_транспортной_накладной INNER JOIN
                         Контрагенты ON Контрагенты_товарно_транспортной_накладной.ID_Контрагента = Контрагенты.ID_Контрагента";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutomationAppDBDataSet.Контрагенты_товарно_транспортной_накладнойDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutomationAppDBDataSet.Контрагенты_товарно_транспортной_накладнойDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutomationAppDBDataSet.Контрагенты_товарно_транспортной_накладнойDataTable dataTable = new AutomationAppDBDataSet.Контрагенты_товарно_транспортной_накладнойDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet.Контрагенты_товарно_транспортной_накладнойDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Контрагенты_товарно_транспортной_накладной");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Контрагента_товарно_транспортной_накладной, int Original_ID_Товарно_транспортной_накладной, int Original_ID_Контрагента, string Original_Тип_контрагента) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Контрагента_товарно_транспортной_накладной));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_Товарно_транспортной_накладной));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ID_Контрагента));
            if ((Original_Тип_контрагента == null)) {
                throw new global::System.ArgumentNullException("Original_Тип_контрагента");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Тип_контрагента));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_Товарно_транспортной_накладной, int ID_Контрагента, string Тип_контрагента) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Товарно_транспортной_накладной));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_Контрагента));
            if ((Тип_контрагента == null)) {
                throw new global::System.ArgumentNullException("Тип_контрагента");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Тип_контрагента));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Товарно_транспортной_накладной, int ID_Контрагента, string Тип_контрагента, int Original_ID_Контрагента_товарно_транспортной_накладной, int Original_ID_Товарно_транспортной_накладной, int Original_ID_Контрагента, string Original_Тип_контрагента, int ID_Контрагента_товарно_транспортной_накладной) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Товарно_транспортной_накладной));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_Контрагента));
            if ((Тип_контрагента == null)) {
                throw new global::System.ArgumentNullException("Тип_контрагента");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Тип_контрагента));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID_Контрагента_товарно_транспортной_накладной));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_Товарно_транспортной_накладной));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID_Контрагента));
            if ((Original_Тип_контрагента == null)) {
                throw new global::System.ArgumentNullException("Original_Тип_контрагента");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Тип_контрагента));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(ID_Контрагента_товарно_транспортной_накладной));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Товарно_транспортной_накладной, int ID_Контрагента, string Тип_контрагента, int Original_ID_Контрагента_товарно_транспортной_накладной, int Original_ID_Товарно_транспортной_накладной, int Original_ID_Контрагента, string Original_Тип_контрагента) {
            return this.Update(ID_Товарно_транспортной_накладной, ID_Контрагента, Тип_контрагента, Original_ID_Контрагента_товарно_транспортной_накладной, Original_ID_Товарно_транспортной_накладной, Original_ID_Контрагента, Original_Тип_контрагента, Original_ID_Контрагента_товарно_транспортной_накладной);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Контрагенты_товарной_накладнойTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Контрагенты_товарной_накладнойTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Контрагенты_товарной_накладной";
            tableMapping.ColumnMappings.Add("ID_Контрагента_товарной_накладной", "ID_Контрагента_товарной_накладной");
            tableMapping.ColumnMappings.Add("ID_Товарной_накладной", "ID_Товарной_накладной");
            tableMapping.ColumnMappings.Add("ID_Контрагента", "ID_Контрагента");
            tableMapping.ColumnMappings.Add("Тип_контрагента", "Тип_контрагента");
            tableMapping.ColumnMappings.Add("УНП", "УНП");
            tableMapping.ColumnMappings.Add("Адрес", "Адрес");
            tableMapping.ColumnMappings.Add("Наименование", "Наименование");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Контрагенты_товарной_накладной] WHERE (([ID_Контрагента_товарной_накладной] = @Original_ID_Контрагента_товарной_накладной) AND ([ID_Товарной_накладной] = @Original_ID_Товарной_накладной) AND ([ID_Контрагента] = @Original_ID_Контрагента) AND ([Тип_контрагента] = @Original_Тип_контрагента))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Контрагента_товарной_накладной", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Контрагента_товарной_накладной", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Товарной_накладной", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Товарной_накладной", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Контрагента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Контрагента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Тип_контрагента", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Тип_контрагента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Контрагенты_товарной_накладной] ([ID_Товарной_накладной], [ID_Контрагента], [Тип_контрагента]) VALUES (@ID_Товарной_накладной, @ID_Контрагента, @Тип_контрагента);
SELECT ID_Контрагента_товарной_накладной, ID_Товарной_накладной, ID_Контрагента, Тип_контрагента FROM Контрагенты_товарной_накладной WHERE (ID_Контрагента_товарной_накладной = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Товарной_накладной", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Товарной_накладной", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Контрагента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Контрагента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Тип_контрагента", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Тип_контрагента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Контрагенты_товарной_накладной] SET [ID_Товарной_накладной] = @ID_Товарной_накладной, [ID_Контрагента] = @ID_Контрагента, [Тип_контрагента] = @Тип_контрагента WHERE (([ID_Контрагента_товарной_накладной] = @Original_ID_Контрагента_товарной_накладной) AND ([ID_Товарной_накладной] = @Original_ID_Товарной_накладной) AND ([ID_Контрагента] = @Original_ID_Контрагента) AND ([Тип_контрагента] = @Original_Тип_контрагента));
SELECT ID_Контрагента_товарной_накладной, ID_Товарной_накладной, ID_Контрагента, Тип_контрагента FROM Контрагенты_товарной_накладной WHERE (ID_Контрагента_товарной_накладной = @ID_Контрагента_товарной_накладной)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Товарной_накладной", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Товарной_накладной", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Контрагента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Контрагента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Тип_контрагента", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Тип_контрагента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Контрагента_товарной_накладной", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Контрагента_товарной_накладной", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Товарной_накладной", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Товарной_накладной", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Контрагента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Контрагента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Тип_контрагента", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Тип_контрагента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Контрагента_товарной_накладной", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Контрагента_товарной_накладной", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutomationApp.Properties.Settings.Default.AutomationAppDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Контрагенты_товарной_накладной.ID_Контрагента_товарной_накладной, Контрагенты_товарной_накладной.ID_Товарной_накладной, Контрагенты_товарной_накладной.ID_Контрагента, 
                         Контрагенты_товарной_накладной.Тип_контрагента, Контрагенты.УНП, Контрагенты.Наименование, Контрагенты.Адрес
FROM            Контрагенты_товарной_накладной INNER JOIN
                         Контрагенты ON Контрагенты_товарной_накладной.ID_Контрагента = Контрагенты.ID_Контрагента";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutomationAppDBDataSet.Контрагенты_товарной_накладнойDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutomationAppDBDataSet.Контрагенты_товарной_накладнойDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutomationAppDBDataSet.Контрагенты_товарной_накладнойDataTable dataTable = new AutomationAppDBDataSet.Контрагенты_товарной_накладнойDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet.Контрагенты_товарной_накладнойDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Контрагенты_товарной_накладной");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Контрагента_товарной_накладной, int Original_ID_Товарной_накладной, int Original_ID_Контрагента, string Original_Тип_контрагента) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Контрагента_товарной_накладной));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_Товарной_накладной));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ID_Контрагента));
            if ((Original_Тип_контрагента == null)) {
                throw new global::System.ArgumentNullException("Original_Тип_контрагента");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Тип_контрагента));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_Товарной_накладной, int ID_Контрагента, string Тип_контрагента) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Товарной_накладной));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_Контрагента));
            if ((Тип_контрагента == null)) {
                throw new global::System.ArgumentNullException("Тип_контрагента");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Тип_контрагента));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Товарной_накладной, int ID_Контрагента, string Тип_контрагента, int Original_ID_Контрагента_товарной_накладной, int Original_ID_Товарной_накладной, int Original_ID_Контрагента, string Original_Тип_контрагента, int ID_Контрагента_товарной_накладной) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Товарной_накладной));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_Контрагента));
            if ((Тип_контрагента == null)) {
                throw new global::System.ArgumentNullException("Тип_контрагента");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Тип_контрагента));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID_Контрагента_товарной_накладной));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_Товарной_накладной));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID_Контрагента));
            if ((Original_Тип_контрагента == null)) {
                throw new global::System.ArgumentNullException("Original_Тип_контрагента");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Тип_контрагента));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(ID_Контрагента_товарной_накладной));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Товарной_накладной, int ID_Контрагента, string Тип_контрагента, int Original_ID_Контрагента_товарной_накладной, int Original_ID_Товарной_накладной, int Original_ID_Контрагента, string Original_Тип_контрагента) {
            return this.Update(ID_Товарной_накладной, ID_Контрагента, Тип_контрагента, Original_ID_Контрагента_товарной_накладной, Original_ID_Товарной_накладной, Original_ID_Контрагента, Original_Тип_контрагента, Original_ID_Контрагента_товарной_накладной);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Товарно_транспортные_накладныеTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Товарно_транспортные_накладныеTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Товарно_транспортные_накладные";
            tableMapping.ColumnMappings.Add("ID_Товарно_транспортной_накладной", "ID_Товарно_транспортной_накладной");
            tableMapping.ColumnMappings.Add("ID_Автомобиля", "ID_Автомобиля");
            tableMapping.ColumnMappings.Add("ID_Водителя", "ID_Водителя");
            tableMapping.ColumnMappings.Add("Дата_отпуска", "Дата_отпуска");
            tableMapping.ColumnMappings.Add("Основание_отпуска", "Основание_отпуска");
            tableMapping.ColumnMappings.Add("Переадресовка", "Переадресовка");
            tableMapping.ColumnMappings.Add("Способ_погрузки", "Способ_погрузки");
            tableMapping.ColumnMappings.Add("Способ_разгрузки", "Способ_разгрузки");
            tableMapping.ColumnMappings.Add("Марка", "Марка");
            tableMapping.ColumnMappings.Add("Модель", "Модель");
            tableMapping.ColumnMappings.Add("Регистрационный_номер", "Регистрационный_номер");
            tableMapping.ColumnMappings.Add("Владелец", "Владелец");
            tableMapping.ColumnMappings.Add("Водитель", "Водитель");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Товарно_транспортные_накладные] WHERE (([ID_Товарно_транспортной_накладной] = @Original_ID_Товарно_транспортной_накладной) AND ([ID_Автомобиля] = @Original_ID_Автомобиля) AND ([ID_Водителя] = @Original_ID_Водителя) AND ([Дата_отпуска] = @Original_Дата_отпуска) AND ([Основание_отпуска] = @Original_Основание_отпуска) AND ((@IsNull_Переадресовка = 1 AND [Переадресовка] IS NULL) OR ([Переадресовка] = @Original_Переадресовка)) AND ([Способ_погрузки] = @Original_Способ_погрузки) AND ([Способ_разгрузки] = @Original_Способ_разгрузки))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Товарно_транспортной_накладной", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Товарно_транспортной_накладной", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Автомобиля", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Автомобиля", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Водителя", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Водителя", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_отпуска", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_отпуска", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Основание_отпуска", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Основание_отпуска", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Переадресовка", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Переадресовка", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Переадресовка", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Переадресовка", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Способ_погрузки", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Способ_погрузки", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Способ_разгрузки", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Способ_разгрузки", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Товарно_транспортные_накладные] ([ID_Автомобиля], [ID_Водителя], [Дата_отпуска], [Основание_отпуска], [Переадресовка], [Способ_погрузки], [Способ_разгрузки]) VALUES (@ID_Автомобиля, @ID_Водителя, @Дата_отпуска, @Основание_отпуска, @Переадресовка, @Способ_погрузки, @Способ_разгрузки);
SELECT ID_Товарно_транспортной_накладной, ID_Автомобиля, ID_Водителя, Дата_отпуска, Основание_отпуска, Переадресовка, Способ_погрузки, Способ_разгрузки FROM Товарно_транспортные_накладные WHERE (ID_Товарно_транспортной_накладной = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Автомобиля", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Автомобиля", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Водителя", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Водителя", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_отпуска", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_отпуска", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Основание_отпуска", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Основание_отпуска", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Переадресовка", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Переадресовка", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Способ_погрузки", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Способ_погрузки", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Способ_разгрузки", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Способ_разгрузки", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Товарно_транспортные_накладные] SET [ID_Автомобиля] = @ID_Автомобиля, [ID_Водителя] = @ID_Водителя, [Дата_отпуска] = @Дата_отпуска, [Основание_отпуска] = @Основание_отпуска, [Переадресовка] = @Переадресовка, [Способ_погрузки] = @Способ_погрузки, [Способ_разгрузки] = @Способ_разгрузки WHERE (([ID_Товарно_транспортной_накладной] = @Original_ID_Товарно_транспортной_накладной) AND ([ID_Автомобиля] = @Original_ID_Автомобиля) AND ([ID_Водителя] = @Original_ID_Водителя) AND ([Дата_отпуска] = @Original_Дата_отпуска) AND ([Основание_отпуска] = @Original_Основание_отпуска) AND ((@IsNull_Переадресовка = 1 AND [Переадресовка] IS NULL) OR ([Переадресовка] = @Original_Переадресовка)) AND ([Способ_погрузки] = @Original_Способ_погрузки) AND ([Способ_разгрузки] = @Original_Способ_разгрузки));
SELECT ID_Товарно_транспортной_накладной, ID_Автомобиля, ID_Водителя, Дата_отпуска, Основание_отпуска, Переадресовка, Способ_погрузки, Способ_разгрузки FROM Товарно_транспортные_накладные WHERE (ID_Товарно_транспортной_накладной = @ID_Товарно_транспортной_накладной)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Автомобиля", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Автомобиля", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Водителя", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Водителя", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Дата_отпуска", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_отпуска", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Основание_отпуска", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Основание_отпуска", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Переадресовка", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Переадресовка", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Способ_погрузки", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Способ_погрузки", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Способ_разгрузки", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Способ_разгрузки", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Товарно_транспортной_накладной", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Товарно_транспортной_накладной", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Автомобиля", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Автомобиля", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Водителя", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Водителя", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Дата_отпуска", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Дата_отпуска", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Основание_отпуска", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Основание_отпуска", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Переадресовка", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Переадресовка", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Переадресовка", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Переадресовка", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Способ_погрузки", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Способ_погрузки", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Способ_разгрузки", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Способ_разгрузки", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Товарно_транспортной_накладной", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Товарно_транспортной_накладной", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutomationApp.Properties.Settings.Default.AutomationAppDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Товарно_транспортные_накладные.ID_Товарно_транспортной_накладной, Товарно_транспортные_накладные.ID_Автомобиля, Товарно_транспортные_накладные.ID_Водителя, 
                         Товарно_транспортные_накладные.Дата_отпуска, Товарно_транспортные_накладные.Основание_отпуска, Товарно_транспортные_накладные.Переадресовка, Товарно_транспортные_накладные.Способ_погрузки, 
                         Товарно_транспортные_накладные.Способ_разгрузки, Автомобили.Марка, Автомобили.Модель, Автомобили.Регистрационный_номер, Автомобили.Владелец, 
                         Водители.ФИО + ' ' + Водители.Номер_водительского_удостоверения AS Водитель
FROM            Товарно_транспортные_накладные INNER JOIN
                         Автомобили ON Товарно_транспортные_накладные.ID_Автомобиля = Автомобили.ID_Автомобиля INNER JOIN
                         Водители ON Товарно_транспортные_накладные.ID_Водителя = Водители.ID_Водителя";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutomationAppDBDataSet.Товарно_транспортные_накладныеDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutomationAppDBDataSet.Товарно_транспортные_накладныеDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutomationAppDBDataSet.Товарно_транспортные_накладныеDataTable dataTable = new AutomationAppDBDataSet.Товарно_транспортные_накладныеDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet.Товарно_транспортные_накладныеDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Товарно_транспортные_накладные");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Товарно_транспортной_накладной, int Original_ID_Автомобиля, int Original_ID_Водителя, System.DateTime Original_Дата_отпуска, string Original_Основание_отпуска, string Original_Переадресовка, string Original_Способ_погрузки, string Original_Способ_разгрузки) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Товарно_транспортной_накладной));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_Автомобиля));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ID_Водителя));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_Дата_отпуска));
            if ((Original_Основание_отпуска == null)) {
                throw new global::System.ArgumentNullException("Original_Основание_отпуска");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Основание_отпуска));
            }
            if ((Original_Переадресовка == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Переадресовка));
            }
            if ((Original_Способ_погрузки == null)) {
                throw new global::System.ArgumentNullException("Original_Способ_погрузки");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Способ_погрузки));
            }
            if ((Original_Способ_разгрузки == null)) {
                throw new global::System.ArgumentNullException("Original_Способ_разгрузки");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Способ_разгрузки));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_Автомобиля, int ID_Водителя, System.DateTime Дата_отпуска, string Основание_отпуска, string Переадресовка, string Способ_погрузки, string Способ_разгрузки) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Автомобиля));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_Водителя));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(Дата_отпуска));
            if ((Основание_отпуска == null)) {
                throw new global::System.ArgumentNullException("Основание_отпуска");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Основание_отпуска));
            }
            if ((Переадресовка == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Переадресовка));
            }
            if ((Способ_погрузки == null)) {
                throw new global::System.ArgumentNullException("Способ_погрузки");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Способ_погрузки));
            }
            if ((Способ_разгрузки == null)) {
                throw new global::System.ArgumentNullException("Способ_разгрузки");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Способ_разгрузки));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ID_Автомобиля, 
                    int ID_Водителя, 
                    System.DateTime Дата_отпуска, 
                    string Основание_отпуска, 
                    string Переадресовка, 
                    string Способ_погрузки, 
                    string Способ_разгрузки, 
                    int Original_ID_Товарно_транспортной_накладной, 
                    int Original_ID_Автомобиля, 
                    int Original_ID_Водителя, 
                    System.DateTime Original_Дата_отпуска, 
                    string Original_Основание_отпуска, 
                    string Original_Переадресовка, 
                    string Original_Способ_погрузки, 
                    string Original_Способ_разгрузки, 
                    int ID_Товарно_транспортной_накладной) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Автомобиля));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_Водителя));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Дата_отпуска));
            if ((Основание_отпуска == null)) {
                throw new global::System.ArgumentNullException("Основание_отпуска");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Основание_отпуска));
            }
            if ((Переадресовка == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Переадресовка));
            }
            if ((Способ_погрузки == null)) {
                throw new global::System.ArgumentNullException("Способ_погрузки");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Способ_погрузки));
            }
            if ((Способ_разгрузки == null)) {
                throw new global::System.ArgumentNullException("Способ_разгрузки");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Способ_разгрузки));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_ID_Товарно_транспортной_накладной));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_ID_Автомобиля));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_ID_Водителя));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_Дата_отпуска));
            if ((Original_Основание_отпуска == null)) {
                throw new global::System.ArgumentNullException("Original_Основание_отпуска");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Основание_отпуска));
            }
            if ((Original_Переадресовка == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Переадресовка));
            }
            if ((Original_Способ_погрузки == null)) {
                throw new global::System.ArgumentNullException("Original_Способ_погрузки");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Способ_погрузки));
            }
            if ((Original_Способ_разгрузки == null)) {
                throw new global::System.ArgumentNullException("Original_Способ_разгрузки");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Способ_разгрузки));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(ID_Товарно_транспортной_накладной));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Автомобиля, int ID_Водителя, System.DateTime Дата_отпуска, string Основание_отпуска, string Переадресовка, string Способ_погрузки, string Способ_разгрузки, int Original_ID_Товарно_транспортной_накладной, int Original_ID_Автомобиля, int Original_ID_Водителя, System.DateTime Original_Дата_отпуска, string Original_Основание_отпуска, string Original_Переадресовка, string Original_Способ_погрузки, string Original_Способ_разгрузки) {
            return this.Update(ID_Автомобиля, ID_Водителя, Дата_отпуска, Основание_отпуска, Переадресовка, Способ_погрузки, Способ_разгрузки, Original_ID_Товарно_транспортной_накладной, Original_ID_Автомобиля, Original_ID_Водителя, Original_Дата_отпуска, Original_Основание_отпуска, Original_Переадресовка, Original_Способ_погрузки, Original_Способ_разгрузки, Original_ID_Товарно_транспортной_накладной);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Товарный_раздел_товарно_транспортной_накладнойTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Товарный_раздел_товарно_транспортной_накладнойTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Товарный_раздел_товарно_транспортной_накладной";
            tableMapping.ColumnMappings.Add("ID_Товарного_раздела", "ID_Товарного_раздела");
            tableMapping.ColumnMappings.Add("ID_Товарно_транспортной_накладной", "ID_Товарно_транспортной_накладной");
            tableMapping.ColumnMappings.Add("ID_Готовой_продукции_на_складе", "ID_Готовой_продукции_на_складе");
            tableMapping.ColumnMappings.Add("Единица_измерения", "Единица_измерения");
            tableMapping.ColumnMappings.Add("Количество", "Количество");
            tableMapping.ColumnMappings.Add("Цена", "Цена");
            tableMapping.ColumnMappings.Add("Стоимость", "Стоимость");
            tableMapping.ColumnMappings.Add("Ставка_НДС", "Ставка_НДС");
            tableMapping.ColumnMappings.Add("Сумма_НДС", "Сумма_НДС");
            tableMapping.ColumnMappings.Add("Стоимость_с_НДС", "Стоимость_с_НДС");
            tableMapping.ColumnMappings.Add("Количество_грузовых_мест", "Количество_грузовых_мест");
            tableMapping.ColumnMappings.Add("Масса_груза", "Масса_груза");
            tableMapping.ColumnMappings.Add("ID_Модели_изделия", "ID_Модели_изделия");
            tableMapping.ColumnMappings.Add("ID_Изделия", "ID_Изделия");
            tableMapping.ColumnMappings.Add("Модель_изделия", "Модель_изделия");
            tableMapping.ColumnMappings.Add("Наименование", "Наименование");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Товарный_раздел_товарно_транспортной_накладной] WHERE (([ID_Товарного_раздела] = @Original_ID_Товарного_раздела) AND ([ID_Товарно_транспортной_накладной] = @Original_ID_Товарно_транспортной_накладной) AND ([ID_Готовой_продукции_на_складе] = @Original_ID_Готовой_продукции_на_складе) AND ([Единица_измерения] = @Original_Единица_измерения) AND ([Количество] = @Original_Количество) AND ([Цена] = @Original_Цена) AND ([Стоимость] = @Original_Стоимость) AND ((@IsNull_Ставка_НДС = 1 AND [Ставка_НДС] IS NULL) OR ([Ставка_НДС] = @Original_Ставка_НДС)) AND ((@IsNull_Сумма_НДС = 1 AND [Сумма_НДС] IS NULL) OR ([Сумма_НДС] = @Original_Сумма_НДС)) AND ([Стоимость_с_НДС] = @Original_Стоимость_с_НДС) AND ([Количество_грузовых_мест] = @Original_Количество_грузовых_мест) AND ((@IsNull_Масса_груза = 1 AND [Масса_груза] IS NULL) OR ([Масса_груза] = @Original_Масса_груза)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Товарного_раздела", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Товарного_раздела", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Товарно_транспортной_накладной", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Товарно_транспортной_накладной", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Готовой_продукции_на_складе", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Готовой_продукции_на_складе", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Цена", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Стоимость", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Стоимость", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ставка_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ставка_НДС", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ставка_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ставка_НДС", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Сумма_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма_НДС", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Сумма_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма_НДС", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Стоимость_с_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Стоимость_с_НДС", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество_грузовых_мест", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество_грузовых_мест", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Масса_груза", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Масса_груза", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Масса_груза", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Масса_груза", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Товарный_раздел_товарно_транспортной_накладной] ([ID_Товарно_транспортной_накладной], [ID_Готовой_продукции_на_складе], [Единица_измерения], [Количество], [Цена], [Стоимость], [Ставка_НДС], [Сумма_НДС], [Стоимость_с_НДС], [Количество_грузовых_мест], [Масса_груза]) VALUES (@ID_Товарно_транспортной_накладной, @ID_Готовой_продукции_на_складе, @Единица_измерения, @Количество, @Цена, @Стоимость, @Ставка_НДС, @Сумма_НДС, @Стоимость_с_НДС, @Количество_грузовых_мест, @Масса_груза);
SELECT ID_Товарного_раздела, ID_Товарно_транспортной_накладной, ID_Готовой_продукции_на_складе, Единица_измерения, Количество, Цена, Стоимость, Ставка_НДС, Сумма_НДС, Стоимость_с_НДС, Количество_грузовых_мест, Масса_груза FROM Товарный_раздел_товарно_транспортной_накладной WHERE (ID_Товарного_раздела = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Товарно_транспортной_накладной", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Товарно_транспортной_накладной", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Готовой_продукции_на_складе", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Готовой_продукции_на_складе", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Цена", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Стоимость", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Стоимость", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ставка_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ставка_НДС", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Сумма_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма_НДС", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Стоимость_с_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Стоимость_с_НДС", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество_грузовых_мест", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество_грузовых_мест", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Масса_груза", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Масса_груза", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [Товарный_раздел_товарно_транспортной_накладной] SET [ID_Товарно_транспорт" +
                "ной_накладной] = @ID_Товарно_транспортной_накладной, [ID_Готовой_продукции_на_ск" +
                "ладе] = @ID_Готовой_продукции_на_складе, [Единица_измерения] = @Единица_измерени" +
                "я, [Количество] = @Количество, [Цена] = @Цена, [Стоимость] = @Стоимость, [Ставка" +
                "_НДС] = @Ставка_НДС, [Сумма_НДС] = @Сумма_НДС, [Стоимость_с_НДС] = @Стоимость_с_" +
                "НДС, [Количество_грузовых_мест] = @Количество_грузовых_мест, [Масса_груза] = @Ма" +
                "сса_груза WHERE (([ID_Товарного_раздела] = @Original_ID_Товарного_раздела) AND (" +
                "[ID_Товарно_транспортной_накладной] = @Original_ID_Товарно_транспортной_накладно" +
                "й) AND ([ID_Готовой_продукции_на_складе] = @Original_ID_Готовой_продукции_на_скл" +
                "аде) AND ([Единица_измерения] = @Original_Единица_измерения) AND ([Количество] =" +
                " @Original_Количество) AND ([Цена] = @Original_Цена) AND ([Стоимость] = @Origina" +
                "l_Стоимость) AND ((@IsNull_Ставка_НДС = 1 AND [Ставка_НДС] IS NULL) OR ([Ставка_" +
                "НДС] = @Original_Ставка_НДС)) AND ((@IsNull_Сумма_НДС = 1 AND [Сумма_НДС] IS NUL" +
                "L) OR ([Сумма_НДС] = @Original_Сумма_НДС)) AND ([Стоимость_с_НДС] = @Original_Ст" +
                "оимость_с_НДС) AND ([Количество_грузовых_мест] = @Original_Количество_грузовых_м" +
                "ест) AND ((@IsNull_Масса_груза = 1 AND [Масса_груза] IS NULL) OR ([Масса_груза] " +
                "= @Original_Масса_груза)));\r\nSELECT ID_Товарного_раздела, ID_Товарно_транспортно" +
                "й_накладной, ID_Готовой_продукции_на_складе, Единица_измерения, Количество, Цена" +
                ", Стоимость, Ставка_НДС, Сумма_НДС, Стоимость_с_НДС, Количество_грузовых_мест, М" +
                "асса_груза FROM Товарный_раздел_товарно_транспортной_накладной WHERE (ID_Товарно" +
                "го_раздела = @ID_Товарного_раздела)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Товарно_транспортной_накладной", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Товарно_транспортной_накладной", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Готовой_продукции_на_складе", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Готовой_продукции_на_складе", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Цена", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Стоимость", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Стоимость", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ставка_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ставка_НДС", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Сумма_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма_НДС", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Стоимость_с_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Стоимость_с_НДС", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество_грузовых_мест", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество_грузовых_мест", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Масса_груза", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Масса_груза", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Товарного_раздела", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Товарного_раздела", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Товарно_транспортной_накладной", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Товарно_транспортной_накладной", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Готовой_продукции_на_складе", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Готовой_продукции_на_складе", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Цена", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Стоимость", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Стоимость", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ставка_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ставка_НДС", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ставка_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ставка_НДС", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Сумма_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма_НДС", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Сумма_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма_НДС", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Стоимость_с_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Стоимость_с_НДС", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество_грузовых_мест", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество_грузовых_мест", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Масса_груза", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Масса_груза", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Масса_груза", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Масса_груза", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Товарного_раздела", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Товарного_раздела", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutomationApp.Properties.Settings.Default.AutomationAppDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Товарный_раздел_товарно_транспортной_накладной.ID_Товарного_раздела" +
                ", Товарный_раздел_товарно_транспортной_накладной.ID_Товарно_транспортной_накладн" +
                "ой, \r\n                         Товарный_раздел_товарно_транспортной_накладной.ID" +
                "_Готовой_продукции_на_складе, Товарный_раздел_товарно_транспортной_накладной.Еди" +
                "ница_измерения, \r\n                         Товарный_раздел_товарно_транспортной_" +
                "накладной.Количество, Товарный_раздел_товарно_транспортной_накладной.Цена, Товар" +
                "ный_раздел_товарно_транспортной_накладной.Стоимость, \r\n                         " +
                "Товарный_раздел_товарно_транспортной_накладной.Ставка_НДС, Товарный_раздел_товар" +
                "но_транспортной_накладной.Сумма_НДС, Товарный_раздел_товарно_транспортной_наклад" +
                "ной.Стоимость_с_НДС, \r\n                         Товарный_раздел_товарно_транспор" +
                "тной_накладной.Количество_грузовых_мест, Товарный_раздел_товарно_транспортной_на" +
                "кладной.Масса_груза, Склад_готовой_продукции.ID_Модели_изделия, \r\n              " +
                "           Изделия.ID_Изделия, Модели_изделия.Модель_изделия, Изделия.Наименован" +
                "ие\r\nFROM            Модели_изделия INNER JOIN\r\n                         Изделия " +
                "ON Модели_изделия.ID_Изделия = Изделия.ID_Изделия INNER JOIN\r\n                  " +
                "       Склад_готовой_продукции ON Модели_изделия.ID_Модели_изделия = Склад_готов" +
                "ой_продукции.ID_Модели_изделия INNER JOIN\r\n                         Товарный_раз" +
                "дел_товарно_транспортной_накладной ON Склад_готовой_продукции.ID_Готовой_продукц" +
                "ии_на_складе = Товарный_раздел_товарно_транспортной_накладной.ID_Готовой_продукц" +
                "ии_на_складе";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutomationAppDBDataSet.Товарный_раздел_товарно_транспортной_накладнойDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutomationAppDBDataSet.Товарный_раздел_товарно_транспортной_накладнойDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutomationAppDBDataSet.Товарный_раздел_товарно_транспортной_накладнойDataTable dataTable = new AutomationAppDBDataSet.Товарный_раздел_товарно_транспортной_накладнойDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet.Товарный_раздел_товарно_транспортной_накладнойDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Товарный_раздел_товарно_транспортной_накладной");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Товарного_раздела, int Original_ID_Товарно_транспортной_накладной, int Original_ID_Готовой_продукции_на_складе, string Original_Единица_измерения, int Original_Количество, decimal Original_Цена, decimal Original_Стоимость, global::System.Nullable<int> Original_Ставка_НДС, global::System.Nullable<int> Original_Сумма_НДС, int Original_Стоимость_с_НДС, int Original_Количество_грузовых_мест, global::System.Nullable<int> Original_Масса_груза) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Товарного_раздела));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_Товарно_транспортной_накладной));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ID_Готовой_продукции_на_складе));
            if ((Original_Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Original_Единица_измерения");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Единица_измерения));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Количество));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_Цена));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_Стоимость));
            if ((Original_Ставка_НДС.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_Ставка_НДС.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_Сумма_НДС.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_Сумма_НДС.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_Стоимость_с_НДС));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_Количество_грузовых_мест));
            if ((Original_Масса_груза.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_Масса_груза.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_Товарно_транспортной_накладной, int ID_Готовой_продукции_на_складе, string Единица_измерения, int Количество, decimal Цена, decimal Стоимость, global::System.Nullable<int> Ставка_НДС, global::System.Nullable<int> Сумма_НДС, int Стоимость_с_НДС, int Количество_грузовых_мест, global::System.Nullable<int> Масса_груза) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Товарно_транспортной_накладной));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_Готовой_продукции_на_складе));
            if ((Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Единица_измерения");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Единица_измерения));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Количество));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(Цена));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(Стоимость));
            if ((Ставка_НДС.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(Ставка_НДС.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Сумма_НДС.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(Сумма_НДС.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(Стоимость_с_НДС));
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(Количество_грузовых_мест));
            if ((Масса_груза.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(Масса_груза.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ID_Товарно_транспортной_накладной, 
                    int ID_Готовой_продукции_на_складе, 
                    string Единица_измерения, 
                    int Количество, 
                    decimal Цена, 
                    decimal Стоимость, 
                    global::System.Nullable<int> Ставка_НДС, 
                    global::System.Nullable<int> Сумма_НДС, 
                    int Стоимость_с_НДС, 
                    int Количество_грузовых_мест, 
                    global::System.Nullable<int> Масса_груза, 
                    int Original_ID_Товарного_раздела, 
                    int Original_ID_Товарно_транспортной_накладной, 
                    int Original_ID_Готовой_продукции_на_складе, 
                    string Original_Единица_измерения, 
                    int Original_Количество, 
                    decimal Original_Цена, 
                    decimal Original_Стоимость, 
                    global::System.Nullable<int> Original_Ставка_НДС, 
                    global::System.Nullable<int> Original_Сумма_НДС, 
                    int Original_Стоимость_с_НДС, 
                    int Original_Количество_грузовых_мест, 
                    global::System.Nullable<int> Original_Масса_груза, 
                    int ID_Товарного_раздела) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Товарно_транспортной_накладной));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_Готовой_продукции_на_складе));
            if ((Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Единица_измерения");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Единица_измерения));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Количество));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Цена));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Стоимость));
            if ((Ставка_НДС.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Ставка_НДС.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Сумма_НДС.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Сумма_НДС.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Стоимость_с_НДС));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Количество_грузовых_мест));
            if ((Масса_груза.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Масса_груза.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_ID_Товарного_раздела));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_ID_Товарно_транспортной_накладной));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_ID_Готовой_продукции_на_складе));
            if ((Original_Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Original_Единица_измерения");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Единица_измерения));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_Количество));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(Original_Цена));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(Original_Стоимость));
            if ((Original_Ставка_НДС.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_Ставка_НДС.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_Сумма_НДС.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_Сумма_НДС.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_Стоимость_с_НДС));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_Количество_грузовых_мест));
            if ((Original_Масса_груза.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(Original_Масса_груза.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(ID_Товарного_раздела));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ID_Товарно_транспортной_накладной, 
                    int ID_Готовой_продукции_на_складе, 
                    string Единица_измерения, 
                    int Количество, 
                    decimal Цена, 
                    decimal Стоимость, 
                    global::System.Nullable<int> Ставка_НДС, 
                    global::System.Nullable<int> Сумма_НДС, 
                    int Стоимость_с_НДС, 
                    int Количество_грузовых_мест, 
                    global::System.Nullable<int> Масса_груза, 
                    int Original_ID_Товарного_раздела, 
                    int Original_ID_Товарно_транспортной_накладной, 
                    int Original_ID_Готовой_продукции_на_складе, 
                    string Original_Единица_измерения, 
                    int Original_Количество, 
                    decimal Original_Цена, 
                    decimal Original_Стоимость, 
                    global::System.Nullable<int> Original_Ставка_НДС, 
                    global::System.Nullable<int> Original_Сумма_НДС, 
                    int Original_Стоимость_с_НДС, 
                    int Original_Количество_грузовых_мест, 
                    global::System.Nullable<int> Original_Масса_груза) {
            return this.Update(ID_Товарно_транспортной_накладной, ID_Готовой_продукции_на_складе, Единица_измерения, Количество, Цена, Стоимость, Ставка_НДС, Сумма_НДС, Стоимость_с_НДС, Количество_грузовых_мест, Масса_груза, Original_ID_Товарного_раздела, Original_ID_Товарно_транспортной_накладной, Original_ID_Готовой_продукции_на_складе, Original_Единица_измерения, Original_Количество, Original_Цена, Original_Стоимость, Original_Ставка_НДС, Original_Сумма_НДС, Original_Стоимость_с_НДС, Original_Количество_грузовых_мест, Original_Масса_груза, Original_ID_Товарного_раздела);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class БригадыTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public БригадыTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Бригады";
            tableMapping.ColumnMappings.Add("ID_Бригады", "ID_Бригады");
            tableMapping.ColumnMappings.Add("ID_Цеха", "ID_Цеха");
            tableMapping.ColumnMappings.Add("Цех", "Цех");
            tableMapping.ColumnMappings.Add("Наименование", "Наименование");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Бригады] WHERE (([ID_Бригады] = @Original_ID_Бригады) AND ([ID_Цеха]" +
                " = @Original_ID_Цеха) AND ([Наименование] = @Original_Наименование))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Бригады", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Бригады", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Цеха", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Цеха", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [Бригады] ([ID_Цеха], [Наименование]) VALUES (@ID_Цеха, @Наименование" +
                ");\r\nSELECT ID_Бригады, ID_Цеха, Наименование FROM Бригады WHERE (ID_Бригады = SC" +
                "OPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Цеха", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Цеха", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Бригады] SET [ID_Цеха] = @ID_Цеха, [Наименование] = @Наименование WHERE (([ID_Бригады] = @Original_ID_Бригады) AND ([ID_Цеха] = @Original_ID_Цеха) AND ([Наименование] = @Original_Наименование));
SELECT ID_Бригады, ID_Цеха, Наименование FROM Бригады WHERE (ID_Бригады = @ID_Бригады)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Цеха", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Цеха", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Бригады", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Бригады", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Цеха", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Цеха", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Наименование", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Наименование", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Бригады", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Бригады", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutomationApp.Properties.Settings.Default.AutomationAppDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Бригады.ID_Бригады, Бригады.ID_Цеха, Бригады.Наименование, Цеха.Наи" +
                "менование AS Цех\r\nFROM            Бригады INNER JOIN\r\n                         Ц" +
                "еха ON Бригады.ID_Цеха = Цеха.ID_Цеха";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutomationAppDBDataSet.БригадыDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutomationAppDBDataSet.БригадыDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutomationAppDBDataSet.БригадыDataTable dataTable = new AutomationAppDBDataSet.БригадыDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet.БригадыDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Бригады");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Бригады, int Original_ID_Цеха, string Original_Наименование) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Бригады));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_Цеха));
            if ((Original_Наименование == null)) {
                throw new global::System.ArgumentNullException("Original_Наименование");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Наименование));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_Цеха, string Наименование) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Цеха));
            if ((Наименование == null)) {
                throw new global::System.ArgumentNullException("Наименование");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Наименование));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Цеха, string Наименование, int Original_ID_Бригады, int Original_ID_Цеха, string Original_Наименование, int ID_Бригады) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Цеха));
            if ((Наименование == null)) {
                throw new global::System.ArgumentNullException("Наименование");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Наименование));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_ID_Бригады));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID_Цеха));
            if ((Original_Наименование == null)) {
                throw new global::System.ArgumentNullException("Original_Наименование");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_Наименование));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(ID_Бригады));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Цеха, string Наименование, int Original_ID_Бригады, int Original_ID_Цеха, string Original_Наименование) {
            return this.Update(ID_Цеха, Наименование, Original_ID_Бригады, Original_ID_Цеха, Original_Наименование, Original_ID_Бригады);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Маршрутные_листыTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Маршрутные_листыTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Маршрутные_листы";
            tableMapping.ColumnMappings.Add("ID_Маршрутного_листа", "ID_Маршрутного_листа");
            tableMapping.ColumnMappings.Add("ID_Модели_изделия", "ID_Модели_изделия");
            tableMapping.ColumnMappings.Add("Номер_заказа", "Номер_заказа");
            tableMapping.ColumnMappings.Add("Рост", "Рост");
            tableMapping.ColumnMappings.Add("Размер", "Размер");
            tableMapping.ColumnMappings.Add("Полнота", "Полнота");
            tableMapping.ColumnMappings.Add("Код_цвета", "Код_цвета");
            tableMapping.ColumnMappings.Add("Модель_изделия", "Модель_изделия");
            tableMapping.ColumnMappings.Add("ID_Изделия", "ID_Изделия");
            tableMapping.ColumnMappings.Add("Наименование", "Наименование");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Маршрутные_листы] WHERE (([ID_Маршрутного_листа] = @Original_ID_Маршрутного_листа) AND ([ID_Модели_изделия] = @Original_ID_Модели_изделия) AND ([Номер_заказа] = @Original_Номер_заказа) AND ([Рост] = @Original_Рост) AND ([Размер] = @Original_Размер) AND ([Полнота] = @Original_Полнота) AND ([Код_цвета] = @Original_Код_цвета))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Маршрутного_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Маршрутного_листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Модели_изделия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_изделия", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Номер_заказа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер_заказа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Рост", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Рост", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Размер", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Размер", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Полнота", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Полнота", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_цвета", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_цвета", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Маршрутные_листы] ([ID_Модели_изделия], [Номер_заказа], [Рост], [Размер], [Полнота], [Код_цвета]) VALUES (@ID_Модели_изделия, @Номер_заказа, @Рост, @Размер, @Полнота, @Код_цвета);
SELECT ID_Маршрутного_листа, ID_Модели_изделия, Номер_заказа, Рост, Размер, Полнота, Код_цвета FROM Маршрутные_листы WHERE (ID_Маршрутного_листа = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Модели_изделия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_изделия", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Номер_заказа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер_заказа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Рост", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Рост", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Размер", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Размер", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Полнота", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Полнота", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_цвета", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_цвета", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Маршрутные_листы] SET [ID_Модели_изделия] = @ID_Модели_изделия, [Номер_заказа] = @Номер_заказа, [Рост] = @Рост, [Размер] = @Размер, [Полнота] = @Полнота, [Код_цвета] = @Код_цвета WHERE (([ID_Маршрутного_листа] = @Original_ID_Маршрутного_листа) AND ([ID_Модели_изделия] = @Original_ID_Модели_изделия) AND ([Номер_заказа] = @Original_Номер_заказа) AND ([Рост] = @Original_Рост) AND ([Размер] = @Original_Размер) AND ([Полнота] = @Original_Полнота) AND ([Код_цвета] = @Original_Код_цвета));
SELECT ID_Маршрутного_листа, ID_Модели_изделия, Номер_заказа, Рост, Размер, Полнота, Код_цвета FROM Маршрутные_листы WHERE (ID_Маршрутного_листа = @ID_Маршрутного_листа)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Модели_изделия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_изделия", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Номер_заказа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер_заказа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Рост", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Рост", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Размер", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Размер", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Полнота", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Полнота", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Код_цвета", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_цвета", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Маршрутного_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Маршрутного_листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Модели_изделия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_изделия", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Номер_заказа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Номер_заказа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Рост", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Рост", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Размер", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Размер", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Полнота", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Полнота", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Код_цвета", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Код_цвета", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Маршрутного_листа", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Маршрутного_листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutomationApp.Properties.Settings.Default.AutomationAppDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Маршрутные_листы.ID_Маршрутного_листа, Маршрутные_листы.ID_Модели_изделия, Маршрутные_листы.Номер_заказа, Маршрутные_листы.Рост, Маршрутные_листы.Размер, Маршрутные_листы.Полнота, 
                         Маршрутные_листы.Код_цвета, Модели_изделия.Модель_изделия, Изделия.ID_Изделия, Изделия.Наименование
FROM            Маршрутные_листы INNER JOIN
                         Модели_изделия ON Маршрутные_листы.ID_Модели_изделия = Модели_изделия.ID_Модели_изделия INNER JOIN
                         Изделия ON Модели_изделия.ID_Изделия = Изделия.ID_Изделия";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutomationAppDBDataSet.Маршрутные_листыDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutomationAppDBDataSet.Маршрутные_листыDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutomationAppDBDataSet.Маршрутные_листыDataTable dataTable = new AutomationAppDBDataSet.Маршрутные_листыDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet.Маршрутные_листыDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Маршрутные_листы");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Маршрутного_листа, int Original_ID_Модели_изделия, int Original_Номер_заказа, int Original_Рост, int Original_Размер, int Original_Полнота, int Original_Код_цвета) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Маршрутного_листа));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_Модели_изделия));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Номер_заказа));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Рост));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Размер));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_Полнота));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_Код_цвета));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_Модели_изделия, int Номер_заказа, int Рост, int Размер, int Полнота, int Код_цвета) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Модели_изделия));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Номер_заказа));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Рост));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Размер));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(Полнота));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(Код_цвета));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Модели_изделия, int Номер_заказа, int Рост, int Размер, int Полнота, int Код_цвета, int Original_ID_Маршрутного_листа, int Original_ID_Модели_изделия, int Original_Номер_заказа, int Original_Рост, int Original_Размер, int Original_Полнота, int Original_Код_цвета, int ID_Маршрутного_листа) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Модели_изделия));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Номер_заказа));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Рост));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Размер));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Полнота));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Код_цвета));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ID_Маршрутного_листа));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_ID_Модели_изделия));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_Номер_заказа));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_Рост));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_Размер));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_Полнота));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_Код_цвета));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(ID_Маршрутного_листа));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Модели_изделия, int Номер_заказа, int Рост, int Размер, int Полнота, int Код_цвета, int Original_ID_Маршрутного_листа, int Original_ID_Модели_изделия, int Original_Номер_заказа, int Original_Рост, int Original_Размер, int Original_Полнота, int Original_Код_цвета) {
            return this.Update(ID_Модели_изделия, Номер_заказа, Рост, Размер, Полнота, Код_цвета, Original_ID_Маршрутного_листа, Original_ID_Модели_изделия, Original_Номер_заказа, Original_Рост, Original_Размер, Original_Полнота, Original_Код_цвета, Original_ID_Маршрутного_листа);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Материальные_ценности_по_ордеру_на_тканьTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Материальные_ценности_по_ордеру_на_тканьTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Материальные_ценности_по_ордеру_на_ткань";
            tableMapping.ColumnMappings.Add("ID_Материальной_ценности", "ID_Материальной_ценности");
            tableMapping.ColumnMappings.Add("ID_Приходного_ордера", "ID_Приходного_ордера");
            tableMapping.ColumnMappings.Add("ID_Модели_ткани", "ID_Модели_ткани");
            tableMapping.ColumnMappings.Add("Единица_измерения", "Единица_измерения");
            tableMapping.ColumnMappings.Add("Количество", "Количество");
            tableMapping.ColumnMappings.Add("Цена", "Цена");
            tableMapping.ColumnMappings.Add("Сумма_НДС", "Сумма_НДС");
            tableMapping.ColumnMappings.Add("Сумма_без_НДС", "Сумма_без_НДС");
            tableMapping.ColumnMappings.Add("Всего_с_НДС", "Всего_с_НДС");
            tableMapping.ColumnMappings.Add("ID_Ткани", "ID_Ткани");
            tableMapping.ColumnMappings.Add("Материальные_ценности", "Материальные_ценности");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Материальные_ценности_по_ордеру_на_ткань] WHERE (([ID_Материальной_ценности] = @Original_ID_Материальной_ценности) AND ([ID_Приходного_ордера] = @Original_ID_Приходного_ордера) AND ([ID_Модели_ткани] = @Original_ID_Модели_ткани) AND ([Единица_измерения] = @Original_Единица_измерения) AND ([Количество] = @Original_Количество) AND ([Цена] = @Original_Цена) AND ((@IsNull_Сумма_НДС = 1 AND [Сумма_НДС] IS NULL) OR ([Сумма_НДС] = @Original_Сумма_НДС)) AND ([Сумма_без_НДС] = @Original_Сумма_без_НДС) AND ([Всего_с_НДС] = @Original_Всего_с_НДС))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Материальной_ценности", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Материальной_ценности", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Приходного_ордера", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Приходного_ордера", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Модели_ткани", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_ткани", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Цена", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Сумма_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма_НДС", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Сумма_НДС", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма_НДС", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Сумма_без_НДС", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма_без_НДС", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Всего_с_НДС", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Всего_с_НДС", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Материальные_ценности_по_ордеру_на_ткань] ([ID_Приходного_ордера], [ID_Модели_ткани], [Единица_измерения], [Количество], [Цена], [Сумма_НДС], [Сумма_без_НДС], [Всего_с_НДС]) VALUES (@ID_Приходного_ордера, @ID_Модели_ткани, @Единица_измерения, @Количество, @Цена, @Сумма_НДС, @Сумма_без_НДС, @Всего_с_НДС);
SELECT ID_Материальной_ценности, ID_Приходного_ордера, ID_Модели_ткани, Единица_измерения, Количество, Цена, Сумма_НДС, Сумма_без_НДС, Всего_с_НДС FROM Материальные_ценности_по_ордеру_на_ткань WHERE (ID_Материальной_ценности = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Приходного_ордера", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Приходного_ордера", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Модели_ткани", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_ткани", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Цена", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Сумма_НДС", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма_НДС", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Сумма_без_НДС", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма_без_НДС", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Всего_с_НДС", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Всего_с_НДС", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Материальные_ценности_по_ордеру_на_ткань] SET [ID_Приходного_ордера] = @ID_Приходного_ордера, [ID_Модели_ткани] = @ID_Модели_ткани, [Единица_измерения] = @Единица_измерения, [Количество] = @Количество, [Цена] = @Цена, [Сумма_НДС] = @Сумма_НДС, [Сумма_без_НДС] = @Сумма_без_НДС, [Всего_с_НДС] = @Всего_с_НДС WHERE (([ID_Материальной_ценности] = @Original_ID_Материальной_ценности) AND ([ID_Приходного_ордера] = @Original_ID_Приходного_ордера) AND ([ID_Модели_ткани] = @Original_ID_Модели_ткани) AND ([Единица_измерения] = @Original_Единица_измерения) AND ([Количество] = @Original_Количество) AND ([Цена] = @Original_Цена) AND ((@IsNull_Сумма_НДС = 1 AND [Сумма_НДС] IS NULL) OR ([Сумма_НДС] = @Original_Сумма_НДС)) AND ([Сумма_без_НДС] = @Original_Сумма_без_НДС) AND ([Всего_с_НДС] = @Original_Всего_с_НДС));
SELECT ID_Материальной_ценности, ID_Приходного_ордера, ID_Модели_ткани, Единица_измерения, Количество, Цена, Сумма_НДС, Сумма_без_НДС, Всего_с_НДС FROM Материальные_ценности_по_ордеру_на_ткань WHERE (ID_Материальной_ценности = @ID_Материальной_ценности)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Приходного_ордера", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Приходного_ордера", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Модели_ткани", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_ткани", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Цена", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Сумма_НДС", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма_НДС", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Сумма_без_НДС", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма_без_НДС", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Всего_с_НДС", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Всего_с_НДС", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Материальной_ценности", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Материальной_ценности", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Приходного_ордера", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Приходного_ордера", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Модели_ткани", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_ткани", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Цена", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Сумма_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма_НДС", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Сумма_НДС", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма_НДС", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Сумма_без_НДС", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма_без_НДС", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Всего_с_НДС", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Всего_с_НДС", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Материальной_ценности", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Материальной_ценности", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutomationApp.Properties.Settings.Default.AutomationAppDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Материальные_ценности_по_ордеру_на_ткань.ID_Материальной_ценности, Материальные_ценности_по_ордеру_на_ткань.ID_Приходного_ордера, Материальные_ценности_по_ордеру_на_ткань.ID_Модели_ткани, 
                         Материальные_ценности_по_ордеру_на_ткань.Единица_измерения, Материальные_ценности_по_ордеру_на_ткань.Количество, Материальные_ценности_по_ордеру_на_ткань.Цена, 
                         Материальные_ценности_по_ордеру_на_ткань.Сумма_НДС, Материальные_ценности_по_ордеру_на_ткань.Сумма_без_НДС, Материальные_ценности_по_ордеру_на_ткань.Всего_с_НДС, Ткани.ID_Ткани, 
                         Ткани.Наименование + ' ' + Модели_ткани.Модель_ткани AS Материальные_ценности
FROM            Материальные_ценности_по_ордеру_на_ткань INNER JOIN
                         Модели_ткани ON Материальные_ценности_по_ордеру_на_ткань.ID_Модели_ткани = Модели_ткани.ID_Модели_ткани INNER JOIN
                         Ткани ON Модели_ткани.ID_Ткани = Ткани.ID_Ткани";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutomationAppDBDataSet.Материальные_ценности_по_ордеру_на_тканьDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutomationAppDBDataSet.Материальные_ценности_по_ордеру_на_тканьDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutomationAppDBDataSet.Материальные_ценности_по_ордеру_на_тканьDataTable dataTable = new AutomationAppDBDataSet.Материальные_ценности_по_ордеру_на_тканьDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet.Материальные_ценности_по_ордеру_на_тканьDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Материальные_ценности_по_ордеру_на_ткань");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Материальной_ценности, int Original_ID_Приходного_ордера, int Original_ID_Модели_ткани, string Original_Единица_измерения, int Original_Количество, decimal Original_Цена, global::System.Nullable<decimal> Original_Сумма_НДС, decimal Original_Сумма_без_НДС, decimal Original_Всего_с_НДС) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Материальной_ценности));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_Приходного_ордера));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ID_Модели_ткани));
            if ((Original_Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Original_Единица_измерения");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Единица_измерения));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Количество));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_Цена));
            if ((Original_Сумма_НДС.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_Сумма_НДС.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_Сумма_без_НДС));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_Всего_с_НДС));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_Приходного_ордера, int ID_Модели_ткани, string Единица_измерения, int Количество, decimal Цена, global::System.Nullable<decimal> Сумма_НДС, decimal Сумма_без_НДС, decimal Всего_с_НДС) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Приходного_ордера));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_Модели_ткани));
            if ((Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Единица_измерения");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Единица_измерения));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Количество));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(Цена));
            if ((Сумма_НДС.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(Сумма_НДС.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(Сумма_без_НДС));
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(Всего_с_НДС));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ID_Приходного_ордера, 
                    int ID_Модели_ткани, 
                    string Единица_измерения, 
                    int Количество, 
                    decimal Цена, 
                    global::System.Nullable<decimal> Сумма_НДС, 
                    decimal Сумма_без_НДС, 
                    decimal Всего_с_НДС, 
                    int Original_ID_Материальной_ценности, 
                    int Original_ID_Приходного_ордера, 
                    int Original_ID_Модели_ткани, 
                    string Original_Единица_измерения, 
                    int Original_Количество, 
                    decimal Original_Цена, 
                    global::System.Nullable<decimal> Original_Сумма_НДС, 
                    decimal Original_Сумма_без_НДС, 
                    decimal Original_Всего_с_НДС, 
                    int ID_Материальной_ценности) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Приходного_ордера));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_Модели_ткани));
            if ((Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Единица_измерения");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Единица_измерения));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Количество));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Цена));
            if ((Сумма_НДС.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Сумма_НДС.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Сумма_без_НДС));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Всего_с_НДС));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_ID_Материальной_ценности));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_ID_Приходного_ордера));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_ID_Модели_ткани));
            if ((Original_Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Original_Единица_измерения");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Единица_измерения));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_Количество));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Original_Цена));
            if ((Original_Сумма_НДС.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_Сумма_НДС.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(Original_Сумма_без_НДС));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(Original_Всего_с_НДС));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(ID_Материальной_ценности));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ID_Приходного_ордера, 
                    int ID_Модели_ткани, 
                    string Единица_измерения, 
                    int Количество, 
                    decimal Цена, 
                    global::System.Nullable<decimal> Сумма_НДС, 
                    decimal Сумма_без_НДС, 
                    decimal Всего_с_НДС, 
                    int Original_ID_Материальной_ценности, 
                    int Original_ID_Приходного_ордера, 
                    int Original_ID_Модели_ткани, 
                    string Original_Единица_измерения, 
                    int Original_Количество, 
                    decimal Original_Цена, 
                    global::System.Nullable<decimal> Original_Сумма_НДС, 
                    decimal Original_Сумма_без_НДС, 
                    decimal Original_Всего_с_НДС) {
            return this.Update(ID_Приходного_ордера, ID_Модели_ткани, Единица_измерения, Количество, Цена, Сумма_НДС, Сумма_без_НДС, Всего_с_НДС, Original_ID_Материальной_ценности, Original_ID_Приходного_ордера, Original_ID_Модели_ткани, Original_Единица_измерения, Original_Количество, Original_Цена, Original_Сумма_НДС, Original_Сумма_без_НДС, Original_Всего_с_НДС, Original_ID_Материальной_ценности);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Склад_готовой_продукцииTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Склад_готовой_продукцииTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Склад_готовой_продукции";
            tableMapping.ColumnMappings.Add("ID_Готовой_продукции_на_складе", "ID_Готовой_продукции_на_складе");
            tableMapping.ColumnMappings.Add("ID_Модели_изделия", "ID_Модели_изделия");
            tableMapping.ColumnMappings.Add("Сорт", "Сорт");
            tableMapping.ColumnMappings.Add("Единица_измерения", "Единица_измерения");
            tableMapping.ColumnMappings.Add("Количество", "Количество");
            tableMapping.ColumnMappings.Add("ID_Изделия", "ID_Изделия");
            tableMapping.ColumnMappings.Add("Наименование", "Наименование");
            tableMapping.ColumnMappings.Add("Модель_изделия", "Модель_изделия");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Склад_готовой_продукции] WHERE (([ID_Готовой_продукции_на_складе] = @Original_ID_Готовой_продукции_на_складе) AND ([ID_Модели_изделия] = @Original_ID_Модели_изделия) AND ([Сорт] = @Original_Сорт) AND ([Единица_измерения] = @Original_Единица_измерения) AND ([Количество] = @Original_Количество))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Готовой_продукции_на_складе", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Готовой_продукции_на_складе", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Модели_изделия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_изделия", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Сорт", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сорт", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Склад_готовой_продукции] ([ID_Модели_изделия], [Сорт], [Единица_измерения], [Количество]) VALUES (@ID_Модели_изделия, @Сорт, @Единица_измерения, @Количество);
SELECT ID_Готовой_продукции_на_складе, ID_Модели_изделия, Сорт, Единица_измерения, Количество FROM Склад_готовой_продукции WHERE (ID_Готовой_продукции_на_складе = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Модели_изделия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_изделия", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Сорт", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сорт", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Склад_готовой_продукции] SET [ID_Модели_изделия] = @ID_Модели_изделия, [Сорт] = @Сорт, [Единица_измерения] = @Единица_измерения, [Количество] = @Количество WHERE (([ID_Готовой_продукции_на_складе] = @Original_ID_Готовой_продукции_на_складе) AND ([ID_Модели_изделия] = @Original_ID_Модели_изделия) AND ([Сорт] = @Original_Сорт) AND ([Единица_измерения] = @Original_Единица_измерения) AND ([Количество] = @Original_Количество));
SELECT ID_Готовой_продукции_на_складе, ID_Модели_изделия, Сорт, Единица_измерения, Количество FROM Склад_готовой_продукции WHERE (ID_Готовой_продукции_на_складе = @ID_Готовой_продукции_на_складе)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Модели_изделия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_изделия", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Сорт", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сорт", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Готовой_продукции_на_складе", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Готовой_продукции_на_складе", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Модели_изделия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Модели_изделия", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Сорт", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сорт", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Готовой_продукции_на_складе", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Готовой_продукции_на_складе", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutomationApp.Properties.Settings.Default.AutomationAppDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Склад_готовой_продукции.ID_Готовой_продукции_на_складе, Склад_готовой_продукции.ID_Модели_изделия, Склад_готовой_продукции.Сорт, Склад_готовой_продукции.Единица_измерения, 
                         Склад_готовой_продукции.Количество, Изделия.ID_Изделия, Изделия.Наименование, Модели_изделия.Модель_изделия
FROM            Склад_готовой_продукции INNER JOIN
                         Модели_изделия ON Склад_готовой_продукции.ID_Модели_изделия = Модели_изделия.ID_Модели_изделия INNER JOIN
                         Изделия ON Модели_изделия.ID_Изделия = Изделия.ID_Изделия";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutomationAppDBDataSet.Склад_готовой_продукцииDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutomationAppDBDataSet.Склад_готовой_продукцииDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutomationAppDBDataSet.Склад_готовой_продукцииDataTable dataTable = new AutomationAppDBDataSet.Склад_готовой_продукцииDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet.Склад_готовой_продукцииDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Склад_готовой_продукции");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Готовой_продукции_на_складе, int Original_ID_Модели_изделия, int Original_Сорт, string Original_Единица_измерения, int Original_Количество) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Готовой_продукции_на_складе));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_Модели_изделия));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Сорт));
            if ((Original_Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Original_Единица_измерения");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Единица_измерения));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Количество));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_Модели_изделия, int Сорт, string Единица_измерения, int Количество) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Модели_изделия));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Сорт));
            if ((Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Единица_измерения");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Единица_измерения));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Количество));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Модели_изделия, int Сорт, string Единица_измерения, int Количество, int Original_ID_Готовой_продукции_на_складе, int Original_ID_Модели_изделия, int Original_Сорт, string Original_Единица_измерения, int Original_Количество, int ID_Готовой_продукции_на_складе) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Модели_изделия));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Сорт));
            if ((Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Единица_измерения");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Единица_измерения));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Количество));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_Готовой_продукции_на_складе));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID_Модели_изделия));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_Сорт));
            if ((Original_Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Original_Единица_измерения");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Единица_измерения));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_Количество));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(ID_Готовой_продукции_на_складе));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Модели_изделия, int Сорт, string Единица_измерения, int Количество, int Original_ID_Готовой_продукции_на_складе, int Original_ID_Модели_изделия, int Original_Сорт, string Original_Единица_измерения, int Original_Количество) {
            return this.Update(ID_Модели_изделия, Сорт, Единица_измерения, Количество, Original_ID_Готовой_продукции_на_складе, Original_ID_Модели_изделия, Original_Сорт, Original_Единица_измерения, Original_Количество, Original_ID_Готовой_продукции_на_складе);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Товарный_раздел_товарной_накладнойTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Товарный_раздел_товарной_накладнойTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Товарный_раздел_товарной_накладной";
            tableMapping.ColumnMappings.Add("ID_Товарного_раздела", "ID_Товарного_раздела");
            tableMapping.ColumnMappings.Add("ID_Товарной_накладной", "ID_Товарной_накладной");
            tableMapping.ColumnMappings.Add("ID_Готовой_продукции_на_складе", "ID_Готовой_продукции_на_складе");
            tableMapping.ColumnMappings.Add("Единица_измерения", "Единица_измерения");
            tableMapping.ColumnMappings.Add("Количество", "Количество");
            tableMapping.ColumnMappings.Add("Цена", "Цена");
            tableMapping.ColumnMappings.Add("Стоимость_продукции", "Стоимость_продукции");
            tableMapping.ColumnMappings.Add("Ставка_НДС", "Ставка_НДС");
            tableMapping.ColumnMappings.Add("Сумма_НДС", "Сумма_НДС");
            tableMapping.ColumnMappings.Add("Всего_с_НДС", "Всего_с_НДС");
            tableMapping.ColumnMappings.Add("Материальные_ценности", "Материальные_ценности");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Товарный_раздел_товарной_накладной] WHERE (([ID_Товарного_раздела] = @Original_ID_Товарного_раздела) AND ([ID_Товарной_накладной] = @Original_ID_Товарной_накладной) AND ([ID_Готовой_продукции_на_складе] = @Original_ID_Готовой_продукции_на_складе) AND ([Единица_измерения] = @Original_Единица_измерения) AND ([Количество] = @Original_Количество) AND ([Цена] = @Original_Цена) AND ([Стоимость_продукции] = @Original_Стоимость_продукции) AND ((@IsNull_Ставка_НДС = 1 AND [Ставка_НДС] IS NULL) OR ([Ставка_НДС] = @Original_Ставка_НДС)) AND ((@IsNull_Сумма_НДС = 1 AND [Сумма_НДС] IS NULL) OR ([Сумма_НДС] = @Original_Сумма_НДС)) AND ([Всего_с_НДС] = @Original_Всего_с_НДС))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Товарного_раздела", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Товарного_раздела", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Товарной_накладной", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Товарной_накладной", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Готовой_продукции_на_складе", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Готовой_продукции_на_складе", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Цена", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Стоимость_продукции", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Стоимость_продукции", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ставка_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ставка_НДС", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ставка_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ставка_НДС", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Сумма_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма_НДС", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Сумма_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма_НДС", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Всего_с_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Всего_с_НДС", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Товарный_раздел_товарной_накладной] ([ID_Товарной_накладной], [ID_Готовой_продукции_на_складе], [Единица_измерения], [Количество], [Цена], [Стоимость_продукции], [Ставка_НДС], [Сумма_НДС], [Всего_с_НДС]) VALUES (@ID_Товарной_накладной, @ID_Готовой_продукции_на_складе, @Единица_измерения, @Количество, @Цена, @Стоимость_продукции, @Ставка_НДС, @Сумма_НДС, @Всего_с_НДС);
SELECT ID_Товарного_раздела, ID_Товарной_накладной, ID_Готовой_продукции_на_складе, Единица_измерения, Количество, Цена, Стоимость_продукции, Ставка_НДС, Сумма_НДС, Всего_с_НДС FROM Товарный_раздел_товарной_накладной WHERE (ID_Товарного_раздела = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Товарной_накладной", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Товарной_накладной", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Готовой_продукции_на_складе", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Готовой_продукции_на_складе", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Цена", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Стоимость_продукции", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Стоимость_продукции", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ставка_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ставка_НДС", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Сумма_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма_НДС", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Всего_с_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Всего_с_НДС", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Товарный_раздел_товарной_накладной] SET [ID_Товарной_накладной] = @ID_Товарной_накладной, [ID_Готовой_продукции_на_складе] = @ID_Готовой_продукции_на_складе, [Единица_измерения] = @Единица_измерения, [Количество] = @Количество, [Цена] = @Цена, [Стоимость_продукции] = @Стоимость_продукции, [Ставка_НДС] = @Ставка_НДС, [Сумма_НДС] = @Сумма_НДС, [Всего_с_НДС] = @Всего_с_НДС WHERE (([ID_Товарного_раздела] = @Original_ID_Товарного_раздела) AND ([ID_Товарной_накладной] = @Original_ID_Товарной_накладной) AND ([ID_Готовой_продукции_на_складе] = @Original_ID_Готовой_продукции_на_складе) AND ([Единица_измерения] = @Original_Единица_измерения) AND ([Количество] = @Original_Количество) AND ([Цена] = @Original_Цена) AND ([Стоимость_продукции] = @Original_Стоимость_продукции) AND ((@IsNull_Ставка_НДС = 1 AND [Ставка_НДС] IS NULL) OR ([Ставка_НДС] = @Original_Ставка_НДС)) AND ((@IsNull_Сумма_НДС = 1 AND [Сумма_НДС] IS NULL) OR ([Сумма_НДС] = @Original_Сумма_НДС)) AND ([Всего_с_НДС] = @Original_Всего_с_НДС));
SELECT ID_Товарного_раздела, ID_Товарной_накладной, ID_Готовой_продукции_на_складе, Единица_измерения, Количество, Цена, Стоимость_продукции, Ставка_НДС, Сумма_НДС, Всего_с_НДС FROM Товарный_раздел_товарной_накладной WHERE (ID_Товарного_раздела = @ID_Товарного_раздела)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Товарной_накладной", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Товарной_накладной", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Готовой_продукции_на_складе", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Готовой_продукции_на_складе", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Цена", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Стоимость_продукции", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Стоимость_продукции", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ставка_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ставка_НДС", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Сумма_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма_НДС", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Всего_с_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Всего_с_НДС", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Товарного_раздела", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Товарного_раздела", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Товарной_накладной", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Товарной_накладной", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Готовой_продукции_на_складе", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Готовой_продукции_на_складе", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Единица_измерения", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Единица_измерения", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Цена", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Цена", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Стоимость_продукции", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Стоимость_продукции", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ставка_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ставка_НДС", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ставка_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ставка_НДС", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Сумма_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма_НДС", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Сумма_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма_НДС", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Всего_с_НДС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Всего_с_НДС", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Товарного_раздела", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Товарного_раздела", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutomationApp.Properties.Settings.Default.AutomationAppDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Товарный_раздел_товарной_накладной.ID_Товарного_раздела, Товарный_раздел_товарной_накладной.ID_Товарной_накладной, Товарный_раздел_товарной_накладной.ID_Готовой_продукции_на_складе, 
                         Товарный_раздел_товарной_накладной.Единица_измерения, Товарный_раздел_товарной_накладной.Количество, Товарный_раздел_товарной_накладной.Цена, 
                         Товарный_раздел_товарной_накладной.Стоимость_продукции, Товарный_раздел_товарной_накладной.Ставка_НДС, Товарный_раздел_товарной_накладной.Сумма_НДС, 
                         Товарный_раздел_товарной_накладной.Всего_с_НДС, Изделия.Наименование + ' ' + Модели_изделия.Модель_изделия AS Материальные_ценности
FROM            Товарный_раздел_товарной_накладной INNER JOIN
                         Склад_готовой_продукции ON Товарный_раздел_товарной_накладной.ID_Готовой_продукции_на_складе = Склад_готовой_продукции.ID_Готовой_продукции_на_складе INNER JOIN
                         Модели_изделия ON Склад_готовой_продукции.ID_Модели_изделия = Модели_изделия.ID_Модели_изделия INNER JOIN
                         Изделия ON Модели_изделия.ID_Изделия = Изделия.ID_Изделия";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutomationAppDBDataSet.Товарный_раздел_товарной_накладнойDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutomationAppDBDataSet.Товарный_раздел_товарной_накладнойDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutomationAppDBDataSet.Товарный_раздел_товарной_накладнойDataTable dataTable = new AutomationAppDBDataSet.Товарный_раздел_товарной_накладнойDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet.Товарный_раздел_товарной_накладнойDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Товарный_раздел_товарной_накладной");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Товарного_раздела, int Original_ID_Товарной_накладной, int Original_ID_Готовой_продукции_на_складе, string Original_Единица_измерения, int Original_Количество, decimal Original_Цена, decimal Original_Стоимость_продукции, global::System.Nullable<int> Original_Ставка_НДС, global::System.Nullable<int> Original_Сумма_НДС, int Original_Всего_с_НДС) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Товарного_раздела));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_Товарной_накладной));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ID_Готовой_продукции_на_складе));
            if ((Original_Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Original_Единица_измерения");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Единица_измерения));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Количество));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_Цена));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_Стоимость_продукции));
            if ((Original_Ставка_НДС.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_Ставка_НДС.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_Сумма_НДС.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_Сумма_НДС.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_Всего_с_НДС));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_Товарной_накладной, int ID_Готовой_продукции_на_складе, string Единица_измерения, int Количество, decimal Цена, decimal Стоимость_продукции, global::System.Nullable<int> Ставка_НДС, global::System.Nullable<int> Сумма_НДС, int Всего_с_НДС) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Товарной_накладной));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_Готовой_продукции_на_складе));
            if ((Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Единица_измерения");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Единица_измерения));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Количество));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(Цена));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(Стоимость_продукции));
            if ((Ставка_НДС.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(Ставка_НДС.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Сумма_НДС.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(Сумма_НДС.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(Всего_с_НДС));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ID_Товарной_накладной, 
                    int ID_Готовой_продукции_на_складе, 
                    string Единица_измерения, 
                    int Количество, 
                    decimal Цена, 
                    decimal Стоимость_продукции, 
                    global::System.Nullable<int> Ставка_НДС, 
                    global::System.Nullable<int> Сумма_НДС, 
                    int Всего_с_НДС, 
                    int Original_ID_Товарного_раздела, 
                    int Original_ID_Товарной_накладной, 
                    int Original_ID_Готовой_продукции_на_складе, 
                    string Original_Единица_измерения, 
                    int Original_Количество, 
                    decimal Original_Цена, 
                    decimal Original_Стоимость_продукции, 
                    global::System.Nullable<int> Original_Ставка_НДС, 
                    global::System.Nullable<int> Original_Сумма_НДС, 
                    int Original_Всего_с_НДС, 
                    int ID_Товарного_раздела) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Товарной_накладной));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_Готовой_продукции_на_складе));
            if ((Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Единица_измерения");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Единица_измерения));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Количество));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Цена));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Стоимость_продукции));
            if ((Ставка_НДС.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Ставка_НДС.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Сумма_НДС.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Сумма_НДС.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Всего_с_НДС));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_ID_Товарного_раздела));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_ID_Товарной_накладной));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_ID_Готовой_продукции_на_складе));
            if ((Original_Единица_измерения == null)) {
                throw new global::System.ArgumentNullException("Original_Единица_измерения");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Единица_измерения));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_Количество));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Original_Цена));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_Стоимость_продукции));
            if ((Original_Ставка_НДС.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_Ставка_НДС.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_Сумма_НДС.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_Сумма_НДС.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_Всего_с_НДС));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(ID_Товарного_раздела));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ID_Товарной_накладной, 
                    int ID_Готовой_продукции_на_складе, 
                    string Единица_измерения, 
                    int Количество, 
                    decimal Цена, 
                    decimal Стоимость_продукции, 
                    global::System.Nullable<int> Ставка_НДС, 
                    global::System.Nullable<int> Сумма_НДС, 
                    int Всего_с_НДС, 
                    int Original_ID_Товарного_раздела, 
                    int Original_ID_Товарной_накладной, 
                    int Original_ID_Готовой_продукции_на_складе, 
                    string Original_Единица_измерения, 
                    int Original_Количество, 
                    decimal Original_Цена, 
                    decimal Original_Стоимость_продукции, 
                    global::System.Nullable<int> Original_Ставка_НДС, 
                    global::System.Nullable<int> Original_Сумма_НДС, 
                    int Original_Всего_с_НДС) {
            return this.Update(ID_Товарной_накладной, ID_Готовой_продукции_на_складе, Единица_измерения, Количество, Цена, Стоимость_продукции, Ставка_НДС, Сумма_НДС, Всего_с_НДС, Original_ID_Товарного_раздела, Original_ID_Товарной_накладной, Original_ID_Готовой_продукции_на_складе, Original_Единица_измерения, Original_Количество, Original_Цена, Original_Стоимость_продукции, Original_Ставка_НДС, Original_Сумма_НДС, Original_Всего_с_НДС, Original_ID_Товарного_раздела);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Изделия_принятые_на_складTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Изделия_принятые_на_складTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Изделия_принятые_на_склад";
            tableMapping.ColumnMappings.Add("ID_Принятого_изделия", "ID_Принятого_изделия");
            tableMapping.ColumnMappings.Add("ID_Маршрутного_листа", "ID_Маршрутного_листа");
            tableMapping.ColumnMappings.Add("Количество", "Количество");
            tableMapping.ColumnMappings.Add("Сорт", "Сорт");
            tableMapping.ColumnMappings.Add("ID_Модели_изделия", "ID_Модели_изделия");
            tableMapping.ColumnMappings.Add("ID_Изделия", "ID_Изделия");
            tableMapping.ColumnMappings.Add("Наименование", "Наименование");
            tableMapping.ColumnMappings.Add("Модель_изделия", "Модель_изделия");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Изделия_принятые_на_склад] WHERE (([ID_Принятого_изделия] = @Origina" +
                "l_ID_Принятого_изделия) AND ([ID_Маршрутного_листа] = @Original_ID_Маршрутного_л" +
                "иста) AND ([Количество] = @Original_Количество) AND ([Сорт] = @Original_Сорт))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Принятого_изделия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Принятого_изделия", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Маршрутного_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Маршрутного_листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Сорт", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сорт", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Изделия_принятые_на_склад] ([ID_Маршрутного_листа], [Количество], [Сорт]) VALUES (@ID_Маршрутного_листа, @Количество, @Сорт);
SELECT ID_Принятого_изделия, ID_Маршрутного_листа, Количество, Сорт FROM Изделия_принятые_на_склад WHERE (ID_Принятого_изделия = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Маршрутного_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Маршрутного_листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Сорт", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сорт", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Изделия_принятые_на_склад] SET [ID_Маршрутного_листа] = @ID_Маршрутного_листа, [Количество] = @Количество, [Сорт] = @Сорт WHERE (([ID_Принятого_изделия] = @Original_ID_Принятого_изделия) AND ([ID_Маршрутного_листа] = @Original_ID_Маршрутного_листа) AND ([Количество] = @Original_Количество) AND ([Сорт] = @Original_Сорт));
SELECT ID_Принятого_изделия, ID_Маршрутного_листа, Количество, Сорт FROM Изделия_принятые_на_склад WHERE (ID_Принятого_изделия = @ID_Принятого_изделия)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Маршрутного_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Маршрутного_листа", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Сорт", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сорт", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Принятого_изделия", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Принятого_изделия", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Маршрутного_листа", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Маршрутного_листа", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Сорт", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сорт", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Принятого_изделия", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Принятого_изделия", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AutomationApp.Properties.Settings.Default.AutomationAppDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Изделия_принятые_на_склад.ID_Принятого_изделия, Изделия_принятые_на_склад.ID_Маршрутного_листа, Изделия_принятые_на_склад.Количество, Изделия_принятые_на_склад.Сорт, 
                         Маршрутные_листы.ID_Модели_изделия, Изделия.ID_Изделия, Изделия.Наименование, Модели_изделия.Модель_изделия
FROM            Изделия_принятые_на_склад INNER JOIN
                         Маршрутные_листы ON Изделия_принятые_на_склад.ID_Маршрутного_листа = Маршрутные_листы.ID_Маршрутного_листа INNER JOIN
                         Модели_изделия ON Маршрутные_листы.ID_Модели_изделия = Модели_изделия.ID_Модели_изделия INNER JOIN
                         Изделия ON Модели_изделия.ID_Изделия = Изделия.ID_Изделия";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AutomationAppDBDataSet.Изделия_принятые_на_складDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AutomationAppDBDataSet.Изделия_принятые_на_складDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AutomationAppDBDataSet.Изделия_принятые_на_складDataTable dataTable = new AutomationAppDBDataSet.Изделия_принятые_на_складDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet.Изделия_принятые_на_складDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AutomationAppDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Изделия_принятые_на_склад");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Принятого_изделия, int Original_ID_Маршрутного_листа, int Original_Количество, int Original_Сорт) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Принятого_изделия));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_Маршрутного_листа));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Количество));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Сорт));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_Маршрутного_листа, int Количество, int Сорт) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Маршрутного_листа));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Количество));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Сорт));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Маршрутного_листа, int Количество, int Сорт, int Original_ID_Принятого_изделия, int Original_ID_Маршрутного_листа, int Original_Количество, int Original_Сорт, int ID_Принятого_изделия) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Маршрутного_листа));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Количество));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Сорт));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID_Принятого_изделия));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_Маршрутного_листа));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_Количество));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_Сорт));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(ID_Принятого_изделия));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Маршрутного_листа, int Количество, int Сорт, int Original_ID_Принятого_изделия, int Original_ID_Маршрутного_листа, int Original_Количество, int Original_Сорт) {
            return this.Update(ID_Маршрутного_листа, Количество, Сорт, Original_ID_Принятого_изделия, Original_ID_Маршрутного_листа, Original_Количество, Original_Сорт, Original_ID_Принятого_изделия);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private ИзделияTableAdapter _изделияTableAdapter;
        
        private Модели_изделияTableAdapter _модели_изделияTableAdapter;
        
        private Модели_тканиTableAdapter _модели_тканиTableAdapter;
        
        private ПоставщикиTableAdapter _поставщикиTableAdapter;
        
        private Приходные_ордера_на_тканьTableAdapter _приходные_ордера_на_тканьTableAdapter;
        
        private Приходные_ордера_на_фурнитуруTableAdapter _приходные_ордера_на_фурнитуруTableAdapter;
        
        private ТканиTableAdapter _тканиTableAdapter;
        
        private ФурнитураTableAdapter _фурнитураTableAdapter;
        
        private ЦехаTableAdapter _цехаTableAdapter;
        
        private Модели_фурнитурыTableAdapter _модели_фурнитурыTableAdapter;
        
        private АвтомобилиTableAdapter _автомобилиTableAdapter;
        
        private Материальные_ценности_по_ордеру_на_фурнитуруTableAdapter _материальные_ценности_по_ордеру_на_фурнитуруTableAdapter;
        
        private Склад_фурнитурыTableAdapter _склад_фурнитурыTableAdapter;
        
        private Фурнитура_по_лимитно_заборной_картеTableAdapter _фурнитура_по_лимитно_заборной_картеTableAdapter;
        
        private Склад_тканиTableAdapter _склад_тканиTableAdapter;
        
        private Ткань_для_расчётной_картыTableAdapter _ткань_для_расчётной_картыTableAdapter;
        
        private Лимитно_заборные_картыTableAdapter _лимитно_заборные_картыTableAdapter;
        
        private ВодителиTableAdapter _водителиTableAdapter;
        
        private Товарные_накладныеTableAdapter _товарные_накладныеTableAdapter;
        
        private Расчётные_картыTableAdapter _расчётные_картыTableAdapter;
        
        private КонтрагентыTableAdapter _контрагентыTableAdapter;
        
        private Контрагенты_товарно_транспортной_накладнойTableAdapter _контрагенты_товарно_транспортной_накладнойTableAdapter;
        
        private Контрагенты_товарной_накладнойTableAdapter _контрагенты_товарной_накладнойTableAdapter;
        
        private Товарно_транспортные_накладныеTableAdapter _товарно_транспортные_накладныеTableAdapter;
        
        private Товарный_раздел_товарно_транспортной_накладнойTableAdapter _товарный_раздел_товарно_транспортной_накладнойTableAdapter;
        
        private БригадыTableAdapter _бригадыTableAdapter;
        
        private Маршрутные_листыTableAdapter _маршрутные_листыTableAdapter;
        
        private Материальные_ценности_по_ордеру_на_тканьTableAdapter _материальные_ценности_по_ордеру_на_тканьTableAdapter;
        
        private Склад_готовой_продукцииTableAdapter _склад_готовой_продукцииTableAdapter;
        
        private Товарный_раздел_товарной_накладнойTableAdapter _товарный_раздел_товарной_накладнойTableAdapter;
        
        private Изделия_принятые_на_складTableAdapter _изделия_принятые_на_складTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ИзделияTableAdapter ИзделияTableAdapter {
            get {
                return this._изделияTableAdapter;
            }
            set {
                this._изделияTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Модели_изделияTableAdapter Модели_изделияTableAdapter {
            get {
                return this._модели_изделияTableAdapter;
            }
            set {
                this._модели_изделияTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Модели_тканиTableAdapter Модели_тканиTableAdapter {
            get {
                return this._модели_тканиTableAdapter;
            }
            set {
                this._модели_тканиTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ПоставщикиTableAdapter ПоставщикиTableAdapter {
            get {
                return this._поставщикиTableAdapter;
            }
            set {
                this._поставщикиTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Приходные_ордера_на_тканьTableAdapter Приходные_ордера_на_тканьTableAdapter {
            get {
                return this._приходные_ордера_на_тканьTableAdapter;
            }
            set {
                this._приходные_ордера_на_тканьTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Приходные_ордера_на_фурнитуруTableAdapter Приходные_ордера_на_фурнитуруTableAdapter {
            get {
                return this._приходные_ордера_на_фурнитуруTableAdapter;
            }
            set {
                this._приходные_ордера_на_фурнитуруTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ТканиTableAdapter ТканиTableAdapter {
            get {
                return this._тканиTableAdapter;
            }
            set {
                this._тканиTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ФурнитураTableAdapter ФурнитураTableAdapter {
            get {
                return this._фурнитураTableAdapter;
            }
            set {
                this._фурнитураTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ЦехаTableAdapter ЦехаTableAdapter {
            get {
                return this._цехаTableAdapter;
            }
            set {
                this._цехаTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Модели_фурнитурыTableAdapter Модели_фурнитурыTableAdapter {
            get {
                return this._модели_фурнитурыTableAdapter;
            }
            set {
                this._модели_фурнитурыTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public АвтомобилиTableAdapter АвтомобилиTableAdapter {
            get {
                return this._автомобилиTableAdapter;
            }
            set {
                this._автомобилиTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Материальные_ценности_по_ордеру_на_фурнитуруTableAdapter Материальные_ценности_по_ордеру_на_фурнитуруTableAdapter {
            get {
                return this._материальные_ценности_по_ордеру_на_фурнитуруTableAdapter;
            }
            set {
                this._материальные_ценности_по_ордеру_на_фурнитуруTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Склад_фурнитурыTableAdapter Склад_фурнитурыTableAdapter {
            get {
                return this._склад_фурнитурыTableAdapter;
            }
            set {
                this._склад_фурнитурыTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Фурнитура_по_лимитно_заборной_картеTableAdapter Фурнитура_по_лимитно_заборной_картеTableAdapter {
            get {
                return this._фурнитура_по_лимитно_заборной_картеTableAdapter;
            }
            set {
                this._фурнитура_по_лимитно_заборной_картеTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Склад_тканиTableAdapter Склад_тканиTableAdapter {
            get {
                return this._склад_тканиTableAdapter;
            }
            set {
                this._склад_тканиTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Ткань_для_расчётной_картыTableAdapter Ткань_для_расчётной_картыTableAdapter {
            get {
                return this._ткань_для_расчётной_картыTableAdapter;
            }
            set {
                this._ткань_для_расчётной_картыTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Лимитно_заборные_картыTableAdapter Лимитно_заборные_картыTableAdapter {
            get {
                return this._лимитно_заборные_картыTableAdapter;
            }
            set {
                this._лимитно_заборные_картыTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ВодителиTableAdapter ВодителиTableAdapter {
            get {
                return this._водителиTableAdapter;
            }
            set {
                this._водителиTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Товарные_накладныеTableAdapter Товарные_накладныеTableAdapter {
            get {
                return this._товарные_накладныеTableAdapter;
            }
            set {
                this._товарные_накладныеTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Расчётные_картыTableAdapter Расчётные_картыTableAdapter {
            get {
                return this._расчётные_картыTableAdapter;
            }
            set {
                this._расчётные_картыTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public КонтрагентыTableAdapter КонтрагентыTableAdapter {
            get {
                return this._контрагентыTableAdapter;
            }
            set {
                this._контрагентыTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Контрагенты_товарно_транспортной_накладнойTableAdapter Контрагенты_товарно_транспортной_накладнойTableAdapter {
            get {
                return this._контрагенты_товарно_транспортной_накладнойTableAdapter;
            }
            set {
                this._контрагенты_товарно_транспортной_накладнойTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Контрагенты_товарной_накладнойTableAdapter Контрагенты_товарной_накладнойTableAdapter {
            get {
                return this._контрагенты_товарной_накладнойTableAdapter;
            }
            set {
                this._контрагенты_товарной_накладнойTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Товарно_транспортные_накладныеTableAdapter Товарно_транспортные_накладныеTableAdapter {
            get {
                return this._товарно_транспортные_накладныеTableAdapter;
            }
            set {
                this._товарно_транспортные_накладныеTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Товарный_раздел_товарно_транспортной_накладнойTableAdapter Товарный_раздел_товарно_транспортной_накладнойTableAdapter {
            get {
                return this._товарный_раздел_товарно_транспортной_накладнойTableAdapter;
            }
            set {
                this._товарный_раздел_товарно_транспортной_накладнойTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public БригадыTableAdapter БригадыTableAdapter {
            get {
                return this._бригадыTableAdapter;
            }
            set {
                this._бригадыTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Маршрутные_листыTableAdapter Маршрутные_листыTableAdapter {
            get {
                return this._маршрутные_листыTableAdapter;
            }
            set {
                this._маршрутные_листыTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Материальные_ценности_по_ордеру_на_тканьTableAdapter Материальные_ценности_по_ордеру_на_тканьTableAdapter {
            get {
                return this._материальные_ценности_по_ордеру_на_тканьTableAdapter;
            }
            set {
                this._материальные_ценности_по_ордеру_на_тканьTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Склад_готовой_продукцииTableAdapter Склад_готовой_продукцииTableAdapter {
            get {
                return this._склад_готовой_продукцииTableAdapter;
            }
            set {
                this._склад_готовой_продукцииTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Товарный_раздел_товарной_накладнойTableAdapter Товарный_раздел_товарной_накладнойTableAdapter {
            get {
                return this._товарный_раздел_товарной_накладнойTableAdapter;
            }
            set {
                this._товарный_раздел_товарной_накладнойTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Изделия_принятые_на_складTableAdapter Изделия_принятые_на_складTableAdapter {
            get {
                return this._изделия_принятые_на_складTableAdapter;
            }
            set {
                this._изделия_принятые_на_складTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._изделияTableAdapter != null) 
                            && (this._изделияTableAdapter.Connection != null))) {
                    return this._изделияTableAdapter.Connection;
                }
                if (((this._модели_изделияTableAdapter != null) 
                            && (this._модели_изделияTableAdapter.Connection != null))) {
                    return this._модели_изделияTableAdapter.Connection;
                }
                if (((this._модели_тканиTableAdapter != null) 
                            && (this._модели_тканиTableAdapter.Connection != null))) {
                    return this._модели_тканиTableAdapter.Connection;
                }
                if (((this._поставщикиTableAdapter != null) 
                            && (this._поставщикиTableAdapter.Connection != null))) {
                    return this._поставщикиTableAdapter.Connection;
                }
                if (((this._приходные_ордера_на_тканьTableAdapter != null) 
                            && (this._приходные_ордера_на_тканьTableAdapter.Connection != null))) {
                    return this._приходные_ордера_на_тканьTableAdapter.Connection;
                }
                if (((this._приходные_ордера_на_фурнитуруTableAdapter != null) 
                            && (this._приходные_ордера_на_фурнитуруTableAdapter.Connection != null))) {
                    return this._приходные_ордера_на_фурнитуруTableAdapter.Connection;
                }
                if (((this._тканиTableAdapter != null) 
                            && (this._тканиTableAdapter.Connection != null))) {
                    return this._тканиTableAdapter.Connection;
                }
                if (((this._фурнитураTableAdapter != null) 
                            && (this._фурнитураTableAdapter.Connection != null))) {
                    return this._фурнитураTableAdapter.Connection;
                }
                if (((this._цехаTableAdapter != null) 
                            && (this._цехаTableAdapter.Connection != null))) {
                    return this._цехаTableAdapter.Connection;
                }
                if (((this._модели_фурнитурыTableAdapter != null) 
                            && (this._модели_фурнитурыTableAdapter.Connection != null))) {
                    return this._модели_фурнитурыTableAdapter.Connection;
                }
                if (((this._автомобилиTableAdapter != null) 
                            && (this._автомобилиTableAdapter.Connection != null))) {
                    return this._автомобилиTableAdapter.Connection;
                }
                if (((this._материальные_ценности_по_ордеру_на_фурнитуруTableAdapter != null) 
                            && (this._материальные_ценности_по_ордеру_на_фурнитуруTableAdapter.Connection != null))) {
                    return this._материальные_ценности_по_ордеру_на_фурнитуруTableAdapter.Connection;
                }
                if (((this._склад_фурнитурыTableAdapter != null) 
                            && (this._склад_фурнитурыTableAdapter.Connection != null))) {
                    return this._склад_фурнитурыTableAdapter.Connection;
                }
                if (((this._фурнитура_по_лимитно_заборной_картеTableAdapter != null) 
                            && (this._фурнитура_по_лимитно_заборной_картеTableAdapter.Connection != null))) {
                    return this._фурнитура_по_лимитно_заборной_картеTableAdapter.Connection;
                }
                if (((this._склад_тканиTableAdapter != null) 
                            && (this._склад_тканиTableAdapter.Connection != null))) {
                    return this._склад_тканиTableAdapter.Connection;
                }
                if (((this._ткань_для_расчётной_картыTableAdapter != null) 
                            && (this._ткань_для_расчётной_картыTableAdapter.Connection != null))) {
                    return this._ткань_для_расчётной_картыTableAdapter.Connection;
                }
                if (((this._лимитно_заборные_картыTableAdapter != null) 
                            && (this._лимитно_заборные_картыTableAdapter.Connection != null))) {
                    return this._лимитно_заборные_картыTableAdapter.Connection;
                }
                if (((this._водителиTableAdapter != null) 
                            && (this._водителиTableAdapter.Connection != null))) {
                    return this._водителиTableAdapter.Connection;
                }
                if (((this._товарные_накладныеTableAdapter != null) 
                            && (this._товарные_накладныеTableAdapter.Connection != null))) {
                    return this._товарные_накладныеTableAdapter.Connection;
                }
                if (((this._расчётные_картыTableAdapter != null) 
                            && (this._расчётные_картыTableAdapter.Connection != null))) {
                    return this._расчётные_картыTableAdapter.Connection;
                }
                if (((this._контрагентыTableAdapter != null) 
                            && (this._контрагентыTableAdapter.Connection != null))) {
                    return this._контрагентыTableAdapter.Connection;
                }
                if (((this._контрагенты_товарно_транспортной_накладнойTableAdapter != null) 
                            && (this._контрагенты_товарно_транспортной_накладнойTableAdapter.Connection != null))) {
                    return this._контрагенты_товарно_транспортной_накладнойTableAdapter.Connection;
                }
                if (((this._контрагенты_товарной_накладнойTableAdapter != null) 
                            && (this._контрагенты_товарной_накладнойTableAdapter.Connection != null))) {
                    return this._контрагенты_товарной_накладнойTableAdapter.Connection;
                }
                if (((this._товарно_транспортные_накладныеTableAdapter != null) 
                            && (this._товарно_транспортные_накладныеTableAdapter.Connection != null))) {
                    return this._товарно_транспортные_накладныеTableAdapter.Connection;
                }
                if (((this._товарный_раздел_товарно_транспортной_накладнойTableAdapter != null) 
                            && (this._товарный_раздел_товарно_транспортной_накладнойTableAdapter.Connection != null))) {
                    return this._товарный_раздел_товарно_транспортной_накладнойTableAdapter.Connection;
                }
                if (((this._бригадыTableAdapter != null) 
                            && (this._бригадыTableAdapter.Connection != null))) {
                    return this._бригадыTableAdapter.Connection;
                }
                if (((this._маршрутные_листыTableAdapter != null) 
                            && (this._маршрутные_листыTableAdapter.Connection != null))) {
                    return this._маршрутные_листыTableAdapter.Connection;
                }
                if (((this._материальные_ценности_по_ордеру_на_тканьTableAdapter != null) 
                            && (this._материальные_ценности_по_ордеру_на_тканьTableAdapter.Connection != null))) {
                    return this._материальные_ценности_по_ордеру_на_тканьTableAdapter.Connection;
                }
                if (((this._склад_готовой_продукцииTableAdapter != null) 
                            && (this._склад_готовой_продукцииTableAdapter.Connection != null))) {
                    return this._склад_готовой_продукцииTableAdapter.Connection;
                }
                if (((this._товарный_раздел_товарной_накладнойTableAdapter != null) 
                            && (this._товарный_раздел_товарной_накладнойTableAdapter.Connection != null))) {
                    return this._товарный_раздел_товарной_накладнойTableAdapter.Connection;
                }
                if (((this._изделия_принятые_на_складTableAdapter != null) 
                            && (this._изделия_принятые_на_складTableAdapter.Connection != null))) {
                    return this._изделия_принятые_на_складTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._изделияTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._модели_изделияTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._модели_тканиTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._поставщикиTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._приходные_ордера_на_тканьTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._приходные_ордера_на_фурнитуруTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._тканиTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._фурнитураTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._цехаTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._модели_фурнитурыTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._автомобилиTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._материальные_ценности_по_ордеру_на_фурнитуруTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._склад_фурнитурыTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._фурнитура_по_лимитно_заборной_картеTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._склад_тканиTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._ткань_для_расчётной_картыTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._лимитно_заборные_картыTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._водителиTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._товарные_накладныеTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._расчётные_картыTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._контрагентыTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._контрагенты_товарно_транспортной_накладнойTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._контрагенты_товарной_накладнойTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._товарно_транспортные_накладныеTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._товарный_раздел_товарно_транспортной_накладнойTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._бригадыTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._маршрутные_листыTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._материальные_ценности_по_ордеру_на_тканьTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._склад_готовой_продукцииTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._товарный_раздел_товарной_накладнойTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._изделия_принятые_на_складTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(AutomationAppDBDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._поставщикиTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Поставщики.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._поставщикиTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._приходные_ордера_на_тканьTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Приходные_ордера_на_ткань.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._приходные_ордера_на_тканьTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._изделияTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Изделия.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._изделияTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._тканиTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Ткани.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._тканиTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._фурнитураTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Фурнитура.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._фурнитураTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._материальные_ценности_по_ордеру_на_тканьTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Материальные_ценности_по_ордеру_на_ткань.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._материальные_ценности_по_ордеру_на_тканьTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._модели_изделияTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Модели_изделия.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._модели_изделияTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._модели_тканиTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Модели_ткани.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._модели_тканиTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._модели_фурнитурыTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Модели_фурнитуры.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._модели_фурнитурыTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._автомобилиTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Автомобили.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._автомобилиTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._водителиTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Водители.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._водителиTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._контрагентыTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Контрагенты.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._контрагентыTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._расчётные_картыTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Расчётные_карты.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._расчётные_картыTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._товарные_накладныеTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Товарные_накладные.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._товарные_накладныеTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._лимитно_заборные_картыTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Лимитно_заборные_карты.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._лимитно_заборные_картыTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._склад_готовой_продукцииTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Склад_готовой_продукции.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._склад_готовой_продукцииTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._склад_тканиTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Склад_ткани.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._склад_тканиTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._склад_фурнитурыTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Склад_фурнитуры.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._склад_фурнитурыTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._цехаTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Цеха.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._цехаTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._приходные_ордера_на_фурнитуруTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Приходные_ордера_на_фурнитуру.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._приходные_ордера_на_фурнитуруTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._маршрутные_листыTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Маршрутные_листы.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._маршрутные_листыTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._товарно_транспортные_накладныеTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Товарно_транспортные_накладные.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._товарно_транспортные_накладныеTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._бригадыTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Бригады.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._бригадыTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._ткань_для_расчётной_картыTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Ткань_для_расчётной_карты.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._ткань_для_расчётной_картыTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._контрагенты_товарной_накладнойTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Контрагенты_товарной_накладной.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._контрагенты_товарной_накладнойTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._контрагенты_товарно_транспортной_накладнойTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Контрагенты_товарно_транспортной_накладной.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._контрагенты_товарно_транспортной_накладнойTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._товарный_раздел_товарной_накладнойTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Товарный_раздел_товарной_накладной.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._товарный_раздел_товарной_накладнойTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._фурнитура_по_лимитно_заборной_картеTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Фурнитура_по_лимитно_заборной_карте.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._фурнитура_по_лимитно_заборной_картеTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._материальные_ценности_по_ордеру_на_фурнитуруTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Материальные_ценности_по_ордеру_на_фурнитуру.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._материальные_ценности_по_ордеру_на_фурнитуруTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._товарный_раздел_товарно_транспортной_накладнойTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Товарный_раздел_товарно_транспортной_накладной.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._товарный_раздел_товарно_транспортной_накладнойTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._изделия_принятые_на_складTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Изделия_принятые_на_склад.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._изделия_принятые_на_складTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(AutomationAppDBDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._поставщикиTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Поставщики.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._поставщикиTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._приходные_ордера_на_тканьTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Приходные_ордера_на_ткань.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._приходные_ордера_на_тканьTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._изделияTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Изделия.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._изделияTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._тканиTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Ткани.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._тканиTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._фурнитураTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Фурнитура.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._фурнитураTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._материальные_ценности_по_ордеру_на_тканьTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Материальные_ценности_по_ордеру_на_ткань.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._материальные_ценности_по_ордеру_на_тканьTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._модели_изделияTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Модели_изделия.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._модели_изделияTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._модели_тканиTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Модели_ткани.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._модели_тканиTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._модели_фурнитурыTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Модели_фурнитуры.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._модели_фурнитурыTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._автомобилиTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Автомобили.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._автомобилиTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._водителиTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Водители.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._водителиTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._контрагентыTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Контрагенты.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._контрагентыTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._расчётные_картыTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Расчётные_карты.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._расчётные_картыTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._товарные_накладныеTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Товарные_накладные.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._товарные_накладныеTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._лимитно_заборные_картыTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Лимитно_заборные_карты.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._лимитно_заборные_картыTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._склад_готовой_продукцииTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Склад_готовой_продукции.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._склад_готовой_продукцииTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._склад_тканиTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Склад_ткани.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._склад_тканиTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._склад_фурнитурыTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Склад_фурнитуры.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._склад_фурнитурыTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._цехаTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Цеха.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._цехаTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._приходные_ордера_на_фурнитуруTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Приходные_ордера_на_фурнитуру.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._приходные_ордера_на_фурнитуруTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._маршрутные_листыTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Маршрутные_листы.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._маршрутные_листыTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._товарно_транспортные_накладныеTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Товарно_транспортные_накладные.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._товарно_транспортные_накладныеTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._бригадыTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Бригады.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._бригадыTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._ткань_для_расчётной_картыTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Ткань_для_расчётной_карты.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._ткань_для_расчётной_картыTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._контрагенты_товарной_накладнойTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Контрагенты_товарной_накладной.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._контрагенты_товарной_накладнойTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._контрагенты_товарно_транспортной_накладнойTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Контрагенты_товарно_транспортной_накладной.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._контрагенты_товарно_транспортной_накладнойTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._товарный_раздел_товарной_накладнойTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Товарный_раздел_товарной_накладной.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._товарный_раздел_товарной_накладнойTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._фурнитура_по_лимитно_заборной_картеTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Фурнитура_по_лимитно_заборной_карте.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._фурнитура_по_лимитно_заборной_картеTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._материальные_ценности_по_ордеру_на_фурнитуруTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Материальные_ценности_по_ордеру_на_фурнитуру.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._материальные_ценности_по_ордеру_на_фурнитуруTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._товарный_раздел_товарно_транспортной_накладнойTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Товарный_раздел_товарно_транспортной_накладной.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._товарный_раздел_товарно_транспортной_накладнойTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._изделия_принятые_на_складTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Изделия_принятые_на_склад.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._изделия_принятые_на_складTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(AutomationAppDBDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._изделия_принятые_на_складTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Изделия_принятые_на_склад.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._изделия_принятые_на_складTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._товарный_раздел_товарно_транспортной_накладнойTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Товарный_раздел_товарно_транспортной_накладной.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._товарный_раздел_товарно_транспортной_накладнойTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._материальные_ценности_по_ордеру_на_фурнитуруTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Материальные_ценности_по_ордеру_на_фурнитуру.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._материальные_ценности_по_ордеру_на_фурнитуруTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._фурнитура_по_лимитно_заборной_картеTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Фурнитура_по_лимитно_заборной_карте.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._фурнитура_по_лимитно_заборной_картеTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._товарный_раздел_товарной_накладнойTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Товарный_раздел_товарной_накладной.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._товарный_раздел_товарной_накладнойTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._контрагенты_товарно_транспортной_накладнойTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Контрагенты_товарно_транспортной_накладной.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._контрагенты_товарно_транспортной_накладнойTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._контрагенты_товарной_накладнойTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Контрагенты_товарной_накладной.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._контрагенты_товарной_накладнойTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._ткань_для_расчётной_картыTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Ткань_для_расчётной_карты.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._ткань_для_расчётной_картыTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._бригадыTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Бригады.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._бригадыTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._товарно_транспортные_накладныеTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Товарно_транспортные_накладные.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._товарно_транспортные_накладныеTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._маршрутные_листыTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Маршрутные_листы.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._маршрутные_листыTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._приходные_ордера_на_фурнитуруTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Приходные_ордера_на_фурнитуру.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._приходные_ордера_на_фурнитуруTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._цехаTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Цеха.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._цехаTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._склад_фурнитурыTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Склад_фурнитуры.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._склад_фурнитурыTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._склад_тканиTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Склад_ткани.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._склад_тканиTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._склад_готовой_продукцииTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Склад_готовой_продукции.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._склад_готовой_продукцииTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._лимитно_заборные_картыTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Лимитно_заборные_карты.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._лимитно_заборные_картыTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._товарные_накладныеTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Товарные_накладные.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._товарные_накладныеTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._расчётные_картыTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Расчётные_карты.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._расчётные_картыTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._контрагентыTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Контрагенты.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._контрагентыTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._водителиTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Водители.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._водителиTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._автомобилиTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Автомобили.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._автомобилиTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._модели_фурнитурыTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Модели_фурнитуры.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._модели_фурнитурыTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._модели_тканиTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Модели_ткани.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._модели_тканиTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._модели_изделияTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Модели_изделия.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._модели_изделияTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._материальные_ценности_по_ордеру_на_тканьTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Материальные_ценности_по_ордеру_на_ткань.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._материальные_ценности_по_ордеру_на_тканьTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._фурнитураTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Фурнитура.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._фурнитураTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._тканиTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Ткани.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._тканиTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._изделияTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Изделия.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._изделияTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._приходные_ордера_на_тканьTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Приходные_ордера_на_ткань.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._приходные_ордера_на_тканьTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._поставщикиTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Поставщики.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._поставщикиTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(AutomationAppDBDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._изделияTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._изделияTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._модели_изделияTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._модели_изделияTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._модели_тканиTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._модели_тканиTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._поставщикиTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._поставщикиTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._приходные_ордера_на_тканьTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._приходные_ордера_на_тканьTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._приходные_ордера_на_фурнитуруTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._приходные_ордера_на_фурнитуруTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._тканиTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._тканиTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._фурнитураTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._фурнитураTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._цехаTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._цехаTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._модели_фурнитурыTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._модели_фурнитурыTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._автомобилиTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._автомобилиTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._материальные_ценности_по_ордеру_на_фурнитуруTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._материальные_ценности_по_ордеру_на_фурнитуруTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._склад_фурнитурыTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._склад_фурнитурыTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._фурнитура_по_лимитно_заборной_картеTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._фурнитура_по_лимитно_заборной_картеTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._склад_тканиTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._склад_тканиTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._ткань_для_расчётной_картыTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._ткань_для_расчётной_картыTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._лимитно_заборные_картыTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._лимитно_заборные_картыTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._водителиTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._водителиTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._товарные_накладныеTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._товарные_накладныеTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._расчётные_картыTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._расчётные_картыTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._контрагентыTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._контрагентыTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._контрагенты_товарно_транспортной_накладнойTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._контрагенты_товарно_транспортной_накладнойTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._контрагенты_товарной_накладнойTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._контрагенты_товарной_накладнойTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._товарно_транспортные_накладныеTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._товарно_транспортные_накладныеTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._товарный_раздел_товарно_транспортной_накладнойTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._товарный_раздел_товарно_транспортной_накладнойTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._бригадыTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._бригадыTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._маршрутные_листыTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._маршрутные_листыTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._материальные_ценности_по_ордеру_на_тканьTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._материальные_ценности_по_ордеру_на_тканьTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._склад_готовой_продукцииTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._склад_готовой_продукцииTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._товарный_раздел_товарной_накладнойTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._товарный_раздел_товарной_накладнойTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._изделия_принятые_на_складTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._изделия_принятые_на_складTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager не содержит сведений о подключении. Укажите для каждого адапт" +
                        "ера таблицы TableAdapterManager допустимый экземпляр адаптера таблицы.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("Не удается начать транзакцию. Текущее соединение данных не поддерживает транзакци" +
                        "и или текущее состояние не позволяет начать транзакцию.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._изделияTableAdapter != null)) {
                    revertConnections.Add(this._изделияTableAdapter, this._изделияTableAdapter.Connection);
                    this._изделияTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._изделияTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._изделияTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._изделияTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._изделияTableAdapter.Adapter);
                    }
                }
                if ((this._модели_изделияTableAdapter != null)) {
                    revertConnections.Add(this._модели_изделияTableAdapter, this._модели_изделияTableAdapter.Connection);
                    this._модели_изделияTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._модели_изделияTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._модели_изделияTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._модели_изделияTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._модели_изделияTableAdapter.Adapter);
                    }
                }
                if ((this._модели_тканиTableAdapter != null)) {
                    revertConnections.Add(this._модели_тканиTableAdapter, this._модели_тканиTableAdapter.Connection);
                    this._модели_тканиTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._модели_тканиTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._модели_тканиTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._модели_тканиTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._модели_тканиTableAdapter.Adapter);
                    }
                }
                if ((this._поставщикиTableAdapter != null)) {
                    revertConnections.Add(this._поставщикиTableAdapter, this._поставщикиTableAdapter.Connection);
                    this._поставщикиTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._поставщикиTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._поставщикиTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._поставщикиTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._поставщикиTableAdapter.Adapter);
                    }
                }
                if ((this._приходные_ордера_на_тканьTableAdapter != null)) {
                    revertConnections.Add(this._приходные_ордера_на_тканьTableAdapter, this._приходные_ордера_на_тканьTableAdapter.Connection);
                    this._приходные_ордера_на_тканьTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._приходные_ордера_на_тканьTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._приходные_ордера_на_тканьTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._приходные_ордера_на_тканьTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._приходные_ордера_на_тканьTableAdapter.Adapter);
                    }
                }
                if ((this._приходные_ордера_на_фурнитуруTableAdapter != null)) {
                    revertConnections.Add(this._приходные_ордера_на_фурнитуруTableAdapter, this._приходные_ордера_на_фурнитуруTableAdapter.Connection);
                    this._приходные_ордера_на_фурнитуруTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._приходные_ордера_на_фурнитуруTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._приходные_ордера_на_фурнитуруTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._приходные_ордера_на_фурнитуруTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._приходные_ордера_на_фурнитуруTableAdapter.Adapter);
                    }
                }
                if ((this._тканиTableAdapter != null)) {
                    revertConnections.Add(this._тканиTableAdapter, this._тканиTableAdapter.Connection);
                    this._тканиTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._тканиTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._тканиTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._тканиTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._тканиTableAdapter.Adapter);
                    }
                }
                if ((this._фурнитураTableAdapter != null)) {
                    revertConnections.Add(this._фурнитураTableAdapter, this._фурнитураTableAdapter.Connection);
                    this._фурнитураTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._фурнитураTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._фурнитураTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._фурнитураTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._фурнитураTableAdapter.Adapter);
                    }
                }
                if ((this._цехаTableAdapter != null)) {
                    revertConnections.Add(this._цехаTableAdapter, this._цехаTableAdapter.Connection);
                    this._цехаTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._цехаTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._цехаTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._цехаTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._цехаTableAdapter.Adapter);
                    }
                }
                if ((this._модели_фурнитурыTableAdapter != null)) {
                    revertConnections.Add(this._модели_фурнитурыTableAdapter, this._модели_фурнитурыTableAdapter.Connection);
                    this._модели_фурнитурыTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._модели_фурнитурыTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._модели_фурнитурыTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._модели_фурнитурыTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._модели_фурнитурыTableAdapter.Adapter);
                    }
                }
                if ((this._автомобилиTableAdapter != null)) {
                    revertConnections.Add(this._автомобилиTableAdapter, this._автомобилиTableAdapter.Connection);
                    this._автомобилиTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._автомобилиTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._автомобилиTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._автомобилиTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._автомобилиTableAdapter.Adapter);
                    }
                }
                if ((this._материальные_ценности_по_ордеру_на_фурнитуруTableAdapter != null)) {
                    revertConnections.Add(this._материальные_ценности_по_ордеру_на_фурнитуруTableAdapter, this._материальные_ценности_по_ордеру_на_фурнитуруTableAdapter.Connection);
                    this._материальные_ценности_по_ордеру_на_фурнитуруTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._материальные_ценности_по_ордеру_на_фурнитуруTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._материальные_ценности_по_ордеру_на_фурнитуруTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._материальные_ценности_по_ордеру_на_фурнитуруTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._материальные_ценности_по_ордеру_на_фурнитуруTableAdapter.Adapter);
                    }
                }
                if ((this._склад_фурнитурыTableAdapter != null)) {
                    revertConnections.Add(this._склад_фурнитурыTableAdapter, this._склад_фурнитурыTableAdapter.Connection);
                    this._склад_фурнитурыTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._склад_фурнитурыTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._склад_фурнитурыTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._склад_фурнитурыTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._склад_фурнитурыTableAdapter.Adapter);
                    }
                }
                if ((this._фурнитура_по_лимитно_заборной_картеTableAdapter != null)) {
                    revertConnections.Add(this._фурнитура_по_лимитно_заборной_картеTableAdapter, this._фурнитура_по_лимитно_заборной_картеTableAdapter.Connection);
                    this._фурнитура_по_лимитно_заборной_картеTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._фурнитура_по_лимитно_заборной_картеTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._фурнитура_по_лимитно_заборной_картеTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._фурнитура_по_лимитно_заборной_картеTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._фурнитура_по_лимитно_заборной_картеTableAdapter.Adapter);
                    }
                }
                if ((this._склад_тканиTableAdapter != null)) {
                    revertConnections.Add(this._склад_тканиTableAdapter, this._склад_тканиTableAdapter.Connection);
                    this._склад_тканиTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._склад_тканиTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._склад_тканиTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._склад_тканиTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._склад_тканиTableAdapter.Adapter);
                    }
                }
                if ((this._ткань_для_расчётной_картыTableAdapter != null)) {
                    revertConnections.Add(this._ткань_для_расчётной_картыTableAdapter, this._ткань_для_расчётной_картыTableAdapter.Connection);
                    this._ткань_для_расчётной_картыTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._ткань_для_расчётной_картыTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._ткань_для_расчётной_картыTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._ткань_для_расчётной_картыTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._ткань_для_расчётной_картыTableAdapter.Adapter);
                    }
                }
                if ((this._лимитно_заборные_картыTableAdapter != null)) {
                    revertConnections.Add(this._лимитно_заборные_картыTableAdapter, this._лимитно_заборные_картыTableAdapter.Connection);
                    this._лимитно_заборные_картыTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._лимитно_заборные_картыTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._лимитно_заборные_картыTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._лимитно_заборные_картыTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._лимитно_заборные_картыTableAdapter.Adapter);
                    }
                }
                if ((this._водителиTableAdapter != null)) {
                    revertConnections.Add(this._водителиTableAdapter, this._водителиTableAdapter.Connection);
                    this._водителиTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._водителиTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._водителиTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._водителиTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._водителиTableAdapter.Adapter);
                    }
                }
                if ((this._товарные_накладныеTableAdapter != null)) {
                    revertConnections.Add(this._товарные_накладныеTableAdapter, this._товарные_накладныеTableAdapter.Connection);
                    this._товарные_накладныеTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._товарные_накладныеTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._товарные_накладныеTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._товарные_накладныеTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._товарные_накладныеTableAdapter.Adapter);
                    }
                }
                if ((this._расчётные_картыTableAdapter != null)) {
                    revertConnections.Add(this._расчётные_картыTableAdapter, this._расчётные_картыTableAdapter.Connection);
                    this._расчётные_картыTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._расчётные_картыTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._расчётные_картыTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._расчётные_картыTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._расчётные_картыTableAdapter.Adapter);
                    }
                }
                if ((this._контрагентыTableAdapter != null)) {
                    revertConnections.Add(this._контрагентыTableAdapter, this._контрагентыTableAdapter.Connection);
                    this._контрагентыTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._контрагентыTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._контрагентыTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._контрагентыTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._контрагентыTableAdapter.Adapter);
                    }
                }
                if ((this._контрагенты_товарно_транспортной_накладнойTableAdapter != null)) {
                    revertConnections.Add(this._контрагенты_товарно_транспортной_накладнойTableAdapter, this._контрагенты_товарно_транспортной_накладнойTableAdapter.Connection);
                    this._контрагенты_товарно_транспортной_накладнойTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._контрагенты_товарно_транспортной_накладнойTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._контрагенты_товарно_транспортной_накладнойTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._контрагенты_товарно_транспортной_накладнойTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._контрагенты_товарно_транспортной_накладнойTableAdapter.Adapter);
                    }
                }
                if ((this._контрагенты_товарной_накладнойTableAdapter != null)) {
                    revertConnections.Add(this._контрагенты_товарной_накладнойTableAdapter, this._контрагенты_товарной_накладнойTableAdapter.Connection);
                    this._контрагенты_товарной_накладнойTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._контрагенты_товарной_накладнойTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._контрагенты_товарной_накладнойTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._контрагенты_товарной_накладнойTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._контрагенты_товарной_накладнойTableAdapter.Adapter);
                    }
                }
                if ((this._товарно_транспортные_накладныеTableAdapter != null)) {
                    revertConnections.Add(this._товарно_транспортные_накладныеTableAdapter, this._товарно_транспортные_накладныеTableAdapter.Connection);
                    this._товарно_транспортные_накладныеTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._товарно_транспортные_накладныеTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._товарно_транспортные_накладныеTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._товарно_транспортные_накладныеTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._товарно_транспортные_накладныеTableAdapter.Adapter);
                    }
                }
                if ((this._товарный_раздел_товарно_транспортной_накладнойTableAdapter != null)) {
                    revertConnections.Add(this._товарный_раздел_товарно_транспортной_накладнойTableAdapter, this._товарный_раздел_товарно_транспортной_накладнойTableAdapter.Connection);
                    this._товарный_раздел_товарно_транспортной_накладнойTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._товарный_раздел_товарно_транспортной_накладнойTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._товарный_раздел_товарно_транспортной_накладнойTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._товарный_раздел_товарно_транспортной_накладнойTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._товарный_раздел_товарно_транспортной_накладнойTableAdapter.Adapter);
                    }
                }
                if ((this._бригадыTableAdapter != null)) {
                    revertConnections.Add(this._бригадыTableAdapter, this._бригадыTableAdapter.Connection);
                    this._бригадыTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._бригадыTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._бригадыTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._бригадыTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._бригадыTableAdapter.Adapter);
                    }
                }
                if ((this._маршрутные_листыTableAdapter != null)) {
                    revertConnections.Add(this._маршрутные_листыTableAdapter, this._маршрутные_листыTableAdapter.Connection);
                    this._маршрутные_листыTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._маршрутные_листыTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._маршрутные_листыTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._маршрутные_листыTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._маршрутные_листыTableAdapter.Adapter);
                    }
                }
                if ((this._материальные_ценности_по_ордеру_на_тканьTableAdapter != null)) {
                    revertConnections.Add(this._материальные_ценности_по_ордеру_на_тканьTableAdapter, this._материальные_ценности_по_ордеру_на_тканьTableAdapter.Connection);
                    this._материальные_ценности_по_ордеру_на_тканьTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._материальные_ценности_по_ордеру_на_тканьTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._материальные_ценности_по_ордеру_на_тканьTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._материальные_ценности_по_ордеру_на_тканьTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._материальные_ценности_по_ордеру_на_тканьTableAdapter.Adapter);
                    }
                }
                if ((this._склад_готовой_продукцииTableAdapter != null)) {
                    revertConnections.Add(this._склад_готовой_продукцииTableAdapter, this._склад_готовой_продукцииTableAdapter.Connection);
                    this._склад_готовой_продукцииTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._склад_готовой_продукцииTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._склад_готовой_продукцииTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._склад_готовой_продукцииTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._склад_готовой_продукцииTableAdapter.Adapter);
                    }
                }
                if ((this._товарный_раздел_товарной_накладнойTableAdapter != null)) {
                    revertConnections.Add(this._товарный_раздел_товарной_накладнойTableAdapter, this._товарный_раздел_товарной_накладнойTableAdapter.Connection);
                    this._товарный_раздел_товарной_накладнойTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._товарный_раздел_товарной_накладнойTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._товарный_раздел_товарной_накладнойTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._товарный_раздел_товарной_накладнойTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._товарный_раздел_товарной_накладнойTableAdapter.Adapter);
                    }
                }
                if ((this._изделия_принятые_на_складTableAdapter != null)) {
                    revertConnections.Add(this._изделия_принятые_на_складTableAdapter, this._изделия_принятые_на_складTableAdapter.Connection);
                    this._изделия_принятые_на_складTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._изделия_принятые_на_складTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._изделия_принятые_на_складTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._изделия_принятые_на_складTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._изделия_принятые_на_складTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._изделияTableAdapter != null)) {
                    this._изделияTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._изделияTableAdapter]));
                    this._изделияTableAdapter.Transaction = null;
                }
                if ((this._модели_изделияTableAdapter != null)) {
                    this._модели_изделияTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._модели_изделияTableAdapter]));
                    this._модели_изделияTableAdapter.Transaction = null;
                }
                if ((this._модели_тканиTableAdapter != null)) {
                    this._модели_тканиTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._модели_тканиTableAdapter]));
                    this._модели_тканиTableAdapter.Transaction = null;
                }
                if ((this._поставщикиTableAdapter != null)) {
                    this._поставщикиTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._поставщикиTableAdapter]));
                    this._поставщикиTableAdapter.Transaction = null;
                }
                if ((this._приходные_ордера_на_тканьTableAdapter != null)) {
                    this._приходные_ордера_на_тканьTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._приходные_ордера_на_тканьTableAdapter]));
                    this._приходные_ордера_на_тканьTableAdapter.Transaction = null;
                }
                if ((this._приходные_ордера_на_фурнитуруTableAdapter != null)) {
                    this._приходные_ордера_на_фурнитуруTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._приходные_ордера_на_фурнитуруTableAdapter]));
                    this._приходные_ордера_на_фурнитуруTableAdapter.Transaction = null;
                }
                if ((this._тканиTableAdapter != null)) {
                    this._тканиTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._тканиTableAdapter]));
                    this._тканиTableAdapter.Transaction = null;
                }
                if ((this._фурнитураTableAdapter != null)) {
                    this._фурнитураTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._фурнитураTableAdapter]));
                    this._фурнитураTableAdapter.Transaction = null;
                }
                if ((this._цехаTableAdapter != null)) {
                    this._цехаTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._цехаTableAdapter]));
                    this._цехаTableAdapter.Transaction = null;
                }
                if ((this._модели_фурнитурыTableAdapter != null)) {
                    this._модели_фурнитурыTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._модели_фурнитурыTableAdapter]));
                    this._модели_фурнитурыTableAdapter.Transaction = null;
                }
                if ((this._автомобилиTableAdapter != null)) {
                    this._автомобилиTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._автомобилиTableAdapter]));
                    this._автомобилиTableAdapter.Transaction = null;
                }
                if ((this._материальные_ценности_по_ордеру_на_фурнитуруTableAdapter != null)) {
                    this._материальные_ценности_по_ордеру_на_фурнитуруTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._материальные_ценности_по_ордеру_на_фурнитуруTableAdapter]));
                    this._материальные_ценности_по_ордеру_на_фурнитуруTableAdapter.Transaction = null;
                }
                if ((this._склад_фурнитурыTableAdapter != null)) {
                    this._склад_фурнитурыTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._склад_фурнитурыTableAdapter]));
                    this._склад_фурнитурыTableAdapter.Transaction = null;
                }
                if ((this._фурнитура_по_лимитно_заборной_картеTableAdapter != null)) {
                    this._фурнитура_по_лимитно_заборной_картеTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._фурнитура_по_лимитно_заборной_картеTableAdapter]));
                    this._фурнитура_по_лимитно_заборной_картеTableAdapter.Transaction = null;
                }
                if ((this._склад_тканиTableAdapter != null)) {
                    this._склад_тканиTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._склад_тканиTableAdapter]));
                    this._склад_тканиTableAdapter.Transaction = null;
                }
                if ((this._ткань_для_расчётной_картыTableAdapter != null)) {
                    this._ткань_для_расчётной_картыTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._ткань_для_расчётной_картыTableAdapter]));
                    this._ткань_для_расчётной_картыTableAdapter.Transaction = null;
                }
                if ((this._лимитно_заборные_картыTableAdapter != null)) {
                    this._лимитно_заборные_картыTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._лимитно_заборные_картыTableAdapter]));
                    this._лимитно_заборные_картыTableAdapter.Transaction = null;
                }
                if ((this._водителиTableAdapter != null)) {
                    this._водителиTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._водителиTableAdapter]));
                    this._водителиTableAdapter.Transaction = null;
                }
                if ((this._товарные_накладныеTableAdapter != null)) {
                    this._товарные_накладныеTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._товарные_накладныеTableAdapter]));
                    this._товарные_накладныеTableAdapter.Transaction = null;
                }
                if ((this._расчётные_картыTableAdapter != null)) {
                    this._расчётные_картыTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._расчётные_картыTableAdapter]));
                    this._расчётные_картыTableAdapter.Transaction = null;
                }
                if ((this._контрагентыTableAdapter != null)) {
                    this._контрагентыTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._контрагентыTableAdapter]));
                    this._контрагентыTableAdapter.Transaction = null;
                }
                if ((this._контрагенты_товарно_транспортной_накладнойTableAdapter != null)) {
                    this._контрагенты_товарно_транспортной_накладнойTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._контрагенты_товарно_транспортной_накладнойTableAdapter]));
                    this._контрагенты_товарно_транспортной_накладнойTableAdapter.Transaction = null;
                }
                if ((this._контрагенты_товарной_накладнойTableAdapter != null)) {
                    this._контрагенты_товарной_накладнойTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._контрагенты_товарной_накладнойTableAdapter]));
                    this._контрагенты_товарной_накладнойTableAdapter.Transaction = null;
                }
                if ((this._товарно_транспортные_накладныеTableAdapter != null)) {
                    this._товарно_транспортные_накладныеTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._товарно_транспортные_накладныеTableAdapter]));
                    this._товарно_транспортные_накладныеTableAdapter.Transaction = null;
                }
                if ((this._товарный_раздел_товарно_транспортной_накладнойTableAdapter != null)) {
                    this._товарный_раздел_товарно_транспортной_накладнойTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._товарный_раздел_товарно_транспортной_накладнойTableAdapter]));
                    this._товарный_раздел_товарно_транспортной_накладнойTableAdapter.Transaction = null;
                }
                if ((this._бригадыTableAdapter != null)) {
                    this._бригадыTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._бригадыTableAdapter]));
                    this._бригадыTableAdapter.Transaction = null;
                }
                if ((this._маршрутные_листыTableAdapter != null)) {
                    this._маршрутные_листыTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._маршрутные_листыTableAdapter]));
                    this._маршрутные_листыTableAdapter.Transaction = null;
                }
                if ((this._материальные_ценности_по_ордеру_на_тканьTableAdapter != null)) {
                    this._материальные_ценности_по_ордеру_на_тканьTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._материальные_ценности_по_ордеру_на_тканьTableAdapter]));
                    this._материальные_ценности_по_ордеру_на_тканьTableAdapter.Transaction = null;
                }
                if ((this._склад_готовой_продукцииTableAdapter != null)) {
                    this._склад_готовой_продукцииTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._склад_готовой_продукцииTableAdapter]));
                    this._склад_готовой_продукцииTableAdapter.Transaction = null;
                }
                if ((this._товарный_раздел_товарной_накладнойTableAdapter != null)) {
                    this._товарный_раздел_товарной_накладнойTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._товарный_раздел_товарной_накладнойTableAdapter]));
                    this._товарный_раздел_товарной_накладнойTableAdapter.Transaction = null;
                }
                if ((this._изделия_принятые_на_складTableAdapter != null)) {
                    this._изделия_принятые_на_складTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._изделия_принятые_на_складTableAdapter]));
                    this._изделия_принятые_на_складTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591